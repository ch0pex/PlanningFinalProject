INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py elevators/domain.pddl elevators/p03.pddl --sas-file 'output/eager_wastar([add()], w=5, k_best=10)/elevators/p03.txt.sas'
Parsing...
Parsing: [0.000s CPU, 0.010s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.021s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 50 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
562 relevant atoms
663 auxiliary atoms
1225 final queue length
1782 total queue pushes
Completing instantiation... [0.000s CPU, 0.009s wall-clock]
Instantiating: [0.020s CPU, 0.044s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.010s CPU, 0.010s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.014s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
10 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.016s wall-clock]
Reordering and filtering variables...
10 of 10 variables necessary.
0 of 10 mutex groups necessary.
340 of 340 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 10
Translator derived variables: 0
Translator facts: 73
Translator goal facts: 4
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 340
Translator axioms: 0
Translator task size: 1947
Translator peak memory: 32144 KB
Writing output... [0.000s CPU, 0.008s wall-clock]
Done! [0.070s CPU, 0.120s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=5, k_best=10)/elevators/p03.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=5, k_best=10)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=5, k_best=10)/elevators/p03.txt.sas'"'"''
[t=0.005205s, 10804 KB] reading input...
[t=0.013176s, 10804 KB] done reading input!
[t=0.021787s, 11192 KB] Simplifying 620 unary operators... done! [620 unary operators]
[t=0.026107s, 11192 KB] time to simplify: 0.004319s
[t=0.026252s, 11192 KB] Initializing additive heuristic...
[t=0.026316s, 11192 KB] Building successor generator...done!
[t=0.027207s, 11192 KB] peak memory difference for successor generator creation: 0 KB
[t=0.027266s, 11192 KB] time for successor generation creation: 0.000000s
[t=0.028340s, 11192 KB] Variables: 10
[t=0.028478s, 11192 KB] FactPairs: 73
[t=0.028573s, 11192 KB] Bytes per state: 4
[t=0.028608s, 11192 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.028783s, 11192 KB] New best heuristic value for add: 65
[t=0.028854s, 11192 KB] g=0, 1 evaluated, 0 expanded
[t=0.028886s, 11192 KB] Initial heuristic value for add: 65
[t=0.028925s, 11192 KB] pruning method: none
[t=0.028960s, 11192 KB] New best heuristic value for add: 44
[t=0.029017s, 11192 KB] g=6, 2 evaluated, 1 expanded
[t=0.029047s, 11192 KB] New best heuristic value for add: 41
[t=0.029898s, 11192 KB] g=12, 82 evaluated, 21 expanded
[t=0.029945s, 11192 KB] New best heuristic value for add: 40
[t=0.030010s, 11192 KB] g=13, 83 evaluated, 21 expanded
[t=0.030054s, 11192 KB] New best heuristic value for add: 37
[t=0.030367s, 11192 KB] g=13, 112 evaluated, 21 expanded
[t=0.030491s, 11192 KB] New best heuristic value for add: 36
[t=0.031345s, 11192 KB] g=31, 186 evaluated, 31 expanded
[t=0.031431s, 11192 KB] New best heuristic value for add: 34
[t=0.031693s, 11192 KB] g=33, 206 evaluated, 31 expanded
[t=0.031734s, 11192 KB] New best heuristic value for add: 29
[t=0.033216s, 11192 KB] g=19, 360 evaluated, 51 expanded
[t=0.033272s, 11192 KB] New best heuristic value for add: 27
[t=0.033333s, 11192 KB] g=21, 362 evaluated, 51 expanded
[t=0.033366s, 11192 KB] New best heuristic value for add: 25
[t=0.033938s, 11192 KB] g=52, 422 evaluated, 51 expanded
[t=0.033969s, 11192 KB] New best heuristic value for add: 21
[t=0.035658s, 11192 KB] g=30, 569 evaluated, 71 expanded
[t=0.035696s, 11192 KB] New best heuristic value for add: 20
[t=0.036123s, 11192 KB] g=27, 610 evaluated, 71 expanded
[t=0.036161s, 11192 KB] New best heuristic value for add: 14
[t=0.037279s, 11192 KB] g=33, 750 evaluated, 91 expanded, 1 reopened
[t=0.044953s, 11332 KB] New best heuristic value for add: 8
[t=0.047528s, 11332 KB] g=48, 1146 evaluated, 131 expanded, 1 reopened
[t=0.047579s, 11332 KB] New best heuristic value for add: 6
[t=0.048521s, 11332 KB] g=57, 1262 evaluated, 151 expanded, 1 reopened
[t=0.048561s, 11332 KB] New best heuristic value for add: 0
[t=0.048627s, 11332 KB] g=56, 1263 evaluated, 151 expanded, 1 reopened
[t=0.048668s, 11332 KB] Solution found!
[t=0.050193s, 11332 KB] Actual search time: 0.021234s
move-up-slow slow1-0 n5 n6 (6)
board p2 slow1-0 n6 n0 n1 (0)
move-down-slow slow1-0 n6 n4 (7)
leave p2 slow1-0 n4 n1 n0 (0)
board p3 slow1-0 n4 n0 n1 (0)
move-up-slow slow1-0 n4 n5 (6)
leave p3 slow1-0 n5 n1 n0 (0)
move-up-slow slow1-0 n5 n8 (8)
board p1 slow1-0 n8 n0 n1 (0)
move-down-slow slow1-0 n8 n7 (6)
board p0 slow0-0 n1 n0 n1 (0)
move-down-slow slow0-0 n1 n0 (6)
leave p0 slow0-0 n0 n1 n0 (0)
move-up-slow slow0-0 n0 n4 (9)
board p2 slow0-0 n4 n0 n1 (0)
move-down-slow slow0-0 n4 n1 (8)
leave p1 slow1-0 n7 n1 n0 (0)
leave p2 slow0-0 n1 n1 n0 (0)
[t=0.050265s, 11332 KB] Plan length: 18 step(s).
[t=0.050265s, 11332 KB] Plan cost: 56
[t=0.050265s, 11332 KB] Expanded 181 state(s).
[t=0.050265s, 11332 KB] Reopened 1 state(s).
[t=0.050265s, 11332 KB] Evaluated 1500 state(s).
[t=0.050265s, 11332 KB] Evaluations: 1500
[t=0.050265s, 11332 KB] Generated 2468 state(s).
[t=0.050265s, 11332 KB] Dead ends: 0 state(s).
[t=0.050265s, 11332 KB] Number of registered states: 1500
[t=0.050265s, 11332 KB] Int hash set load factor: 1500/2048 = 0.732422
[t=0.050265s, 11332 KB] Int hash set resizes: 11
[t=0.050265s, 11332 KB] Search time: 0.021657s
[t=0.050265s, 11332 KB] Total time: 0.050265s
Solution found.
Peak memory: 11332 KB
search exit code: 0

INFO     Planner time: 0.34s
