INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p03.pddl --sas-file 'output/eager_wastar([add()], w=5, k_best=10)/transport/p03.txt.sas'
Parsing...
Parsing: [0.010s CPU, 0.013s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.015s wall-clock]
Preparing model... [0.010s CPU, 0.003s wall-clock]
Generated 27 rules.
Computing model... [0.010s CPU, 0.017s wall-clock]
824 relevant atoms
832 auxiliary atoms
1656 final queue length
2796 total queue pushes
Completing instantiation... [0.020s CPU, 0.026s wall-clock]
Instantiating: [0.040s CPU, 0.063s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.010s CPU, 0.008s wall-clock]
Checking invariant weight... [0.000s CPU, 0.002s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.014s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.010s CPU, 0.003s wall-clock]
Translating task: [0.020s CPU, 0.025s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.019s wall-clock]
Reordering and filtering variables...
8 of 8 variables necessary.
0 of 8 mutex groups necessary.
628 of 628 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.004s wall-clock]
Translator variables: 8
Translator derived variables: 0
Translator facts: 72
Translator goal facts: 4
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 628
Translator axioms: 0
Translator task size: 3696
Translator peak memory: 33160 KB
Writing output... [0.000s CPU, 0.020s wall-clock]
Done! [0.110s CPU, 0.169s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=5, k_best=10)/transport/p03.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=5, k_best=10)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=5, k_best=10)/transport/p03.txt.sas'"'"''
[t=0.010660s, 10804 KB] reading input...
[t=0.018297s, 10928 KB] done reading input!
[t=0.025274s, 11324 KB] Simplifying 1204 unary operators... done! [1204 unary operators]
[t=0.026752s, 11324 KB] time to simplify: 0.001478s
[t=0.027040s, 11324 KB] Initializing additive heuristic...
[t=0.027138s, 11324 KB] Building successor generator...done!
[t=0.027509s, 11324 KB] peak memory difference for successor generator creation: 0 KB
[t=0.027582s, 11324 KB] time for successor generation creation: 0.000000s
[t=0.027623s, 11324 KB] Variables: 8
[t=0.027655s, 11324 KB] FactPairs: 72
[t=0.027685s, 11324 KB] Bytes per state: 4
[t=0.027715s, 11324 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.027778s, 11324 KB] New best heuristic value for add: 299
[t=0.027863s, 11324 KB] g=0, 1 evaluated, 0 expanded
[t=0.027895s, 11324 KB] Initial heuristic value for add: 299
[t=0.027931s, 11324 KB] pruning method: none
[t=0.027961s, 11324 KB] New best heuristic value for add: 260
[t=0.028085s, 11324 KB] g=34, 5 evaluated, 1 expanded
[t=0.028114s, 11324 KB] New best heuristic value for add: 232
[t=0.028268s, 11324 KB] g=62, 11 evaluated, 9 expanded
[t=0.028311s, 11324 KB] New best heuristic value for add: 225
[t=0.028585s, 11324 KB] g=35, 24 evaluated, 9 expanded
[t=0.028617s, 11324 KB] New best heuristic value for add: 197
[t=0.028998s, 11324 KB] g=63, 41 evaluated, 19 expanded
[t=0.029038s, 11324 KB] New best heuristic value for add: 195
[t=0.029797s, 11324 KB] g=64, 84 evaluated, 29 expanded
[t=0.029830s, 11324 KB] New best heuristic value for add: 176
[t=0.029919s, 11324 KB] g=85, 86 evaluated, 29 expanded
[t=0.029967s, 11324 KB] New best heuristic value for add: 173
[t=0.030744s, 11324 KB] g=86, 130 evaluated, 39 expanded
[t=0.030783s, 11324 KB] New best heuristic value for add: 167
[t=0.031173s, 11324 KB] g=92, 148 evaluated, 39 expanded
[t=0.031210s, 11324 KB] New best heuristic value for add: 166
[t=0.031875s, 11324 KB] g=93, 181 evaluated, 49 expanded
[t=0.031908s, 11324 KB] New best heuristic value for add: 160
[t=0.032001s, 11324 KB] g=108, 184 evaluated, 49 expanded
[t=0.032168s, 11324 KB] New best heuristic value for add: 159
[t=0.033068s, 11324 KB] g=109, 237 evaluated, 59 expanded
[t=0.033108s, 11324 KB] New best heuristic value for add: 151
[t=0.033998s, 11324 KB] g=137, 286 evaluated, 69 expanded
[t=0.034034s, 11324 KB] New best heuristic value for add: 145
[t=0.034519s, 11324 KB] g=143, 311 evaluated, 69 expanded
[t=0.034554s, 11324 KB] New best heuristic value for add: 144
[t=0.034724s, 11324 KB] g=137, 318 evaluated, 69 expanded
[t=0.034759s, 11324 KB] New best heuristic value for add: 143
[t=0.035023s, 11324 KB] g=131, 330 evaluated, 79 expanded
[t=0.035055s, 11324 KB] New best heuristic value for add: 109
[t=0.035873s, 11324 KB] g=178, 373 evaluated, 89 expanded
[t=0.035931s, 11324 KB] New best heuristic value for add: 108
[t=0.036670s, 11324 KB] g=200, 413 evaluated, 99 expanded
[t=0.036711s, 11324 KB] New best heuristic value for add: 93
[t=0.036783s, 11324 KB] g=194, 414 evaluated, 99 expanded
[t=0.036815s, 11324 KB] New best heuristic value for add: 85
[t=0.037044s, 11324 KB] g=202, 426 evaluated, 99 expanded
[t=0.037075s, 11460 KB] New best heuristic value for add: 63
[t=0.037626s, 11460 KB] g=224, 453 evaluated, 109 expanded
[t=0.037805s, 11460 KB] New best heuristic value for add: 62
[t=0.038700s, 11460 KB] g=225, 513 evaluated, 119 expanded
[t=0.038932s, 11460 KB] New best heuristic value for add: 61
[t=0.041040s, 11460 KB] g=226, 569 evaluated, 129 expanded
[t=0.043064s, 11460 KB] New best heuristic value for add: 60
[t=0.044527s, 11460 KB] g=264, 658 evaluated, 149 expanded
[t=0.044571s, 11460 KB] New best heuristic value for add: 24
[t=0.044678s, 11460 KB] g=300, 661 evaluated, 149 expanded
[t=0.044717s, 11460 KB] New best heuristic value for add: 23
[t=0.044846s, 11460 KB] g=301, 666 evaluated, 159 expanded
[t=0.044881s, 11460 KB] New best heuristic value for add: 2
[t=0.044932s, 11460 KB] g=322, 667 evaluated, 159 expanded
[t=0.044965s, 11460 KB] New best heuristic value for add: 1
[t=0.045370s, 11460 KB] g=323, 693 evaluated, 169 expanded
[t=0.045401s, 11460 KB] New best heuristic value for add: 0
[t=0.046029s, 11460 KB] g=324, 745 evaluated, 179 expanded
[t=0.046065s, 11584 KB] Solution found!
[t=0.046647s, 11584 KB] Actual search time: 0.018686s
pick-up truck-1 city-loc-6 package-3 capacity-1 capacity-2 (1)
drive truck-1 city-loc-6 city-loc-3 (34)
drive truck-2 city-loc-9 city-loc-6 (28)
pick-up truck-2 city-loc-6 package-1 capacity-3 capacity-4 (1)
drive truck-2 city-loc-6 city-loc-9 (28)
drop truck-2 city-loc-9 package-1 capacity-3 capacity-4 (1)
drive truck-1 city-loc-3 city-loc-1 (22)
drive truck-2 city-loc-9 city-loc-6 (28)
pick-up truck-2 city-loc-6 package-4 capacity-3 capacity-4 (1)
drive truck-2 city-loc-6 city-loc-3 (34)
drive truck-2 city-loc-3 city-loc-7 (16)
drive truck-2 city-loc-7 city-loc-8 (30)
drop truck-1 city-loc-1 package-3 capacity-1 capacity-2 (1)
drive truck-1 city-loc-1 city-loc-5 (37)
pick-up truck-1 city-loc-5 package-2 capacity-1 capacity-2 (1)
drive truck-1 city-loc-5 city-loc-1 (37)
drive truck-1 city-loc-1 city-loc-3 (22)
drop truck-2 city-loc-8 package-4 capacity-3 capacity-4 (1)
drop truck-1 city-loc-3 package-2 capacity-1 capacity-2 (1)
[t=0.046735s, 11584 KB] Plan length: 19 step(s).
[t=0.046735s, 11584 KB] Plan cost: 324
[t=0.046735s, 11584 KB] Expanded 189 state(s).
[t=0.046735s, 11584 KB] Reopened 0 state(s).
[t=0.046735s, 11584 KB] Evaluated 792 state(s).
[t=0.046735s, 11584 KB] Evaluations: 792
[t=0.046735s, 11584 KB] Generated 1440 state(s).
[t=0.046735s, 11584 KB] Dead ends: 0 state(s).
[t=0.046735s, 11584 KB] Number of registered states: 792
[t=0.046735s, 11584 KB] Int hash set load factor: 792/1024 = 0.773438
[t=0.046735s, 11584 KB] Int hash set resizes: 10
[t=0.046735s, 11584 KB] Search time: 0.019020s
[t=0.046735s, 11584 KB] Total time: 0.046735s
Solution found.
Peak memory: 11584 KB
search exit code: 0

INFO     Planner time: 0.38s
