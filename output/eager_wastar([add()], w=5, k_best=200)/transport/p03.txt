INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p03.pddl --sas-file 'output/eager_wastar([add()], w=5, k_best=200)/transport/p03.txt.sas'
Parsing...
Parsing: [0.010s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.014s wall-clock]
Preparing model... [0.000s CPU, 0.003s wall-clock]
Generated 27 rules.
Computing model... [0.020s CPU, 0.017s wall-clock]
824 relevant atoms
832 auxiliary atoms
1656 final queue length
2796 total queue pushes
Completing instantiation... [0.020s CPU, 0.025s wall-clock]
Instantiating: [0.040s CPU, 0.062s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.040s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.016s wall-clock]
Reordering and filtering variables...
8 of 8 variables necessary.
0 of 8 mutex groups necessary.
628 of 628 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 8
Translator derived variables: 0
Translator facts: 72
Translator goal facts: 4
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 628
Translator axioms: 0
Translator task size: 3696
Translator peak memory: 33160 KB
Writing output... [0.010s CPU, 0.016s wall-clock]
Done! [0.130s CPU, 0.167s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=5, k_best=200)/transport/p03.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=5, k_best=200)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=5, k_best=200)/transport/p03.txt.sas'"'"''
[t=0.004497s, 10804 KB] reading input...
[t=0.007700s, 10928 KB] done reading input!
[t=0.010442s, 11324 KB] Simplifying 1204 unary operators... done! [1204 unary operators]
[t=0.011941s, 11324 KB] time to simplify: 0.001498s
[t=0.012096s, 11324 KB] Initializing additive heuristic...
[t=0.012190s, 11324 KB] Building successor generator...done!
[t=0.012605s, 11324 KB] peak memory difference for successor generator creation: 0 KB
[t=0.012681s, 11324 KB] time for successor generation creation: 0.000000s
[t=0.012710s, 11324 KB] Variables: 8
[t=0.012742s, 11324 KB] FactPairs: 72
[t=0.012835s, 11324 KB] Bytes per state: 4
[t=0.012882s, 11324 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.012947s, 11324 KB] New best heuristic value for add: 299
[t=0.013042s, 11324 KB] g=0, 1 evaluated, 0 expanded
[t=0.013092s, 11324 KB] Initial heuristic value for add: 299
[t=0.013132s, 11324 KB] pruning method: none
[t=0.013168s, 11324 KB] New best heuristic value for add: 260
[t=0.013310s, 11324 KB] g=34, 5 evaluated, 1 expanded
[t=0.013341s, 11324 KB] New best heuristic value for add: 232
[t=0.013501s, 11324 KB] g=62, 11 evaluated, 9 expanded
[t=0.013535s, 11324 KB] New best heuristic value for add: 225
[t=0.013826s, 11324 KB] g=35, 24 evaluated, 9 expanded
[t=0.013860s, 11324 KB] New best heuristic value for add: 197
[t=0.014240s, 11324 KB] g=63, 41 evaluated, 39 expanded
[t=0.014585s, 11324 KB] New best heuristic value for add: 191
[t=0.015148s, 11324 KB] g=36, 86 evaluated, 39 expanded
[t=0.015187s, 11324 KB] New best heuristic value for add: 163
[t=0.016155s, 11324 KB] g=64, 131 evaluated, 129 expanded
[t=0.016193s, 11324 KB] New best heuristic value for add: 161
[t=0.019409s, 11324 KB] g=64, 311 evaluated, 129 expanded
[t=0.019497s, 11324 KB] New best heuristic value for add: 138
[t=0.021530s, 11324 KB] g=86, 380 evaluated, 329 expanded
[t=0.030676s, 11456 KB] New best heuristic value for add: 137
[t=0.035228s, 11456 KB] g=81, 953 evaluated, 529 expanded
[t=0.035271s, 11456 KB] New best heuristic value for add: 132
[t=0.035705s, 11456 KB] g=93, 976 evaluated, 529 expanded
[t=0.048442s, 11588 KB] New best heuristic value for add: 109
[t=0.053373s, 11588 KB] g=115, 1652 evaluated, 729 expanded
[t=0.066816s, 11852 KB] New best heuristic value for add: 108
[t=0.072003s, 11852 KB] g=110, 2455 evaluated, 929 expanded
[t=0.084208s, 11852 KB] New best heuristic value for add: 107
[t=0.087124s, 11852 KB] g=141, 3014 evaluated, 929 expanded
[t=0.087167s, 11984 KB] New best heuristic value for add: 100
[t=0.089819s, 11984 KB] g=161, 3150 evaluated, 929 expanded
[t=0.092374s, 11984 KB] New best heuristic value for add: 98
[t=0.095383s, 11984 KB] g=142, 3270 evaluated, 1129 expanded
[t=0.095456s, 11984 KB] New best heuristic value for add: 93
[t=0.095536s, 11984 KB] g=131, 3272 evaluated, 1129 expanded
[t=0.095574s, 11984 KB] New best heuristic value for add: 92
[t=0.096432s, 11984 KB] g=156, 3324 evaluated, 1129 expanded
[t=0.109024s, 12112 KB] New best heuristic value for add: 91
[t=0.116986s, 12112 KB] g=157, 4095 evaluated, 1329 expanded
[t=0.117021s, 12112 KB] New best heuristic value for add: 78
[t=0.117791s, 12112 KB] g=184, 4146 evaluated, 1329 expanded
[t=0.117828s, 12112 KB] New best heuristic value for add: 71
[t=0.118053s, 12112 KB] g=190, 4159 evaluated, 1329 expanded
[t=0.126809s, 12112 KB] New best heuristic value for add: 65
[t=0.135060s, 12112 KB] g=205, 4911 evaluated, 1529 expanded
[t=0.135150s, 12112 KB] New best heuristic value for add: 63
[t=0.135344s, 12112 KB] g=185, 4922 evaluated, 1529 expanded
[t=0.143970s, 12244 KB] New best heuristic value for add: 62
[t=0.151143s, 12244 KB] g=186, 5708 evaluated, 1729 expanded
[t=0.151191s, 12244 KB] New best heuristic value for add: 54
[t=0.151309s, 12244 KB] g=217, 5711 evaluated, 1729 expanded
[t=0.151350s, 12244 KB] New best heuristic value for add: 49
[t=0.151548s, 12244 KB] g=213, 5723 evaluated, 1729 expanded
[t=0.151945s, 12244 KB] New best heuristic value for add: 48
[t=0.152115s, 12244 KB] g=203, 5757 evaluated, 1729 expanded
[t=0.152153s, 12244 KB] New best heuristic value for add: 47
[t=0.152363s, 12244 KB] g=203, 5770 evaluated, 1729 expanded
[t=0.162053s, 12244 KB] New best heuristic value for add: 31
[t=0.167188s, 12244 KB] g=219, 6529 evaluated, 1929 expanded
[t=0.178979s, 12376 KB] New best heuristic value for add: 30
[t=0.183426s, 12376 KB] g=220, 7333 evaluated, 2129 expanded, 2 reopened
[t=0.183480s, 12376 KB] New best heuristic value for add: 25
[t=0.183744s, 12376 KB] g=246, 7350 evaluated, 2129 expanded, 2 reopened
[t=0.183775s, 12376 KB] New best heuristic value for add: 18
[t=0.183935s, 12376 KB] g=232, 7359 evaluated, 2129 expanded, 2 reopened
[t=0.196757s, 12508 KB] New best heuristic value for add: 2
[t=0.199143s, 12508 KB] g=248, 8083 evaluated, 2329 expanded, 7 reopened
[t=0.205627s, 12508 KB] New best heuristic value for add: 1
[t=0.211256s, 12508 KB] g=249, 8771 evaluated, 2529 expanded, 7 reopened
[t=0.214071s, 12508 KB] New best heuristic value for add: 0
[t=0.222151s, 12508 KB] g=250, 9382 evaluated, 2729 expanded, 7 reopened
[t=0.232482s, 12508 KB] Solution found!
[t=0.233366s, 12508 KB] Actual search time: 0.220198s
drive truck-2 city-loc-9 city-loc-6 (28)
pick-up truck-2 city-loc-6 package-3 capacity-3 capacity-4 (1)
pick-up truck-2 city-loc-6 package-4 capacity-2 capacity-3 (1)
drive truck-2 city-loc-6 city-loc-3 (34)
drive truck-2 city-loc-3 city-loc-1 (22)
drop truck-2 city-loc-1 package-3 capacity-2 capacity-3 (1)
drive truck-2 city-loc-1 city-loc-5 (37)
pick-up truck-2 city-loc-5 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-loc-5 city-loc-4 (12)
drive truck-2 city-loc-4 city-loc-8 (35)
drop truck-2 city-loc-8 package-4 capacity-2 capacity-3 (1)
drive truck-2 city-loc-8 city-loc-7 (30)
pick-up truck-1 city-loc-6 package-1 capacity-1 capacity-2 (1)
drive truck-1 city-loc-6 city-loc-9 (28)
drive truck-2 city-loc-7 city-loc-3 (16)
drop truck-2 city-loc-3 package-2 capacity-3 capacity-4 (1)
drop truck-1 city-loc-9 package-1 capacity-1 capacity-2 (1)
[t=0.233411s, 12508 KB] Plan length: 17 step(s).
[t=0.233411s, 12508 KB] Plan cost: 250
[t=0.233411s, 12508 KB] Expanded 2929 state(s).
[t=0.233411s, 12508 KB] Reopened 8 state(s).
[t=0.233411s, 12508 KB] Evaluated 9967 state(s).
[t=0.233411s, 12508 KB] Evaluations: 9967
[t=0.233411s, 12508 KB] Generated 22456 state(s).
[t=0.233411s, 12508 KB] Dead ends: 0 state(s).
[t=0.233411s, 12508 KB] Number of registered states: 9967
[t=0.233411s, 12508 KB] Int hash set load factor: 9967/16384 = 0.608337
[t=0.233411s, 12508 KB] Int hash set resizes: 14
[t=0.233411s, 12508 KB] Search time: 0.220529s
[t=0.233411s, 12508 KB] Total time: 0.233411s
Solution found.
Peak memory: 12508 KB
search exit code: 0

INFO     Planner time: 0.55s
