INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p03.pddl --sas-file 'output/eager_wastar([add()], w=1, k_best=1000)/transport/p03.txt.sas'
Parsing...
Parsing: [0.000s CPU, 0.006s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.010s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 27 rules.
Computing model... [0.000s CPU, 0.005s wall-clock]
824 relevant atoms
832 auxiliary atoms
1656 final queue length
2796 total queue pushes
Completing instantiation... [0.010s CPU, 0.009s wall-clock]
Instantiating: [0.020s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.003s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.010s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.005s wall-clock]
Reordering and filtering variables...
8 of 8 variables necessary.
0 of 8 mutex groups necessary.
628 of 628 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.002s wall-clock]
Translator variables: 8
Translator derived variables: 0
Translator facts: 72
Translator goal facts: 4
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 628
Translator axioms: 0
Translator task size: 3696
Translator peak memory: 33160 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.040s CPU, 0.062s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=1, k_best=1000)/transport/p03.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=1, k_best=1000)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=1, k_best=1000)/transport/p03.txt.sas'"'"''
[t=0.001260s, 10804 KB] reading input...
[t=0.003145s, 10928 KB] done reading input!
[t=0.004528s, 11324 KB] Simplifying 1204 unary operators... done! [1204 unary operators]
[t=0.005391s, 11324 KB] time to simplify: 0.000863s
[t=0.005466s, 11324 KB] Initializing additive heuristic...
[t=0.005522s, 11324 KB] Building successor generator...done!
[t=0.005718s, 11324 KB] peak memory difference for successor generator creation: 0 KB
[t=0.005757s, 11324 KB] time for successor generation creation: 0.000000s
[t=0.005786s, 11324 KB] Variables: 8
[t=0.005814s, 11324 KB] FactPairs: 72
[t=0.005840s, 11324 KB] Bytes per state: 4
[t=0.005861s, 11324 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.005896s, 11324 KB] New best heuristic value for add: 299
[t=0.005958s, 11324 KB] g=0, 1 evaluated, 0 expanded
[t=0.005984s, 11324 KB] Initial heuristic value for add: 299
[t=0.006011s, 11324 KB] pruning method: none
[t=0.006038s, 11492 KB] New best heuristic value for add: 260
[t=0.006127s, 11492 KB] g=34, 5 evaluated, 1 expanded
[t=0.006197s, 11492 KB] New best heuristic value for add: 232
[t=0.006294s, 11492 KB] g=62, 11 evaluated, 9 expanded
[t=0.006320s, 11492 KB] New best heuristic value for add: 225
[t=0.006495s, 11492 KB] g=35, 24 evaluated, 9 expanded
[t=0.006520s, 11492 KB] New best heuristic value for add: 197
[t=0.006775s, 11492 KB] g=63, 41 evaluated, 39 expanded
[t=0.006799s, 11492 KB] New best heuristic value for add: 191
[t=0.007204s, 11492 KB] g=36, 74 evaluated, 39 expanded
[t=0.007231s, 11492 KB] New best heuristic value for add: 163
[t=0.008004s, 11492 KB] g=64, 131 evaluated, 129 expanded
[t=0.008026s, 11492 KB] New best heuristic value for add: 161
[t=0.009794s, 11492 KB] g=64, 281 evaluated, 129 expanded
[t=0.009815s, 11492 KB] New best heuristic value for add: 140
[t=0.011124s, 11492 KB] g=80, 381 evaluated, 379 expanded
[t=0.011147s, 11492 KB] New best heuristic value for add: 138
[t=0.011224s, 11492 KB] g=86, 386 evaluated, 379 expanded
[t=0.013957s, 11492 KB] New best heuristic value for add: 137
[t=0.018792s, 11492 KB] g=81, 993 evaluated, 994 expanded, 9 reopened
[t=0.018822s, 11492 KB] New best heuristic value for add: 132
[t=0.019217s, 11492 KB] g=93, 1022 evaluated, 994 expanded, 9 reopened
[t=0.032894s, 11684 KB] New best heuristic value for add: 109
[t=0.038146s, 11684 KB] g=109, 2334 evaluated, 1994 expanded, 29 reopened
[t=0.061869s, 11816 KB] New best heuristic value for add: 108
[t=0.069430s, 11816 KB] g=110, 4894 evaluated, 2994 expanded, 29 reopened
[t=0.071371s, 11816 KB] New best heuristic value for add: 107
[t=0.076805s, 11816 KB] g=141, 5548 evaluated, 2994 expanded, 29 reopened
[t=0.080855s, 11816 KB] New best heuristic value for add: 100
[t=0.082306s, 11816 KB] g=161, 6003 evaluated, 2994 expanded, 29 reopened
[t=0.109854s, 11948 KB] New best heuristic value for add: 93
[t=0.111705s, 11948 KB] g=131, 8034 evaluated, 3994 expanded, 29 reopened
[t=0.111733s, 11948 KB] New best heuristic value for add: 92
[t=0.113480s, 11948 KB] g=156, 8201 evaluated, 3994 expanded, 29 reopened
[t=0.148374s, 12084 KB] New best heuristic value for add: 79
[t=0.151494s, 12084 KB] g=168, 11512 evaluated, 4994 expanded, 29 reopened
[t=0.151523s, 12084 KB] New best heuristic value for add: 78
[t=0.151854s, 12084 KB] g=170, 11542 evaluated, 4994 expanded, 29 reopened
[t=0.151875s, 12084 KB] New best heuristic value for add: 71
[t=0.154090s, 12084 KB] g=190, 11764 evaluated, 4994 expanded, 29 reopened
[t=0.186669s, 12084 KB] New best heuristic value for add: 63
[t=0.191496s, 12084 KB] g=185, 15049 evaluated, 5994 expanded, 29 reopened
[t=0.191528s, 12344 KB] New best heuristic value for add: 55
[t=0.192982s, 12344 KB] g=196, 15132 evaluated, 5994 expanded, 29 reopened
[t=0.196041s, 12348 KB] New best heuristic value for add: 54
[t=0.200978s, 12348 KB] g=196, 15949 evaluated, 5994 expanded, 29 reopened
[t=0.224982s, 12348 KB] New best heuristic value for add: 49
[t=0.229755s, 12348 KB] g=197, 18490 evaluated, 6994 expanded, 29 reopened
[t=0.229784s, 12348 KB] New best heuristic value for add: 47
[t=0.230400s, 12348 KB] g=203, 18552 evaluated, 6994 expanded, 29 reopened
[t=0.263465s, 12484 KB] New best heuristic value for add: 31
[t=0.268130s, 12484 KB] g=219, 22017 evaluated, 7994 expanded, 31 reopened
[t=0.268158s, 12484 KB] New best heuristic value for add: 25
[t=0.268428s, 12484 KB] g=225, 22047 evaluated, 7994 expanded, 31 reopened
[t=0.301904s, 12484 KB] New best heuristic value for add: 18
[t=0.303517s, 12484 KB] g=232, 25500 evaluated, 8994 expanded, 32 reopened
[t=0.330915s, 12620 KB] New best heuristic value for add: 2
[t=0.337858s, 12620 KB] g=248, 28931 evaluated, 9994 expanded, 35 reopened
[t=0.369611s, 13136 KB] New best heuristic value for add: 1
[t=0.370813s, 13136 KB] g=249, 32168 evaluated, 10994 expanded, 36 reopened
[t=0.398536s, 13136 KB] New best heuristic value for add: 0
[t=0.402146s, 13136 KB] g=250, 35279 evaluated, 11994 expanded, 36 reopened
[t=0.427449s, 13144 KB] Solution found!
[t=0.431975s, 13144 KB] Actual search time: 0.425937s
drive truck-2 city-loc-9 city-loc-6 (28)
pick-up truck-2 city-loc-6 package-3 capacity-3 capacity-4 (1)
pick-up truck-2 city-loc-6 package-4 capacity-2 capacity-3 (1)
drive truck-2 city-loc-6 city-loc-3 (34)
drive truck-2 city-loc-3 city-loc-1 (22)
drop truck-2 city-loc-1 package-3 capacity-2 capacity-3 (1)
drive truck-2 city-loc-1 city-loc-5 (37)
pick-up truck-2 city-loc-5 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-loc-5 city-loc-4 (12)
drive truck-2 city-loc-4 city-loc-8 (35)
drop truck-2 city-loc-8 package-4 capacity-2 capacity-3 (1)
drive truck-2 city-loc-8 city-loc-7 (30)
drive truck-2 city-loc-7 city-loc-3 (16)
drop truck-2 city-loc-3 package-2 capacity-3 capacity-4 (1)
pick-up truck-1 city-loc-6 package-1 capacity-1 capacity-2 (1)
drive truck-1 city-loc-6 city-loc-9 (28)
drop truck-1 city-loc-9 package-1 capacity-1 capacity-2 (1)
[t=0.432009s, 13144 KB] Plan length: 17 step(s).
[t=0.432009s, 13144 KB] Plan cost: 250
[t=0.432009s, 13144 KB] Expanded 12994 state(s).
[t=0.432009s, 13144 KB] Reopened 36 state(s).
[t=0.432009s, 13144 KB] Evaluated 38243 state(s).
[t=0.432009s, 13144 KB] Evaluations: 38243
[t=0.432009s, 13144 KB] Generated 98157 state(s).
[t=0.432009s, 13144 KB] Dead ends: 0 state(s).
[t=0.432009s, 13144 KB] Number of registered states: 38243
[t=0.432009s, 13144 KB] Int hash set load factor: 38243/65536 = 0.583542
[t=0.432009s, 13144 KB] Int hash set resizes: 16
[t=0.432009s, 13144 KB] Search time: 0.426149s
[t=0.432009s, 13144 KB] Total time: 0.432009s
Solution found.
Peak memory: 13144 KB
search exit code: 0

INFO     Planner time: 0.56s
