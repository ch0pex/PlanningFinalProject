INFO     planner time limit: 1800s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py elevators/domain.pddl elevators/p09.pddl --sas-file 'output/eager_wastar([add()], w=10, k_best=500)/elevators/p09.txt.sas'
Parsing...
Parsing: [0.000s CPU, 0.007s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.013s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 50 rules.
Computing model... [0.010s CPU, 0.005s wall-clock]
817 relevant atoms
795 auxiliary atoms
1612 final queue length
2556 total queue pushes
Completing instantiation... [0.010s CPU, 0.008s wall-clock]
Instantiating: [0.020s CPU, 0.039s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.009s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
13 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.004s wall-clock]
Reordering and filtering variables...
13 of 13 variables necessary.
0 of 13 mutex groups necessary.
550 of 550 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 13
Translator derived variables: 0
Translator facts: 109
Translator goal facts: 7
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 550
Translator axioms: 0
Translator task size: 3249
Translator peak memory: 33300 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.030s CPU, 0.074s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=10, k_best=500)/elevators/p09.txt.sas'
INFO     search time limit: 1799s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=10, k_best=500)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=10, k_best=500)/elevators/p09.txt.sas'"'"''
[t=0.001527s, 10804 KB] reading input...
[t=0.002891s, 10928 KB] done reading input!
[t=0.002971s, 11324 KB] Simplifying 1040 unary operators... done! [1040 unary operators]
[t=0.004199s, 11324 KB] time to simplify: 0.001228s
[t=0.004263s, 11324 KB] Initializing additive heuristic...
[t=0.004318s, 11324 KB] Building successor generator...done!
[t=0.004504s, 11324 KB] peak memory difference for successor generator creation: 0 KB
[t=0.004530s, 11324 KB] time for successor generation creation: 0.000000s
[t=0.004552s, 11324 KB] Variables: 13
[t=0.004572s, 11324 KB] FactPairs: 109
[t=0.004589s, 11324 KB] Bytes per state: 8
[t=0.004606s, 11324 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.004633s, 11324 KB] New best heuristic value for add: 168
[t=0.004672s, 11324 KB] g=0, 1 evaluated, 0 expanded
[t=0.004689s, 11324 KB] Initial heuristic value for add: 168
[t=0.004718s, 11324 KB] pruning method: none
[t=0.004738s, 11324 KB] New best heuristic value for add: 147
[t=0.004800s, 11324 KB] g=7, 3 evaluated, 1 expanded
[t=0.004819s, 11324 KB] New best heuristic value for add: 140
[t=0.004868s, 11324 KB] g=9, 5 evaluated, 1 expanded
[t=0.004888s, 11324 KB] New best heuristic value for add: 135
[t=0.005039s, 11324 KB] g=15, 16 evaluated, 14 expanded
[t=0.005060s, 11324 KB] New best heuristic value for add: 134
[t=0.005110s, 11324 KB] g=16, 18 evaluated, 14 expanded
[t=0.005129s, 11324 KB] New best heuristic value for add: 124
[t=0.005204s, 11324 KB] g=16, 23 evaluated, 14 expanded
[t=0.005223s, 11324 KB] New best heuristic value for add: 95
[t=0.005747s, 11324 KB] g=8, 75 evaluated, 14 expanded
[t=0.005766s, 11324 KB] New best heuristic value for add: 94
[t=0.005984s, 11324 KB] g=15, 93 evaluated, 85 expanded
[t=0.007365s, 11324 KB] New best heuristic value for add: 93
[t=0.009795s, 11324 KB] g=22, 364 evaluated, 350 expanded
[t=0.009827s, 11456 KB] New best heuristic value for add: 89
[t=0.015837s, 11456 KB] g=13, 981 evaluated, 350 expanded
[t=0.015858s, 11456 KB] New best heuristic value for add: 86
[t=0.016607s, 11456 KB] g=15, 1054 evaluated, 350 expanded
[t=0.016631s, 11456 KB] New best heuristic value for add: 85
[t=0.017613s, 11456 KB] g=15, 1153 evaluated, 350 expanded
[t=0.017637s, 11456 KB] New best heuristic value for add: 84
[t=0.019361s, 11456 KB] g=22, 1310 evaluated, 850 expanded
[t=0.019386s, 11456 KB] New best heuristic value for add: 81
[t=0.020249s, 11456 KB] g=28, 1405 evaluated, 850 expanded
[t=0.020275s, 11588 KB] New best heuristic value for add: 78
[t=0.021901s, 11588 KB] g=40, 1564 evaluated, 850 expanded, 6 reopened
[t=0.044225s, 11844 KB] New best heuristic value for add: 77
[t=0.047615s, 11844 KB] g=47, 4246 evaluated, 1350 expanded, 59 reopened
[t=0.047641s, 11844 KB] New best heuristic value for add: 76
[t=0.048783s, 11844 KB] g=40, 4369 evaluated, 1350 expanded, 59 reopened
[t=0.062966s, 11976 KB] New best heuristic value for add: 75
[t=0.063937s, 11976 KB] g=47, 5962 evaluated, 1850 expanded, 83 reopened
[t=0.063962s, 11976 KB] New best heuristic value for add: 67
[t=0.064016s, 11976 KB] g=49, 5964 evaluated, 1850 expanded, 83 reopened
[t=0.100898s, 12244 KB] New best heuristic value for add: 65
[t=0.101849s, 12244 KB] g=49, 10025 evaluated, 2350 expanded, 146 reopened
[t=0.139137s, 12512 KB] New best heuristic value for add: 58
[t=0.141020s, 12512 KB] g=56, 14252 evaluated, 2850 expanded, 198 reopened
[t=0.196614s, 12776 KB] New best heuristic value for add: 55
[t=0.201090s, 12776 KB] g=60, 20023 evaluated, 3350 expanded, 234 reopened
[t=0.215544s, 12912 KB] New best heuristic value for add: 54
[t=0.220589s, 12912 KB] g=47, 22132 evaluated, 3350 expanded, 242 reopened
[t=0.263398s, 12912 KB] New best heuristic value for add: 49
[t=0.265468s, 12912 KB] g=50, 25526 evaluated, 3850 expanded, 268 reopened
[t=0.311267s, 13696 KB] New best heuristic value for add: 47
[t=0.320486s, 13696 KB] g=63, 30570 evaluated, 4350 expanded, 271 reopened
[t=0.349530s, 13696 KB] New best heuristic value for add: 45
[t=0.356926s, 13696 KB] g=56, 34611 evaluated, 4850 expanded, 280 reopened
[t=0.416670s, 13700 KB] New best heuristic value for add: 38
[t=0.419730s, 13700 KB] g=63, 40322 evaluated, 5350 expanded, 295 reopened
[t=0.483728s, 13836 KB] New best heuristic value for add: 36
[t=0.487715s, 13836 KB] g=63, 45982 evaluated, 5850 expanded, 310 reopened
[t=0.521888s, 14104 KB] New best heuristic value for add: 29
[t=0.531350s, 14104 KB] g=76, 51018 evaluated, 6350 expanded, 312 reopened
[t=0.656325s, 15264 KB] New best heuristic value for add: 28
[t=0.660511s, 15264 KB] g=70, 63241 evaluated, 7350 expanded, 348 reopened
[t=0.704159s, 15264 KB] New best heuristic value for add: 23
[t=0.708415s, 15264 KB] g=88, 67506 evaluated, 7850 expanded, 375 reopened
[t=0.751966s, 15280 KB] New best heuristic value for add: 21
[t=0.756191s, 15280 KB] g=83, 72372 evaluated, 8350 expanded, 400 reopened
[t=0.838275s, 15544 KB] New best heuristic value for add: 20
[t=0.838786s, 15544 KB] g=76, 80478 evaluated, 9350 expanded, 481 reopened
[t=0.876458s, 15676 KB] New best heuristic value for add: 19
[t=0.880191s, 15676 KB] g=89, 84789 evaluated, 9850 expanded, 501 reopened
[t=0.880221s, 15676 KB] New best heuristic value for add: 15
[t=0.881049s, 15676 KB] g=89, 84884 evaluated, 9850 expanded, 504 reopened
[t=0.952745s, 15944 KB] New best heuristic value for add: 14
[t=0.958510s, 15944 KB] g=107, 91661 evaluated, 10350 expanded, 594 reopened
[t=1.010175s, 16208 KB] New best heuristic value for add: 13
[t=1.011754s, 16208 KB] g=95, 97389 evaluated, 11350 expanded, 659 reopened
[t=1.038786s, 16344 KB] New best heuristic value for add: 9
[t=1.046286s, 16344 KB] g=94, 101563 evaluated, 11850 expanded, 681 reopened
[t=1.076912s, 16476 KB] New best heuristic value for add: 7
[t=1.078399s, 16476 KB] g=94, 105847 evaluated, 12350 expanded, 724 reopened
[t=1.086263s, 16476 KB] New best heuristic value for add: 6
[t=1.087500s, 16476 KB] g=102, 107081 evaluated, 12350 expanded, 759 reopened
[t=1.124499s, 16744 KB] New best heuristic value for add: 0
[t=1.132453s, 16744 KB] g=108, 113487 evaluated, 13350 expanded, 833 reopened
[t=1.220403s, 18796 KB] Solution found!
[t=1.221374s, 18796 KB] Actual search time: 1.216636s
board p6 slow0-0 n1 n0 n1 (0)
move-up-slow slow0-0 n1 n4 (8)
move-down-fast fast0 n4 n0 (13)
board p0 fast0 n0 n0 n1 (0)
board p4 fast0 n0 n1 n2 (0)
board p5 fast0 n0 n2 n3 (0)
move-up-fast fast0 n0 n6 (19)
leave p0 fast0 n6 n3 n2 (0)
board p2 fast0 n6 n2 n3 (0)
move-down-fast fast0 n6 n4 (7)
leave p6 slow0-0 n4 n1 n0 (0)
board p6 slow1-0 n4 n0 n1 (0)
leave p4 fast0 n4 n3 n2 (0)
board p4 slow1-0 n4 n1 n2 (0)
move-up-slow slow1-0 n4 n8 (9)
leave p2 fast0 n4 n2 n1 (0)
board p2 slow0-0 n4 n0 n1 (0)
move-down-slow slow0-0 n4 n2 (7)
leave p2 slow0-0 n2 n1 n0 (0)
move-up-slow slow0-0 n2 n3 (6)
board p1 slow0-0 n3 n0 n1 (0)
move-up-slow slow0-0 n3 n4 (6)
leave p1 slow0-0 n4 n1 n0 (0)
board p1 fast0 n4 n1 n2 (0)
leave p5 fast0 n4 n2 n1 (0)
move-up-fast fast0 n4 n8 (13)
leave p6 slow1-0 n8 n2 n1 (0)
board p3 slow1-0 n8 n1 n2 (0)
move-down-slow slow1-0 n8 n7 (6)
leave p3 slow1-0 n7 n2 n1 (0)
move-down-slow slow1-0 n7 n5 (7)
leave p4 slow1-0 n5 n1 n0 (0)
leave p1 fast0 n8 n1 n0 (0)
[t=1.221405s, 18796 KB] Plan length: 33 step(s).
[t=1.221405s, 18796 KB] Plan cost: 101
[t=1.221405s, 18796 KB] Expanded 14850 state(s).
[t=1.221405s, 18796 KB] Reopened 912 state(s).
[t=1.221405s, 18796 KB] Evaluated 124709 state(s).
[t=1.221405s, 18796 KB] Evaluations: 124709
[t=1.221405s, 18796 KB] Generated 237303 state(s).
[t=1.221405s, 18796 KB] Dead ends: 0 state(s).
[t=1.221405s, 18796 KB] Number of registered states: 124709
[t=1.221405s, 18796 KB] Int hash set load factor: 124709/262144 = 0.475727
[t=1.221405s, 18796 KB] Int hash set resizes: 18
[t=1.221405s, 18796 KB] Search time: 1.216799s
[t=1.221405s, 18796 KB] Total time: 1.221405s
Solution found.
Peak memory: 18796 KB
search exit code: 0

INFO     Planner time: 1.35s
