INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p04.pddl --sas-file 'output/eager_wastar([add()], w=10, k_best=500)/transport/p04.txt.sas'
Parsing...
Parsing: [0.000s CPU, 0.006s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.008s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 27 rules.
Computing model... [0.010s CPU, 0.007s wall-clock]
1293 relevant atoms
1246 auxiliary atoms
2539 final queue length
4436 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.030s CPU, 0.051s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.020s CPU, 0.018s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
9 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.008s wall-clock]
Reordering and filtering variables...
9 of 9 variables necessary.
0 of 9 mutex groups necessary.
1032 of 1032 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.003s wall-clock]
Translator variables: 9
Translator derived variables: 0
Translator facts: 104
Translator goal facts: 5
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 1032
Translator axioms: 0
Translator task size: 6094
Translator peak memory: 35348 KB
Writing output... [0.000s CPU, 0.009s wall-clock]
Done! [0.060s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=10, k_best=500)/transport/p04.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=10, k_best=500)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=10, k_best=500)/transport/p04.txt.sas'"'"''
[t=0.001536s, 10804 KB] reading input...
[t=0.004574s, 11060 KB] done reading input!
[t=0.004696s, 11508 KB] Simplifying 1992 unary operators... done! [1992 unary operators]
[t=0.006501s, 11508 KB] time to simplify: 0.001805s
[t=0.006612s, 11508 KB] Initializing additive heuristic...
[t=0.006684s, 11508 KB] Building successor generator...done!
[t=0.006992s, 11652 KB] peak memory difference for successor generator creation: 144 KB
[t=0.007023s, 11652 KB] time for successor generation creation: 0.000000s
[t=0.007045s, 11652 KB] Variables: 9
[t=0.007067s, 11652 KB] FactPairs: 104
[t=0.007093s, 11652 KB] Bytes per state: 8
[t=0.007122s, 11652 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.007159s, 11652 KB] New best heuristic value for add: 820
[t=0.007215s, 11652 KB] g=0, 1 evaluated, 0 expanded
[t=0.007250s, 11652 KB] Initial heuristic value for add: 820
[t=0.007282s, 11652 KB] pruning method: none
[t=0.007307s, 11652 KB] New best heuristic value for add: 531
[t=0.007385s, 11652 KB] g=34, 3 evaluated, 1 expanded
[t=0.007412s, 11652 KB] New best heuristic value for add: 344
[t=0.007514s, 11652 KB] g=56, 6 evaluated, 5 expanded
[t=0.007544s, 11652 KB] New best heuristic value for add: 336
[t=0.007604s, 11652 KB] g=59, 7 evaluated, 5 expanded
[t=0.007628s, 11652 KB] New best heuristic value for add: 330
[t=0.007873s, 11652 KB] g=60, 17 evaluated, 15 expanded
[t=0.007894s, 11652 KB] New best heuristic value for add: 319
[t=0.008287s, 11652 KB] g=69, 29 evaluated, 15 expanded
[t=0.008316s, 11652 KB] New best heuristic value for add: 308
[t=0.008601s, 11652 KB] g=97, 39 evaluated, 36 expanded
[t=0.008627s, 11652 KB] New best heuristic value for add: 305
[t=0.008734s, 11652 KB] g=93, 42 evaluated, 36 expanded
[t=0.008763s, 11652 KB] New best heuristic value for add: 300
[t=0.008848s, 11652 KB] g=78, 44 evaluated, 36 expanded
[t=0.008894s, 11652 KB] New best heuristic value for add: 276
[t=0.009169s, 11652 KB] g=103, 55 evaluated, 36 expanded
[t=0.009192s, 11652 KB] New best heuristic value for add: 272
[t=0.009936s, 11652 KB] g=104, 87 evaluated, 85 expanded
[t=0.009962s, 11652 KB] New best heuristic value for add: 265
[t=0.010015s, 11652 KB] g=135, 88 evaluated, 85 expanded
[t=0.010035s, 11652 KB] New best heuristic value for add: 262
[t=0.012525s, 11652 KB] g=135, 195 evaluated, 193 expanded
[t=0.012553s, 11652 KB] New best heuristic value for add: 249
[t=0.012851s, 11652 KB] g=142, 208 evaluated, 193 expanded
[t=0.012878s, 11652 KB] New best heuristic value for add: 244
[t=0.012947s, 11652 KB] g=127, 210 evaluated, 193 expanded
[t=0.012970s, 11652 KB] New best heuristic value for add: 239
[t=0.013900s, 11652 KB] g=140, 246 evaluated, 193 expanded
[t=0.016693s, 11652 KB] New best heuristic value for add: 238
[t=0.019051s, 11652 KB] g=141, 470 evaluated, 467 expanded
[t=0.019074s, 11652 KB] New best heuristic value for add: 215
[t=0.020387s, 11652 KB] g=143, 531 evaluated, 467 expanded
[t=0.035206s, 12016 KB] New best heuristic value for add: 214
[t=0.035679s, 12016 KB] g=144, 1158 evaluated, 967 expanded
[t=0.035708s, 12016 KB] New best heuristic value for add: 207
[t=0.035963s, 12016 KB] g=197, 1170 evaluated, 967 expanded
[t=0.035991s, 12016 KB] New best heuristic value for add: 206
[t=0.037427s, 12016 KB] g=184, 1232 evaluated, 967 expanded
[t=0.037454s, 12016 KB] New best heuristic value for add: 181
[t=0.040762s, 12016 KB] g=144, 1386 evaluated, 967 expanded
[t=0.062689s, 12548 KB] New best heuristic value for add: 180
[t=0.068119s, 12548 KB] g=145, 2571 evaluated, 1467 expanded
[t=0.109897s, 13076 KB] New best heuristic value for add: 173
[t=0.111440s, 13076 KB] g=234, 4576 evaluated, 1967 expanded
[t=0.119173s, 13076 KB] New best heuristic value for add: 169
[t=0.127458s, 13076 KB] g=192, 5380 evaluated, 1967 expanded
[t=0.156833s, 13472 KB] New best heuristic value for add: 168
[t=0.157275s, 13472 KB] g=193, 6657 evaluated, 2467 expanded
[t=0.157305s, 13472 KB] New best heuristic value for add: 166
[t=0.159341s, 13472 KB] g=204, 6766 evaluated, 2467 expanded
[t=0.184902s, 13604 KB] New best heuristic value for add: 154
[t=0.194040s, 13604 KB] g=187, 8227 evaluated, 2467 expanded
[t=0.203579s, 13736 KB] New best heuristic value for add: 135
[t=0.209205s, 13736 KB] g=193, 8883 evaluated, 2467 expanded
[t=0.212867s, 13736 KB] New best heuristic value for add: 134
[t=0.214152s, 13736 KB] g=194, 9113 evaluated, 2967 expanded
[t=0.269574s, 14000 KB] New best heuristic value for add: 133
[t=0.272893s, 14000 KB] g=195, 11824 evaluated, 3467 expanded, 9 reopened
[t=0.326331s, 14264 KB] New best heuristic value for add: 123
[t=0.334712s, 14264 KB] g=221, 14667 evaluated, 3967 expanded, 17 reopened
[t=0.335600s, 14264 KB] New best heuristic value for add: 115
[t=0.337182s, 14264 KB] g=285, 14797 evaluated, 3967 expanded, 17 reopened
[t=0.354351s, 14524 KB] New best heuristic value for add: 108
[t=0.355402s, 14524 KB] g=236, 15735 evaluated, 3967 expanded, 17 reopened
[t=0.392101s, 14524 KB] New best heuristic value for add: 107
[t=0.395603s, 14524 KB] g=237, 17643 evaluated, 4467 expanded, 22 reopened
[t=0.448753s, 14792 KB] New best heuristic value for add: 106
[t=0.455808s, 14792 KB] g=238, 20689 evaluated, 4967 expanded, 30 reopened
[t=0.457966s, 14792 KB] New best heuristic value for add: 101
[t=0.458138s, 14792 KB] g=342, 20799 evaluated, 4967 expanded, 30 reopened
[t=0.514654s, 14924 KB] New best heuristic value for add: 100
[t=0.517855s, 14924 KB] g=303, 23813 evaluated, 5467 expanded, 36 reopened
[t=0.517883s, 14924 KB] New best heuristic value for add: 69
[t=0.517960s, 14924 KB] g=334, 23816 evaluated, 5467 expanded, 36 reopened
[t=0.571148s, 15056 KB] New best heuristic value for add: 68
[t=0.577560s, 15056 KB] g=335, 26900 evaluated, 5967 expanded, 39 reopened
[t=0.627891s, 15704 KB] New best heuristic value for add: 42
[t=0.635731s, 15704 KB] g=361, 29932 evaluated, 6467 expanded, 49 reopened
[t=0.681847s, 15712 KB] New best heuristic value for add: 41
[t=0.688296s, 15712 KB] g=362, 32839 evaluated, 6967 expanded, 78 reopened
[t=0.738502s, 15844 KB] New best heuristic value for add: 40
[t=0.741711s, 15844 KB] g=363, 35826 evaluated, 7467 expanded, 121 reopened
[t=0.741740s, 15844 KB] New best heuristic value for add: 33
[t=0.742461s, 15844 KB] g=307, 35882 evaluated, 7467 expanded, 121 reopened
[t=0.785513s, 15976 KB] New best heuristic value for add: 1
[t=0.793433s, 15976 KB] g=339, 38546 evaluated, 7967 expanded, 156 reopened
[t=0.832724s, 16112 KB] New best heuristic value for add: 0
[t=0.835452s, 16112 KB] g=340, 41258 evaluated, 8467 expanded, 200 reopened
[t=0.870462s, 16244 KB] Solution found!
[t=0.877406s, 16244 KB] Actual search time: 0.870098s
drive truck-2 city-loc-6 city-loc-9 (28)
drive truck-2 city-loc-9 city-loc-11 (24)
pick-up truck-2 city-loc-11 package-4 capacity-3 capacity-4 (1)
drive truck-2 city-loc-11 city-loc-9 (24)
drive truck-2 city-loc-9 city-loc-10 (32)
drive truck-2 city-loc-10 city-loc-8 (24)
pick-up truck-2 city-loc-8 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-loc-8 city-loc-10 (24)
pick-up truck-2 city-loc-10 package-3 capacity-1 capacity-2 (1)
drop truck-2 city-loc-10 package-4 capacity-1 capacity-2 (1)
drive truck-2 city-loc-10 city-loc-1 (33)
pick-up truck-2 city-loc-1 package-1 capacity-1 capacity-2 (1)
drop truck-2 city-loc-1 package-2 capacity-1 capacity-2 (1)
drive truck-2 city-loc-1 city-loc-4 (26)
drive truck-2 city-loc-4 city-loc-5 (12)
drop truck-2 city-loc-5 package-3 capacity-2 capacity-3 (1)
drive truck-2 city-loc-5 city-loc-4 (12)
pick-up truck-2 city-loc-4 package-5 capacity-2 capacity-3 (1)
drive truck-2 city-loc-4 city-loc-1 (26)
drop truck-2 city-loc-1 package-5 capacity-2 capacity-3 (1)
drive truck-2 city-loc-1 city-loc-10 (33)
drive truck-2 city-loc-10 city-loc-9 (32)
drop truck-2 city-loc-9 package-1 capacity-3 capacity-4 (1)
[t=0.877433s, 16244 KB] Plan length: 23 step(s).
[t=0.877433s, 16244 KB] Plan cost: 340
[t=0.877433s, 16244 KB] Expanded 8967 state(s).
[t=0.877433s, 16244 KB] Reopened 252 state(s).
[t=0.877433s, 16244 KB] Evaluated 43662 state(s).
[t=0.877433s, 16244 KB] Evaluations: 43662
[t=0.877433s, 16244 KB] Generated 87679 state(s).
[t=0.877433s, 16244 KB] Dead ends: 0 state(s).
[t=0.877433s, 16244 KB] Number of registered states: 43662
[t=0.877433s, 16244 KB] Int hash set load factor: 43662/65536 = 0.666229
[t=0.877433s, 16244 KB] Int hash set resizes: 16
[t=0.877433s, 16244 KB] Search time: 0.870311s
[t=0.877433s, 16244 KB] Total time: 0.877433s
Solution found.
Peak memory: 16244 KB
search exit code: 0

INFO     Planner time: 1.02s
