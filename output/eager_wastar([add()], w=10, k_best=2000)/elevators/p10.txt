INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py elevators/domain.pddl elevators/p10.pddl --sas-file 'output/eager_wastar([add()], w=10, k_best=2000)/elevators/p10.txt.sas'
Parsing...
Parsing: [0.000s CPU, 0.007s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.014s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 50 rules.
Computing model... [0.010s CPU, 0.007s wall-clock]
1075 relevant atoms
1009 auxiliary atoms
2084 final queue length
3454 total queue pushes
Completing instantiation... [0.010s CPU, 0.011s wall-clock]
Instantiating: [0.020s CPU, 0.044s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.013s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
15 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.006s wall-clock]
Reordering and filtering variables...
15 of 15 variables necessary.
0 of 15 mutex groups necessary.
780 of 780 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 15
Translator derived variables: 0
Translator facts: 125
Translator goal facts: 7
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 780
Translator axioms: 0
Translator task size: 4587
Translator peak memory: 34180 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.050s CPU, 0.087s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=10, k_best=2000)/elevators/p10.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=10, k_best=2000)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=10, k_best=2000)/elevators/p10.txt.sas'"'"''
[t=0.001630s, 10804 KB] reading input...
[t=0.003519s, 10928 KB] done reading input!
[t=0.003659s, 11324 KB] Simplifying 1480 unary operators... done! [1480 unary operators]
[t=0.005059s, 11324 KB] time to simplify: 0.001400s
[t=0.005139s, 11468 KB] Initializing additive heuristic...
[t=0.005209s, 11468 KB] Building successor generator...done!
[t=0.005448s, 11468 KB] peak memory difference for successor generator creation: 0 KB
[t=0.005477s, 11468 KB] time for successor generation creation: 0.000000s
[t=0.005500s, 11468 KB] Variables: 15
[t=0.005522s, 11468 KB] FactPairs: 125
[t=0.005544s, 11468 KB] Bytes per state: 8
[t=0.005565s, 11468 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.005595s, 11468 KB] New best heuristic value for add: 113
[t=0.005652s, 11468 KB] g=0, 1 evaluated, 0 expanded
[t=0.005677s, 11468 KB] Initial heuristic value for add: 113
[t=0.005709s, 11468 KB] pruning method: none
[t=0.005730s, 11612 KB] New best heuristic value for add: 108
[t=0.005811s, 11612 KB] g=7, 4 evaluated, 1 expanded
[t=0.005835s, 11612 KB] New best heuristic value for add: 107
[t=0.005935s, 11612 KB] g=7, 9 evaluated, 1 expanded
[t=0.005958s, 11612 KB] New best heuristic value for add: 106
[t=0.005998s, 11612 KB] g=6, 10 evaluated, 1 expanded
[t=0.006020s, 11612 KB] New best heuristic value for add: 100
[t=0.006218s, 11612 KB] g=13, 22 evaluated, 19 expanded
[t=0.006241s, 11612 KB] New best heuristic value for add: 99
[t=0.006356s, 11612 KB] g=19, 29 evaluated, 19 expanded
[t=0.006379s, 11612 KB] New best heuristic value for add: 85
[t=0.007366s, 11612 KB] g=6, 108 evaluated, 19 expanded
[t=0.007392s, 11612 KB] New best heuristic value for add: 80
[t=0.007641s, 11612 KB] g=7, 125 evaluated, 19 expanded
[t=0.007665s, 11612 KB] New best heuristic value for add: 73
[t=0.008202s, 11612 KB] g=14, 162 evaluated, 159 expanded
[t=0.020809s, 11740 KB] New best heuristic value for add: 68
[t=0.021371s, 11740 KB] g=27, 836 evaluated, 827 expanded
[t=0.021404s, 11740 KB] New best heuristic value for add: 66
[t=0.022596s, 11740 KB] g=14, 937 evaluated, 827 expanded
[t=0.058355s, 12008 KB] New best heuristic value for add: 61
[t=0.059265s, 12008 KB] g=27, 3328 evaluated, 2827 expanded
[t=0.067526s, 12156 KB] New best heuristic value for add: 57
[t=0.069500s, 12156 KB] g=39, 4164 evaluated, 2827 expanded, 30 reopened
[t=0.162318s, 12708 KB] New best heuristic value for add: 52
[t=0.171019s, 12708 KB] g=46, 11607 evaluated, 4827 expanded, 52 reopened
[t=0.314420s, 13100 KB] New best heuristic value for add: 51
[t=0.321628s, 13100 KB] g=49, 23010 evaluated, 6827 expanded, 234 reopened
[t=0.321654s, 13100 KB] New best heuristic value for add: 45
[t=0.322086s, 13100 KB] g=34, 23043 evaluated, 6827 expanded, 236 reopened
[t=0.523324s, 13892 KB] New best heuristic value for add: 44
[t=0.525435s, 13892 KB] g=49, 38423 evaluated, 8827 expanded, 489 reopened
[t=0.742059s, 14428 KB] New best heuristic value for add: 38
[t=0.749091s, 14428 KB] g=47, 56250 evaluated, 10827 expanded, 702 reopened
[t=1.018076s, 15612 KB] New best heuristic value for add: 37
[t=1.019476s, 15612 KB] g=44, 75652 evaluated, 12827 expanded, 824 reopened
[t=1.293934s, 16280 KB] New best heuristic value for add: 36
[t=1.298974s, 16280 KB] g=45, 97323 evaluated, 14827 expanded, 920 reopened
[t=1.579349s, 18740 KB] New best heuristic value for add: 30
[t=1.581932s, 18740 KB] g=57, 119788 evaluated, 16827 expanded, 984 reopened
[t=1.845779s, 18776 KB] New best heuristic value for add: 29
[t=1.853664s, 18776 KB] g=52, 142418 evaluated, 18827 expanded, 1094 reopened
[t=2.150180s, 19584 KB] New best heuristic value for add: 28
[t=2.151747s, 19584 KB] g=55, 167670 evaluated, 20827 expanded, 1188 reopened
[t=2.159297s, 19584 KB] New best heuristic value for add: 27
[t=2.162138s, 19584 KB] g=70, 168608 evaluated, 20827 expanded, 1194 reopened
[t=2.416209s, 20256 KB] New best heuristic value for add: 22
[t=2.418321s, 20256 KB] g=65, 190076 evaluated, 22827 expanded, 1320 reopened
[t=2.739776s, 21056 KB] New best heuristic value for add: 20
[t=2.740206s, 21056 KB] g=71, 215005 evaluated, 24827 expanded, 1503 reopened
[t=3.320767s, 25292 KB] New best heuristic value for add: 13
[t=3.326024s, 25292 KB] g=84, 263683 evaluated, 28827 expanded, 2063 reopened
[t=4.119333s, 26980 KB] New best heuristic value for add: 12
[t=4.123613s, 26980 KB] g=90, 337912 evaluated, 34827 expanded, 2968 reopened
[t=4.123645s, 26980 KB] New best heuristic value for add: 6
[t=4.123685s, 26980 KB] g=91, 337913 evaluated, 34827 expanded, 2968 reopened
[t=4.954546s, 29520 KB] New best heuristic value for add: 0
[t=4.957751s, 29520 KB] g=99, 418157 evaluated, 40827 expanded, 3890 reopened
[t=6.094418s, 38524 KB] Solution found!
[t=6.099647s, 38524 KB] Actual search time: 6.093917s
board p3 fast0 n2 n0 n1 (0)
move-down-fast fast0 n2 n0 (7)
board p0 fast0 n0 n1 n2 (0)
move-up-fast fast0 n0 n4 (13)
leave p0 fast0 n4 n2 n1 (0)
board p0 fast1 n4 n0 n1 (0)
move-up-fast fast1 n4 n6 (7)
board p4 slow1-0 n5 n0 n1 (0)
move-up-slow slow1-0 n5 n7 (7)
move-down-slow slow0-0 n4 n1 (8)
board p1 slow0-0 n1 n0 n1 (0)
move-up-slow slow0-0 n1 n3 (7)
board p6 slow0-0 n3 n1 n2 (0)
move-up-slow slow0-0 n3 n4 (6)
board p2 slow1-0 n7 n1 n2 (0)
leave p4 slow1-0 n7 n2 n1 (0)
move-down-slow slow1-0 n7 n4 (8)
leave p2 slow1-0 n4 n1 n0 (0)
leave p1 slow0-0 n4 n2 n1 (0)
board p2 slow0-0 n4 n1 n2 (0)
leave p6 slow0-0 n4 n2 n1 (0)
move-down-slow slow0-0 n4 n0 (9)
board p1 slow1-0 n4 n0 n1 (0)
move-up-slow slow1-0 n4 n8 (9)
board p5 slow1-0 n8 n1 n2 (0)
move-down-slow slow1-0 n8 n6 (7)
leave p1 slow1-0 n6 n2 n1 (0)
leave p5 slow1-0 n6 n1 n0 (0)
leave p2 slow0-0 n0 n1 n0 (0)
leave p0 fast1 n6 n1 n0 (0)
leave p3 fast0 n4 n1 n0 (0)
[t=6.099684s, 38524 KB] Plan length: 31 step(s).
[t=6.099684s, 38524 KB] Plan cost: 88
[t=6.099684s, 38524 KB] Expanded 52827 state(s).
[t=6.099684s, 38524 KB] Reopened 6125 state(s).
[t=6.099684s, 38524 KB] Evaluated 545241 state(s).
[t=6.099684s, 38524 KB] Evaluations: 545241
[t=6.099684s, 38524 KB] Generated 1062350 state(s).
[t=6.099684s, 38524 KB] Dead ends: 0 state(s).
[t=6.099684s, 38524 KB] Number of registered states: 545241
[t=6.099684s, 38524 KB] Int hash set load factor: 545241/1048576 = 0.519982
[t=6.099684s, 38524 KB] Int hash set resizes: 20
[t=6.099684s, 38524 KB] Search time: 6.094119s
[t=6.099684s, 38524 KB] Total time: 6.099684s
Solution found.
Peak memory: 38524 KB
search exit code: 0

INFO     Planner time: 6.23s
