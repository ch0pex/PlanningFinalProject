INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p07.pddl --sas-file 'output/eager_wastar([add()], w=1, k_best=1)/transport/p07.txt.sas'
Parsing...
Parsing: [0.000s CPU, 0.007s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.012s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 27 rules.
Computing model... [0.030s CPU, 0.036s wall-clock]
4810 relevant atoms
4137 auxiliary atoms
8947 final queue length
16983 total queue pushes
Completing instantiation... [0.080s CPU, 0.082s wall-clock]
Instantiating: [0.110s CPU, 0.144s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.005s wall-clock]
Translating task: [0.090s CPU, 0.101s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
14 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.033s wall-clock]
Reordering and filtering variables...
14 of 14 variables necessary.
0 of 14 mutex groups necessary.
4260 of 4260 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 14
Translator derived variables: 0
Translator facts: 270
Translator goal facts: 8
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 4260
Translator axioms: 0
Translator task size: 25168
Translator peak memory: 47928 KB
Writing output... [0.020s CPU, 0.031s wall-clock]
Done! [0.270s CPU, 0.342s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=1, k_best=1)/transport/p07.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=1, k_best=1)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=1, k_best=1)/transport/p07.txt.sas'"'"''
[t=0.001501s, 10804 KB] reading input...
[t=0.013610s, 11988 KB] done reading input!
[t=0.013709s, 12772 KB] Simplifying 8292 unary operators... done! [8292 unary operators]
[t=0.018284s, 13300 KB] time to simplify: 0.004575s
[t=0.018602s, 13300 KB] Initializing additive heuristic...
[t=0.018774s, 13300 KB] Building successor generator...done!
[t=0.019955s, 13564 KB] peak memory difference for successor generator creation: 264 KB
[t=0.019988s, 13564 KB] time for successor generation creation: 0.000000s
[t=0.020013s, 13564 KB] Variables: 14
[t=0.020039s, 13564 KB] FactPairs: 270
[t=0.020063s, 13564 KB] Bytes per state: 12
[t=0.020088s, 13564 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.020120s, 13564 KB] New best heuristic value for add: 775
[t=0.020242s, 13564 KB] g=0, 1 evaluated, 0 expanded
[t=0.020262s, 13564 KB] Initial heuristic value for add: 775
[t=0.020291s, 13564 KB] pruning method: none
[t=0.020342s, 13564 KB] New best heuristic value for add: 755
[t=0.020508s, 13564 KB] g=26, 3 evaluated, 1 expanded
[t=0.020530s, 13564 KB] New best heuristic value for add: 736
[t=0.020623s, 13564 KB] g=22, 4 evaluated, 1 expanded
[t=0.020643s, 13564 KB] New best heuristic value for add: 701
[t=0.020731s, 13564 KB] g=28, 5 evaluated, 1 expanded
[t=0.020752s, 13564 KB] New best heuristic value for add: 696
[t=0.022142s, 13564 KB] g=46, 22 evaluated, 2 expanded
[t=0.022163s, 13564 KB] New best heuristic value for add: 692
[t=0.023441s, 13564 KB] g=47, 36 evaluated, 3 expanded
[t=0.023462s, 13564 KB] New best heuristic value for add: 661
[t=0.024441s, 13564 KB] g=45, 47 evaluated, 4 expanded
[t=0.024462s, 13564 KB] New best heuristic value for add: 652
[t=0.025144s, 13564 KB] g=71, 55 evaluated, 5 expanded
[t=0.025164s, 13564 KB] New best heuristic value for add: 647
[t=0.026240s, 13564 KB] g=72, 67 evaluated, 6 expanded
[t=0.026936s, 13564 KB] New best heuristic value for add: 645
[t=0.027383s, 13564 KB] g=73, 79 evaluated, 7 expanded
[t=0.027404s, 13564 KB] New best heuristic value for add: 637
[t=0.027879s, 13564 KB] g=70, 84 evaluated, 7 expanded
[t=0.027899s, 13564 KB] New best heuristic value for add: 626
[t=0.033289s, 13564 KB] g=92, 143 evaluated, 12 expanded
[t=0.033311s, 13564 KB] New best heuristic value for add: 625
[t=0.034282s, 13564 KB] g=93, 154 evaluated, 13 expanded
[t=0.063055s, 13564 KB] New best heuristic value for add: 620
[t=0.063626s, 13564 KB] g=114, 475 evaluated, 52 expanded
[t=0.063657s, 13564 KB] New best heuristic value for add: 595
[t=0.065943s, 13564 KB] g=139, 501 evaluated, 55 expanded
[t=0.065964s, 13564 KB] New best heuristic value for add: 593
[t=0.066946s, 13564 KB] g=140, 512 evaluated, 56 expanded
[t=0.066966s, 13564 KB] New best heuristic value for add: 568
[t=0.068162s, 13564 KB] g=165, 525 evaluated, 57 expanded
[t=0.068182s, 13564 KB] New best heuristic value for add: 556
[t=0.069370s, 13564 KB] g=177, 538 evaluated, 58 expanded
[t=0.069390s, 13564 KB] New best heuristic value for add: 555
[t=0.070779s, 13564 KB] g=178, 553 evaluated, 59 expanded
[t=0.089357s, 13564 KB] New best heuristic value for add: 549
[t=0.094213s, 13564 KB] g=177, 812 evaluated, 85 expanded
[t=0.094239s, 13564 KB] New best heuristic value for add: 531
[t=0.094851s, 13564 KB] g=179, 819 evaluated, 85 expanded
[t=0.094873s, 13564 KB] New best heuristic value for add: 530
[t=0.096916s, 13564 KB] g=180, 843 evaluated, 87 expanded
[t=0.097923s, 13564 KB] New best heuristic value for add: 524
[t=0.099299s, 13564 KB] g=202, 871 evaluated, 90 expanded
[t=0.099320s, 13564 KB] New best heuristic value for add: 523
[t=0.102744s, 13564 KB] g=203, 913 evaluated, 94 expanded
[t=0.106719s, 13564 KB] New best heuristic value for add: 519
[t=0.107527s, 13564 KB] g=207, 971 evaluated, 100 expanded
[t=0.107549s, 13564 KB] New best heuristic value for add: 511
[t=0.107725s, 13564 KB] g=213, 973 evaluated, 100 expanded
[t=0.107747s, 13564 KB] New best heuristic value for add: 501
[t=0.108306s, 13564 KB] g=209, 980 evaluated, 100 expanded
[t=0.108329s, 13564 KB] New best heuristic value for add: 497
[t=0.108871s, 13564 KB] g=185, 987 evaluated, 101 expanded
[t=0.108893s, 13564 KB] New best heuristic value for add: 490
[t=0.109579s, 13564 KB] g=208, 996 evaluated, 102 expanded
[t=0.109602s, 13564 KB] New best heuristic value for add: 453
[t=0.109771s, 13564 KB] g=214, 998 evaluated, 102 expanded
[t=0.109792s, 13564 KB] New best heuristic value for add: 446
[t=0.110770s, 13564 KB] g=237, 1011 evaluated, 103 expanded
[t=0.110792s, 13564 KB] New best heuristic value for add: 427
[t=0.110959s, 13564 KB] g=240, 1013 evaluated, 103 expanded
[t=0.110980s, 13564 KB] New best heuristic value for add: 420
[t=0.111983s, 13564 KB] g=263, 1026 evaluated, 104 expanded
[t=0.112005s, 13564 KB] New best heuristic value for add: 402
[t=0.112733s, 13564 KB] g=265, 1036 evaluated, 104 expanded
[t=0.113694s, 13564 KB] New best heuristic value for add: 401
[t=0.114966s, 13564 KB] g=266, 1065 evaluated, 106 expanded
[t=0.114991s, 13564 KB] New best heuristic value for add: 395
[t=0.115400s, 13564 KB] g=288, 1070 evaluated, 107 expanded
[t=0.115425s, 13564 KB] New best heuristic value for add: 394
[t=0.116446s, 13564 KB] g=289, 1083 evaluated, 108 expanded
[t=0.288227s, 13564 KB] New best heuristic value for add: 389
[t=0.289484s, 13564 KB] g=292, 2906 evaluated, 264 expanded
[t=0.289507s, 13564 KB] New best heuristic value for add: 388
[t=0.291217s, 13564 KB] g=293, 2928 evaluated, 266 expanded
[t=0.291237s, 13564 KB] New best heuristic value for add: 382
[t=0.292963s, 13564 KB] g=294, 2951 evaluated, 268 expanded
[t=0.292983s, 13564 KB] New best heuristic value for add: 375
[t=0.293892s, 13564 KB] g=317, 2963 evaluated, 269 expanded
[t=0.293922s, 13564 KB] New best heuristic value for add: 368
[t=0.294109s, 13564 KB] g=323, 2965 evaluated, 269 expanded
[t=0.294131s, 13564 KB] New best heuristic value for add: 357
[t=0.294698s, 13564 KB] g=319, 2972 evaluated, 269 expanded
[t=0.296077s, 13564 KB] New best heuristic value for add: 350
[t=0.297159s, 13564 KB] g=342, 3004 evaluated, 272 expanded
[t=0.297180s, 13564 KB] New best heuristic value for add: 343
[t=0.297362s, 13564 KB] g=348, 3006 evaluated, 272 expanded
[t=0.297383s, 13564 KB] New best heuristic value for add: 334
[t=0.299481s, 13564 KB] g=328, 3034 evaluated, 274 expanded
[t=0.299502s, 13564 KB] New best heuristic value for add: 327
[t=0.300293s, 13564 KB] g=351, 3045 evaluated, 275 expanded
[t=0.300322s, 13564 KB] New best heuristic value for add: 313
[t=0.300516s, 13564 KB] g=349, 3047 evaluated, 275 expanded
[t=0.300544s, 13564 KB] New best heuristic value for add: 309
[t=0.301145s, 13564 KB] g=353, 3055 evaluated, 275 expanded
[t=0.301168s, 13564 KB] New best heuristic value for add: 306
[t=0.301570s, 13564 KB] g=372, 3060 evaluated, 276 expanded
[t=0.301592s, 13564 KB] New best heuristic value for add: 287
[t=0.301774s, 13564 KB] g=375, 3062 evaluated, 276 expanded
[t=0.303634s, 13564 KB] New best heuristic value for add: 272
[t=0.303798s, 13564 KB] g=398, 3088 evaluated, 278 expanded
[t=0.303819s, 13564 KB] New best heuristic value for add: 262
[t=0.304688s, 13564 KB] g=400, 3098 evaluated, 278 expanded
[t=0.304710s, 13564 KB] New best heuristic value for add: 247
[t=0.307196s, 13564 KB] g=423, 3130 evaluated, 281 expanded
[t=0.307218s, 13564 KB] New best heuristic value for add: 246
[t=0.309399s, 13564 KB] g=424, 3156 evaluated, 283 expanded
[t=0.320885s, 13564 KB] New best heuristic value for add: 241
[t=0.326933s, 13564 KB] g=424, 3374 evaluated, 299 expanded
[t=0.326961s, 13564 KB] New best heuristic value for add: 237
[t=0.329055s, 13564 KB] g=418, 3397 evaluated, 300 expanded
[t=0.329245s, 13564 KB] New best heuristic value for add: 222
[t=0.329718s, 13564 KB] g=441, 3401 evaluated, 301 expanded
[t=0.329747s, 13564 KB] New best heuristic value for add: 220
[t=0.331107s, 13564 KB] g=442, 3417 evaluated, 302 expanded
[t=0.331130s, 13564 KB] New best heuristic value for add: 214
[t=0.331892s, 13564 KB] g=440, 3426 evaluated, 302 expanded
[t=0.331917s, 13564 KB] New best heuristic value for add: 199
[t=0.332587s, 13564 KB] g=463, 3434 evaluated, 303 expanded
[t=0.332610s, 13564 KB] New best heuristic value for add: 189
[t=0.333218s, 13564 KB] g=465, 3443 evaluated, 303 expanded
[t=0.333241s, 13564 KB] New best heuristic value for add: 174
[t=0.333697s, 13564 KB] g=488, 3449 evaluated, 304 expanded
[t=0.333720s, 13564 KB] New best heuristic value for add: 166
[t=0.334280s, 13564 KB] g=488, 3459 evaluated, 304 expanded
[t=0.334302s, 13564 KB] New best heuristic value for add: 151
[t=0.334686s, 13564 KB] g=511, 3464 evaluated, 305 expanded
[t=0.334709s, 13564 KB] New best heuristic value for add: 138
[t=0.335174s, 13564 KB] g=516, 3473 evaluated, 305 expanded
[t=0.335198s, 13564 KB] New best heuristic value for add: 123
[t=0.335538s, 13564 KB] g=539, 3478 evaluated, 306 expanded
[t=0.335559s, 13564 KB] New best heuristic value for add: 122
[t=0.336652s, 13564 KB] g=540, 3491 evaluated, 307 expanded
[t=0.353534s, 13564 KB] New best heuristic value for add: 111
[t=0.354976s, 13564 KB] g=552, 3759 evaluated, 329 expanded
[t=0.355002s, 13564 KB] New best heuristic value for add: 110
[t=0.355446s, 13564 KB] g=553, 3767 evaluated, 330 expanded
[t=0.355480s, 13564 KB] New best heuristic value for add: 108
[t=0.359827s, 13564 KB] g=550, 3834 evaluated, 335 expanded
[t=0.359853s, 13564 KB] New best heuristic value for add: 107
[t=0.360434s, 13564 KB] g=551, 3845 evaluated, 336 expanded
[t=0.361633s, 13564 KB] New best heuristic value for add: 101
[t=0.363289s, 13564 KB] g=573, 3887 evaluated, 341 expanded
[t=0.363310s, 13564 KB] New best heuristic value for add: 100
[t=0.363666s, 13564 KB] g=574, 3893 evaluated, 342 expanded
[t=0.363686s, 13700 KB] New best heuristic value for add: 99
[t=0.367505s, 13700 KB] g=575, 3950 evaluated, 348 expanded
[t=0.416266s, 13700 KB] New best heuristic value for add: 90
[t=0.420339s, 13700 KB] g=576, 4699 evaluated, 414 expanded
[t=0.420361s, 13700 KB] New best heuristic value for add: 89
[t=0.420770s, 13700 KB] g=577, 4706 evaluated, 415 expanded
[t=0.480290s, 13700 KB] New best heuristic value for add: 88
[t=0.484018s, 13700 KB] g=575, 5589 evaluated, 513 expanded
[t=0.489161s, 13700 KB] New best heuristic value for add: 86
[t=0.490920s, 13700 KB] g=597, 5706 evaluated, 525 expanded
[t=0.490947s, 13700 KB] New best heuristic value for add: 82
[t=0.491004s, 13700 KB] g=602, 5707 evaluated, 525 expanded
[t=0.491042s, 13700 KB] New best heuristic value for add: 81
[t=0.491329s, 13700 KB] g=603, 5714 evaluated, 526 expanded
[t=0.491351s, 13700 KB] New best heuristic value for add: 80
[t=0.494425s, 13700 KB] g=604, 5773 evaluated, 532 expanded
[t=0.700300s, 13832 KB] New best heuristic value for add: 70
[t=0.701452s, 13832 KB] g=596, 8474 evaluated, 807 expanded
[t=0.701480s, 13832 KB] New best heuristic value for add: 69
[t=0.701839s, 13832 KB] g=597, 8483 evaluated, 808 expanded
[t=0.701865s, 13832 KB] New best heuristic value for add: 66
[t=0.706710s, 13832 KB] g=620, 8561 evaluated, 815 expanded
[t=0.706736s, 13832 KB] New best heuristic value for add: 65
[t=0.707082s, 13832 KB] g=621, 8569 evaluated, 816 expanded
[t=0.708453s, 13832 KB] New best heuristic value for add: 64
[t=0.710192s, 13832 KB] g=622, 8628 evaluated, 822 expanded
[t=0.745094s, 13832 KB] New best heuristic value for add: 63
[t=0.748984s, 13832 KB] g=599, 9165 evaluated, 877 expanded
[t=0.749014s, 13832 KB] New best heuristic value for add: 60
[t=0.749325s, 13832 KB] g=602, 9173 evaluated, 878 expanded
[t=0.753723s, 13832 KB] New best heuristic value for add: 59
[t=0.754530s, 13832 KB] g=603, 9255 evaluated, 887 expanded
[t=0.754558s, 13832 KB] New best heuristic value for add: 51
[t=0.755627s, 13832 KB] g=611, 9274 evaluated, 889 expanded
[t=0.755652s, 13832 KB] New best heuristic value for add: 35
[t=0.755978s, 13832 KB] g=627, 9283 evaluated, 890 expanded
[t=0.756004s, 13832 KB] New best heuristic value for add: 34
[t=0.760794s, 13832 KB] g=628, 9375 evaluated, 901 expanded
[t=0.760819s, 13832 KB] New best heuristic value for add: 23
[t=0.761690s, 13832 KB] g=639, 9399 evaluated, 904 expanded
[t=0.761725s, 13832 KB] New best heuristic value for add: 15
[t=0.764981s, 13832 KB] g=647, 9472 evaluated, 913 expanded
[t=0.765006s, 13832 KB] New best heuristic value for add: 14
[t=0.767784s, 13832 KB] g=648, 9555 evaluated, 924 expanded
[t=0.767809s, 13832 KB] New best heuristic value for add: 3
[t=0.768430s, 13832 KB] g=659, 9575 evaluated, 927 expanded
[t=0.770034s, 13832 KB] New best heuristic value for add: 2
[t=0.770141s, 13832 KB] g=660, 9638 evaluated, 936 expanded
[t=0.770166s, 13832 KB] New best heuristic value for add: 1
[t=0.771533s, 13832 KB] g=661, 9700 evaluated, 945 expanded
[t=0.771559s, 13832 KB] New best heuristic value for add: 0
[t=0.772258s, 13832 KB] g=662, 9740 evaluated, 951 expanded
[t=0.772283s, 13832 KB] Solution found!
[t=0.772473s, 13832 KB] Actual search time: 0.752131s
drive truck-3 city-loc-17 city-loc-21 (28)
pick-up truck-1 city-loc-1 package-7 capacity-3 capacity-4 (1)
drive truck-2 city-loc-10 city-loc-7 (18)
drive truck-1 city-loc-1 city-loc-4 (26)
pick-up truck-2 city-loc-7 package-8 capacity-3 capacity-4 (1)
drive truck-2 city-loc-7 city-loc-3 (16)
drive truck-2 city-loc-3 city-loc-12 (23)
drive truck-1 city-loc-4 city-loc-14 (13)
drive truck-2 city-loc-12 city-loc-19 (28)
pick-up truck-2 city-loc-19 package-2 capacity-2 capacity-3 (1)
pick-up truck-2 city-loc-19 package-4 capacity-1 capacity-2 (1)
pick-up truck-2 city-loc-19 package-6 capacity-0 capacity-1 (1)
drive truck-2 city-loc-19 city-loc-12 (28)
drive truck-2 city-loc-12 city-loc-1 (29)
drive truck-2 city-loc-1 city-loc-4 (26)
drop truck-2 city-loc-4 package-6 capacity-0 capacity-1 (1)
drop truck-2 city-loc-4 package-4 capacity-1 capacity-2 (1)
drive truck-2 city-loc-4 city-loc-5 (12)
drop truck-2 city-loc-5 package-2 capacity-2 capacity-3 (1)
pick-up truck-2 city-loc-5 package-3 capacity-2 capacity-3 (1)
drive truck-2 city-loc-5 city-loc-4 (12)
pick-up truck-2 city-loc-4 package-4 capacity-1 capacity-2 (1)
drive truck-2 city-loc-4 city-loc-1 (26)
drive truck-2 city-loc-1 city-loc-7 (15)
drive truck-2 city-loc-7 city-loc-10 (18)
drive truck-2 city-loc-10 city-loc-17 (21)
drive truck-1 city-loc-14 city-loc-8 (25)
drop truck-2 city-loc-17 package-8 capacity-1 capacity-2 (1)
drive truck-2 city-loc-17 city-loc-11 (26)
drop truck-1 city-loc-8 package-7 capacity-3 capacity-4 (1)
drive truck-1 city-loc-8 city-loc-17 (16)
pick-up truck-1 city-loc-17 package-8 capacity-3 capacity-4 (1)
drive truck-2 city-loc-11 city-loc-16 (16)
drop truck-2 city-loc-16 package-4 capacity-2 capacity-3 (1)
drive truck-2 city-loc-16 city-loc-13 (20)
drop truck-2 city-loc-13 package-3 capacity-3 capacity-4 (1)
drive truck-3 city-loc-21 city-loc-6 (23)
drive truck-2 city-loc-13 city-loc-18 (24)
pick-up truck-2 city-loc-18 package-1 capacity-3 capacity-4 (1)
pick-up truck-3 city-loc-6 package-5 capacity-1 capacity-2 (1)
drive truck-3 city-loc-6 city-loc-2 (19)
drop truck-3 city-loc-2 package-5 capacity-1 capacity-2 (1)
drive truck-2 city-loc-18 city-loc-9 (25)
drive truck-2 city-loc-9 city-loc-21 (12)
drop truck-2 city-loc-21 package-1 capacity-3 capacity-4 (1)
drive truck-1 city-loc-17 city-loc-10 (21)
drive truck-1 city-loc-10 city-loc-3 (25)
drive truck-1 city-loc-3 city-loc-12 (23)
drive truck-1 city-loc-12 city-loc-19 (28)
drop truck-1 city-loc-19 package-8 capacity-3 capacity-4 (1)
[t=0.772502s, 13832 KB] Plan length: 50 step(s).
[t=0.772502s, 13832 KB] Plan cost: 662
[t=0.772502s, 13832 KB] Expanded 954 state(s).
[t=0.772502s, 13832 KB] Reopened 0 state(s).
[t=0.772502s, 13832 KB] Evaluated 9752 state(s).
[t=0.772502s, 13832 KB] Evaluations: 9752
[t=0.772502s, 13832 KB] Generated 14539 state(s).
[t=0.772502s, 13832 KB] Dead ends: 0 state(s).
[t=0.772502s, 13832 KB] Number of registered states: 9752
[t=0.772502s, 13832 KB] Int hash set load factor: 9752/16384 = 0.595215
[t=0.772502s, 13832 KB] Int hash set resizes: 14
[t=0.772502s, 13832 KB] Search time: 0.752414s
[t=0.772502s, 13832 KB] Total time: 0.772502s
Solution found.
Peak memory: 13832 KB
search exit code: 0

INFO     Planner time: 1.13s
