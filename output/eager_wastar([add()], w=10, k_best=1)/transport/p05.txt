INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p05.pddl --sas-file 'output/eager_wastar([add()], w=10, k_best=1)/transport/p05.txt.sas'
Parsing...
Parsing: [0.000s CPU, 0.006s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.008s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 27 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1944 relevant atoms
1792 auxiliary atoms
3736 final queue length
6616 total queue pushes
Completing instantiation... [0.030s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.044s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
10 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
10 of 10 variables necessary.
0 of 10 mutex groups necessary.
1572 of 1572 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.004s wall-clock]
Translator variables: 10
Translator derived variables: 0
Translator facts: 142
Translator goal facts: 6
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 1572
Translator axioms: 0
Translator task size: 9194
Translator peak memory: 37404 KB
Writing output... [0.000s CPU, 0.011s wall-clock]
Done! [0.080s CPU, 0.108s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=10, k_best=1)/transport/p05.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=10, k_best=1)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=10, k_best=1)/transport/p05.txt.sas'"'"''
[t=0.001493s, 10804 KB] reading input...
[t=0.005910s, 11208 KB] done reading input!
[t=0.006028s, 11748 KB] Simplifying 3012 unary operators... done! [3012 unary operators]
[t=0.008093s, 11748 KB] time to simplify: 0.002065s
[t=0.008219s, 11920 KB] Initializing additive heuristic...
[t=0.008306s, 11920 KB] Building successor generator...done!
[t=0.008705s, 11920 KB] peak memory difference for successor generator creation: 0 KB
[t=0.008755s, 11920 KB] time for successor generation creation: 0.000000s
[t=0.008781s, 11920 KB] Variables: 10
[t=0.008806s, 11920 KB] FactPairs: 142
[t=0.008831s, 11920 KB] Bytes per state: 8
[t=0.008862s, 11920 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.008893s, 11920 KB] New best heuristic value for add: 391
[t=0.008958s, 11920 KB] g=0, 1 evaluated, 0 expanded
[t=0.008977s, 11920 KB] Initial heuristic value for add: 391
[t=0.009005s, 11920 KB] pruning method: none
[t=0.009025s, 11920 KB] New best heuristic value for add: 390
[t=0.009165s, 11920 KB] g=28, 5 evaluated, 1 expanded
[t=0.009190s, 11920 KB] New best heuristic value for add: 355
[t=0.009434s, 11920 KB] g=18, 14 evaluated, 1 expanded
[t=0.009457s, 11920 KB] New best heuristic value for add: 354
[t=0.009686s, 11920 KB] g=19, 23 evaluated, 2 expanded
[t=0.009710s, 11920 KB] New best heuristic value for add: 307
[t=0.009817s, 11920 KB] g=42, 26 evaluated, 2 expanded
[t=0.009840s, 11920 KB] New best heuristic value for add: 306
[t=0.010139s, 11920 KB] g=43, 35 evaluated, 3 expanded
[t=0.010175s, 11920 KB] New best heuristic value for add: 305
[t=0.010528s, 11920 KB] g=44, 47 evaluated, 4 expanded
[t=0.010553s, 11920 KB] New best heuristic value for add: 280
[t=0.010853s, 11920 KB] g=69, 57 evaluated, 5 expanded
[t=0.010874s, 11920 KB] New best heuristic value for add: 279
[t=0.011138s, 11920 KB] g=70, 67 evaluated, 6 expanded
[t=0.011160s, 11920 KB] New best heuristic value for add: 267
[t=0.012548s, 11920 KB] g=148, 122 evaluated, 12 expanded
[t=0.012570s, 11920 KB] New best heuristic value for add: 264
[t=0.012652s, 11920 KB] g=139, 124 evaluated, 12 expanded
[t=0.012676s, 11920 KB] New best heuristic value for add: 263
[t=0.012783s, 11920 KB] g=159, 127 evaluated, 13 expanded
[t=0.012810s, 11920 KB] New best heuristic value for add: 252
[t=0.012952s, 11920 KB] g=155, 131 evaluated, 13 expanded
[t=0.012977s, 11920 KB] New best heuristic value for add: 251
[t=0.013226s, 11920 KB] g=156, 139 evaluated, 14 expanded
[t=0.013248s, 11920 KB] New best heuristic value for add: 242
[t=0.013353s, 11920 KB] g=180, 142 evaluated, 14 expanded
[t=0.013380s, 11920 KB] New best heuristic value for add: 241
[t=0.013587s, 11920 KB] g=181, 149 evaluated, 15 expanded
[t=0.013612s, 11920 KB] New best heuristic value for add: 240
[t=0.014292s, 11920 KB] g=205, 175 evaluated, 18 expanded
[t=0.014318s, 11920 KB] New best heuristic value for add: 227
[t=0.014575s, 11920 KB] g=219, 184 evaluated, 19 expanded
[t=0.014601s, 11920 KB] New best heuristic value for add: 222
[t=0.014664s, 11920 KB] g=228, 185 evaluated, 19 expanded
[t=0.014702s, 11920 KB] New best heuristic value for add: 208
[t=0.014975s, 11920 KB] g=250, 194 evaluated, 20 expanded
[t=0.015001s, 11920 KB] New best heuristic value for add: 200
[t=0.015068s, 11920 KB] g=257, 195 evaluated, 20 expanded
[t=0.015094s, 11920 KB] New best heuristic value for add: 197
[t=0.015559s, 11920 KB] g=287, 212 evaluated, 21 expanded
[t=0.015591s, 11920 KB] New best heuristic value for add: 178
[t=0.015786s, 11920 KB] g=302, 218 evaluated, 22 expanded
[t=0.015807s, 11920 KB] New best heuristic value for add: 177
[t=0.016064s, 11920 KB] g=303, 227 evaluated, 23 expanded
[t=0.016085s, 11920 KB] New best heuristic value for add: 176
[t=0.016723s, 11920 KB] g=321, 252 evaluated, 25 expanded
[t=0.016743s, 11920 KB] New best heuristic value for add: 159
[t=0.017011s, 11920 KB] g=338, 262 evaluated, 26 expanded
[t=0.017031s, 11920 KB] New best heuristic value for add: 148
[t=0.017124s, 11920 KB] g=350, 265 evaluated, 26 expanded
[t=0.017145s, 11920 KB] New best heuristic value for add: 128
[t=0.017388s, 11920 KB] g=370, 274 evaluated, 27 expanded
[t=0.017407s, 11920 KB] New best heuristic value for add: 114
[t=0.017741s, 11920 KB] g=384, 287 evaluated, 28 expanded
[t=0.017760s, 11920 KB] New best heuristic value for add: 113
[t=0.018019s, 11920 KB] g=385, 298 evaluated, 29 expanded
[t=0.022010s, 12052 KB] New best heuristic value for add: 112
[t=0.023131s, 12052 KB] g=453, 527 evaluated, 55 expanded
[t=0.023160s, 12052 KB] New best heuristic value for add: 88
[t=0.023372s, 12052 KB] g=477, 536 evaluated, 56 expanded
[t=0.023392s, 12052 KB] New best heuristic value for add: 58
[t=0.023637s, 12052 KB] g=507, 547 evaluated, 57 expanded
[t=0.023656s, 12052 KB] New best heuristic value for add: 57
[t=0.024004s, 12052 KB] g=508, 562 evaluated, 58 expanded
[t=0.024025s, 12184 KB] New best heuristic value for add: 56
[t=0.026056s, 12184 KB] g=539, 653 evaluated, 69 expanded
[t=0.026079s, 12184 KB] New best heuristic value for add: 26
[t=0.026144s, 12184 KB] g=569, 655 evaluated, 70 expanded
[t=0.026166s, 12184 KB] New best heuristic value for add: 19
[t=0.026346s, 12184 KB] g=593, 663 evaluated, 71 expanded
[t=0.026369s, 12184 KB] New best heuristic value for add: 1
[t=0.026425s, 12184 KB] g=594, 666 evaluated, 71 expanded
[t=0.026443s, 12184 KB] New best heuristic value for add: 0
[t=0.026581s, 12184 KB] g=595, 677 evaluated, 72 expanded
[t=0.026601s, 12184 KB] Solution found!
[t=0.026654s, 12184 KB] Actual search time: 0.017629s
drive truck-1 city-loc-12 city-loc-7 (18)
drive truck-1 city-loc-7 city-loc-9 (24)
pick-up truck-2 city-loc-5 package-3 capacity-1 capacity-2 (1)
pick-up truck-1 city-loc-9 package-4 capacity-2 capacity-3 (1)
drive truck-1 city-loc-9 city-loc-8 (25)
drop truck-1 city-loc-8 package-4 capacity-2 capacity-3 (1)
drive truck-1 city-loc-8 city-loc-9 (25)
drive truck-1 city-loc-9 city-loc-7 (24)
drive truck-1 city-loc-7 city-loc-3 (20)
drive truck-2 city-loc-5 city-loc-2 (16)
drive truck-1 city-loc-3 city-loc-15 (25)
drop truck-2 city-loc-2 package-3 capacity-1 capacity-2 (1)
drive truck-2 city-loc-2 city-loc-4 (23)
pick-up truck-2 city-loc-4 package-6 capacity-1 capacity-2 (1)
drive truck-2 city-loc-4 city-loc-2 (23)
drive truck-2 city-loc-2 city-loc-14 (29)
drive truck-1 city-loc-15 city-loc-13 (30)
drive truck-2 city-loc-14 city-loc-15 (15)
drop truck-2 city-loc-15 package-6 capacity-1 capacity-2 (1)
drive truck-1 city-loc-13 city-loc-6 (17)
pick-up truck-1 city-loc-6 package-5 capacity-2 capacity-3 (1)
drive truck-1 city-loc-6 city-loc-5 (29)
drive truck-1 city-loc-5 city-loc-12 (20)
drive truck-1 city-loc-12 city-loc-4 (14)
drop truck-1 city-loc-4 package-5 capacity-2 capacity-3 (1)
drive truck-1 city-loc-4 city-loc-7 (29)
drive truck-1 city-loc-7 city-loc-3 (20)
drive truck-1 city-loc-3 city-loc-10 (18)
pick-up truck-1 city-loc-10 package-1 capacity-2 capacity-3 (1)
drive truck-1 city-loc-10 city-loc-15 (24)
drive truck-1 city-loc-15 city-loc-13 (30)
drop truck-1 city-loc-13 package-1 capacity-2 capacity-3 (1)
drive truck-2 city-loc-15 city-loc-11 (30)
pick-up truck-2 city-loc-11 package-2 capacity-1 capacity-2 (1)
drive truck-2 city-loc-11 city-loc-15 (30)
drive truck-2 city-loc-15 city-loc-3 (25)
drop truck-2 city-loc-3 package-2 capacity-1 capacity-2 (1)
[t=0.026676s, 12184 KB] Plan length: 37 step(s).
[t=0.026676s, 12184 KB] Plan cost: 595
[t=0.026676s, 12184 KB] Expanded 73 state(s).
[t=0.026676s, 12184 KB] Reopened 0 state(s).
[t=0.026676s, 12184 KB] Evaluated 683 state(s).
[t=0.026676s, 12184 KB] Evaluations: 683
[t=0.026676s, 12184 KB] Generated 950 state(s).
[t=0.026676s, 12184 KB] Dead ends: 0 state(s).
[t=0.026676s, 12184 KB] Number of registered states: 683
[t=0.026676s, 12184 KB] Int hash set load factor: 683/1024 = 0.666992
[t=0.026676s, 12184 KB] Int hash set resizes: 10
[t=0.026676s, 12184 KB] Search time: 0.017814s
[t=0.026676s, 12184 KB] Total time: 0.026676s
Solution found.
Peak memory: 12184 KB
search exit code: 0

INFO     Planner time: 0.19s
