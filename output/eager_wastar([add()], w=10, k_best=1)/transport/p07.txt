INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p07.pddl --sas-file 'output/eager_wastar([add()], w=10, k_best=1)/transport/p07.txt.sas'
Parsing...
Parsing: [0.000s CPU, 0.006s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.010s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 27 rules.
Computing model... [0.030s CPU, 0.024s wall-clock]
4810 relevant atoms
4137 auxiliary atoms
8947 final queue length
16983 total queue pushes
Completing instantiation... [0.060s CPU, 0.066s wall-clock]
Instantiating: [0.090s CPU, 0.104s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.004s wall-clock]
Translating task: [0.070s CPU, 0.075s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
14 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.030s wall-clock]
Reordering and filtering variables...
14 of 14 variables necessary.
0 of 14 mutex groups necessary.
4260 of 4260 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 14
Translator derived variables: 0
Translator facts: 270
Translator goal facts: 8
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 4260
Translator axioms: 0
Translator task size: 25168
Translator peak memory: 47800 KB
Writing output... [0.020s CPU, 0.027s wall-clock]
Done! [0.230s CPU, 0.262s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=10, k_best=1)/transport/p07.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=10, k_best=1)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=10, k_best=1)/transport/p07.txt.sas'"'"''
[t=0.001679s, 10804 KB] reading input...
[t=0.013805s, 11988 KB] done reading input!
[t=0.013919s, 12772 KB] Simplifying 8292 unary operators... done! [8292 unary operators]
[t=0.018559s, 13300 KB] time to simplify: 0.004640s
[t=0.018880s, 13300 KB] Initializing additive heuristic...
[t=0.019026s, 13300 KB] Building successor generator...done!
[t=0.020164s, 13564 KB] peak memory difference for successor generator creation: 264 KB
[t=0.020194s, 13564 KB] time for successor generation creation: 0.000000s
[t=0.020215s, 13564 KB] Variables: 14
[t=0.020244s, 13564 KB] FactPairs: 270
[t=0.020265s, 13564 KB] Bytes per state: 12
[t=0.020284s, 13564 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.020315s, 13564 KB] New best heuristic value for add: 775
[t=0.020436s, 13564 KB] g=0, 1 evaluated, 0 expanded
[t=0.020463s, 13564 KB] Initial heuristic value for add: 775
[t=0.020487s, 13564 KB] pruning method: none
[t=0.020507s, 13564 KB] New best heuristic value for add: 755
[t=0.020668s, 13564 KB] g=26, 3 evaluated, 1 expanded
[t=0.020688s, 13564 KB] New best heuristic value for add: 736
[t=0.020775s, 13564 KB] g=22, 4 evaluated, 1 expanded
[t=0.020795s, 13564 KB] New best heuristic value for add: 701
[t=0.020897s, 13564 KB] g=28, 5 evaluated, 1 expanded
[t=0.020919s, 13564 KB] New best heuristic value for add: 696
[t=0.022336s, 13564 KB] g=46, 22 evaluated, 2 expanded
[t=0.023137s, 13564 KB] New best heuristic value for add: 692
[t=0.023666s, 13564 KB] g=47, 36 evaluated, 3 expanded
[t=0.023692s, 13564 KB] New best heuristic value for add: 690
[t=0.024812s, 13564 KB] g=48, 48 evaluated, 4 expanded
[t=0.024833s, 13564 KB] New best heuristic value for add: 650
[t=0.025148s, 13564 KB] g=73, 51 evaluated, 4 expanded
[t=0.025178s, 13564 KB] New best heuristic value for add: 648
[t=0.025684s, 13564 KB] g=96, 56 evaluated, 5 expanded
[t=0.025710s, 13564 KB] New best heuristic value for add: 645
[t=0.026785s, 13564 KB] g=97, 67 evaluated, 6 expanded
[t=0.026806s, 13564 KB] New best heuristic value for add: 638
[t=0.027018s, 13564 KB] g=89, 69 evaluated, 6 expanded
[t=0.027039s, 13564 KB] New best heuristic value for add: 627
[t=0.027255s, 13564 KB] g=90, 71 evaluated, 6 expanded
[t=0.027286s, 13564 KB] New best heuristic value for add: 620
[t=0.027956s, 13564 KB] g=113, 78 evaluated, 7 expanded
[t=0.027981s, 13564 KB] New best heuristic value for add: 604
[t=0.028184s, 13564 KB] g=113, 80 evaluated, 7 expanded
[t=0.028204s, 13564 KB] New best heuristic value for add: 597
[t=0.029039s, 13564 KB] g=136, 89 evaluated, 8 expanded
[t=0.029064s, 13564 KB] New best heuristic value for add: 576
[t=0.029272s, 13564 KB] g=141, 91 evaluated, 8 expanded
[t=0.029293s, 13564 KB] New best heuristic value for add: 569
[t=0.030189s, 13564 KB] g=164, 100 evaluated, 9 expanded
[t=0.030673s, 13564 KB] New best heuristic value for add: 556
[t=0.030957s, 13564 KB] g=154, 107 evaluated, 9 expanded
[t=0.030983s, 13564 KB] New best heuristic value for add: 549
[t=0.031561s, 13564 KB] g=177, 113 evaluated, 10 expanded
[t=0.031582s, 13564 KB] New best heuristic value for add: 531
[t=0.032146s, 13564 KB] g=179, 119 evaluated, 10 expanded
[t=0.032171s, 13564 KB] New best heuristic value for add: 524
[t=0.032631s, 13564 KB] g=202, 124 evaluated, 11 expanded
[t=0.032651s, 13564 KB] New best heuristic value for add: 523
[t=0.033617s, 13564 KB] g=203, 135 evaluated, 12 expanded
[t=0.033639s, 13564 KB] New best heuristic value for add: 507
[t=0.034537s, 13564 KB] g=226, 145 evaluated, 13 expanded
[t=0.034560s, 13564 KB] New best heuristic value for add: 506
[t=0.035947s, 13564 KB] g=227, 161 evaluated, 14 expanded
[t=0.035969s, 13564 KB] New best heuristic value for add: 505
[t=0.037149s, 13564 KB] g=228, 175 evaluated, 15 expanded
[t=0.037169s, 13564 KB] New best heuristic value for add: 477
[t=0.038216s, 13564 KB] g=256, 188 evaluated, 16 expanded
[t=0.038921s, 13564 KB] New best heuristic value for add: 462
[t=0.039392s, 13564 KB] g=285, 201 evaluated, 17 expanded
[t=0.188701s, 13828 KB] New best heuristic value for add: 460
[t=0.188786s, 13828 KB] g=356, 2031 evaluated, 172 expanded
[t=0.188814s, 13828 KB] New best heuristic value for add: 442
[t=0.189714s, 13828 KB] g=374, 2044 evaluated, 173 expanded
[t=0.189738s, 13828 KB] New best heuristic value for add: 417
[t=0.190730s, 13828 KB] g=399, 2058 evaluated, 174 expanded
[t=0.190750s, 13828 KB] New best heuristic value for add: 401
[t=0.191872s, 13828 KB] g=415, 2073 evaluated, 175 expanded
[t=0.191893s, 13828 KB] New best heuristic value for add: 375
[t=0.193053s, 13828 KB] g=441, 2088 evaluated, 176 expanded
[t=0.193080s, 13828 KB] New best heuristic value for add: 362
[t=0.194238s, 13828 KB] g=454, 2104 evaluated, 177 expanded
[t=0.194259s, 13828 KB] New best heuristic value for add: 361
[t=0.195444s, 13828 KB] g=455, 2121 evaluated, 178 expanded
[t=0.207187s, 13960 KB] New best heuristic value for add: 339
[t=0.212832s, 13960 KB] g=502, 2362 evaluated, 197 expanded
[t=0.212855s, 13960 KB] New best heuristic value for add: 320
[t=0.213340s, 13960 KB] g=521, 2369 evaluated, 198 expanded
[t=0.213362s, 13960 KB] New best heuristic value for add: 319
[t=0.214130s, 13960 KB] g=522, 2381 evaluated, 199 expanded
[t=0.214152s, 13960 KB] New best heuristic value for add: 318
[t=0.214821s, 13960 KB] g=522, 2391 evaluated, 199 expanded
[t=0.214842s, 13960 KB] New best heuristic value for add: 317
[t=0.215000s, 13960 KB] g=523, 2393 evaluated, 200 expanded
[t=0.215025s, 13960 KB] New best heuristic value for add: 293
[t=0.215608s, 13960 KB] g=547, 2402 evaluated, 200 expanded
[t=0.215779s, 13960 KB] New best heuristic value for add: 292
[t=0.215899s, 13960 KB] g=548, 2405 evaluated, 201 expanded
[t=0.215920s, 13960 KB] New best heuristic value for add: 281
[t=0.216555s, 13960 KB] g=559, 2414 evaluated, 201 expanded
[t=0.216575s, 13960 KB] New best heuristic value for add: 280
[t=0.216927s, 13960 KB] g=560, 2419 evaluated, 202 expanded
[t=0.216948s, 13960 KB] New best heuristic value for add: 279
[t=0.218485s, 13960 KB] g=561, 2441 evaluated, 203 expanded
[t=0.740147s, 14752 KB] New best heuristic value for add: 255
[t=0.749192s, 14752 KB] g=669, 9638 evaluated, 1326 expanded
[t=0.749641s, 14752 KB] New best heuristic value for add: 241
[t=0.749754s, 14752 KB] g=698, 9645 evaluated, 1327 expanded
[t=0.749788s, 14752 KB] New best heuristic value for add: 239
[t=0.751144s, 14752 KB] g=699, 9661 evaluated, 1328 expanded
[t=0.751165s, 14752 KB] New best heuristic value for add: 227
[t=0.751933s, 14752 KB] g=711, 9671 evaluated, 1329 expanded
[t=0.751955s, 14752 KB] New best heuristic value for add: 226
[t=0.752632s, 14752 KB] g=712, 9680 evaluated, 1330 expanded
[t=0.758394s, 14752 KB] New best heuristic value for add: 225
[t=0.761602s, 14752 KB] g=741, 9798 evaluated, 1348 expanded
[t=0.761629s, 14752 KB] New best heuristic value for add: 197
[t=0.762032s, 14752 KB] g=769, 9803 evaluated, 1349 expanded
[t=0.762054s, 14752 KB] New best heuristic value for add: 182
[t=0.762726s, 14752 KB] g=798, 9812 evaluated, 1350 expanded
[t=0.767466s, 14884 KB] New best heuristic value for add: 181
[t=0.776700s, 14884 KB] g=825, 10021 evaluated, 1375 expanded
[t=0.776891s, 14884 KB] New best heuristic value for add: 155
[t=0.777116s, 14884 KB] g=851, 10026 evaluated, 1376 expanded
[t=0.777143s, 14884 KB] New best heuristic value for add: 141
[t=0.777921s, 14884 KB] g=880, 10037 evaluated, 1377 expanded
[t=0.795807s, 15020 KB] New best heuristic value for add: 140
[t=0.804673s, 15020 KB] g=909, 10411 evaluated, 1429 expanded
[t=0.804698s, 15020 KB] New best heuristic value for add: 112
[t=0.805066s, 15020 KB] g=937, 10415 evaluated, 1430 expanded
[t=0.805091s, 15020 KB] New best heuristic value for add: 97
[t=0.805756s, 15020 KB] g=966, 10423 evaluated, 1431 expanded
[t=0.805782s, 15020 KB] New best heuristic value for add: 89
[t=0.805876s, 15020 KB] g=960, 10424 evaluated, 1431 expanded
[t=0.805901s, 15020 KB] New best heuristic value for add: 64
[t=0.806458s, 15020 KB] g=985, 10432 evaluated, 1432 expanded
[t=0.806483s, 15020 KB] New best heuristic value for add: 43
[t=0.806995s, 15020 KB] g=1006, 10441 evaluated, 1433 expanded
[t=0.807021s, 15020 KB] New best heuristic value for add: 17
[t=0.807441s, 15020 KB] g=1032, 10451 evaluated, 1434 expanded
[t=0.807463s, 15020 KB] New best heuristic value for add: 1
[t=0.807752s, 15020 KB] g=1048, 10461 evaluated, 1435 expanded
[t=0.807783s, 15020 KB] New best heuristic value for add: 0
[t=0.807968s, 15020 KB] g=1049, 10470 evaluated, 1436 expanded
[t=0.807991s, 15020 KB] Solution found!
[t=0.808062s, 15020 KB] Actual search time: 0.787555s
drive truck-3 city-loc-17 city-loc-21 (28)
pick-up truck-1 city-loc-1 package-7 capacity-3 capacity-4 (1)
drive truck-2 city-loc-10 city-loc-7 (18)
drive truck-1 city-loc-1 city-loc-4 (26)
pick-up truck-2 city-loc-7 package-8 capacity-3 capacity-4 (1)
drive truck-2 city-loc-7 city-loc-3 (16)
drive truck-2 city-loc-3 city-loc-12 (23)
drive truck-2 city-loc-12 city-loc-19 (28)
drive truck-1 city-loc-4 city-loc-14 (13)
drive truck-1 city-loc-14 city-loc-8 (25)
drive truck-3 city-loc-21 city-loc-6 (23)
pick-up truck-3 city-loc-6 package-5 capacity-1 capacity-2 (1)
drive truck-3 city-loc-6 city-loc-21 (23)
pick-up truck-2 city-loc-19 package-2 capacity-2 capacity-3 (1)
pick-up truck-2 city-loc-19 package-4 capacity-1 capacity-2 (1)
drive truck-2 city-loc-19 city-loc-12 (28)
drive truck-2 city-loc-12 city-loc-1 (29)
drop truck-1 city-loc-8 package-7 capacity-3 capacity-4 (1)
drive truck-2 city-loc-1 city-loc-4 (26)
drive truck-1 city-loc-8 city-loc-14 (25)
drive truck-1 city-loc-14 city-loc-5 (18)
pick-up truck-1 city-loc-5 package-3 capacity-3 capacity-4 (1)
drive truck-1 city-loc-5 city-loc-14 (18)
drive truck-1 city-loc-14 city-loc-8 (25)
drive truck-1 city-loc-8 city-loc-17 (16)
drive truck-1 city-loc-17 city-loc-11 (26)
drive truck-1 city-loc-11 city-loc-13 (13)
drop truck-1 city-loc-13 package-3 capacity-3 capacity-4 (1)
drive truck-1 city-loc-13 city-loc-18 (24)
drive truck-3 city-loc-21 city-loc-6 (23)
drive truck-3 city-loc-6 city-loc-2 (19)
pick-up truck-1 city-loc-18 package-1 capacity-3 capacity-4 (1)
drive truck-1 city-loc-18 city-loc-9 (25)
drive truck-1 city-loc-9 city-loc-21 (12)
drop truck-3 city-loc-2 package-5 capacity-1 capacity-2 (1)
drop truck-1 city-loc-21 package-1 capacity-3 capacity-4 (1)
drop truck-2 city-loc-4 package-2 capacity-1 capacity-2 (1)
drive truck-1 city-loc-21 city-loc-10 (22)
drive truck-1 city-loc-10 city-loc-7 (18)
drive truck-1 city-loc-7 city-loc-1 (15)
drive truck-1 city-loc-1 city-loc-4 (26)
drive truck-2 city-loc-4 city-loc-1 (26)
drive truck-2 city-loc-1 city-loc-12 (29)
pick-up truck-1 city-loc-4 package-2 capacity-3 capacity-4 (1)
drive truck-1 city-loc-4 city-loc-5 (12)
drop truck-1 city-loc-5 package-2 capacity-3 capacity-4 (1)
drive truck-2 city-loc-12 city-loc-19 (28)
pick-up truck-2 city-loc-19 package-6 capacity-1 capacity-2 (1)
drive truck-2 city-loc-19 city-loc-12 (28)
drive truck-2 city-loc-12 city-loc-1 (29)
drive truck-2 city-loc-1 city-loc-4 (26)
drop truck-2 city-loc-4 package-6 capacity-1 capacity-2 (1)
drive truck-2 city-loc-4 city-loc-1 (26)
drive truck-2 city-loc-1 city-loc-12 (29)
drive truck-2 city-loc-12 city-loc-19 (28)
drop truck-2 city-loc-19 package-8 capacity-2 capacity-3 (1)
drive truck-2 city-loc-19 city-loc-12 (28)
drive truck-2 city-loc-12 city-loc-3 (23)
drive truck-2 city-loc-3 city-loc-10 (25)
drive truck-2 city-loc-10 city-loc-17 (21)
drive truck-2 city-loc-17 city-loc-11 (26)
drive truck-2 city-loc-11 city-loc-16 (16)
drop truck-2 city-loc-16 package-4 capacity-3 capacity-4 (1)
[t=0.808093s, 15020 KB] Plan length: 63 step(s).
[t=0.808093s, 15020 KB] Plan cost: 1049
[t=0.808093s, 15020 KB] Expanded 1437 state(s).
[t=0.808093s, 15020 KB] Reopened 0 state(s).
[t=0.808093s, 15020 KB] Evaluated 10473 state(s).
[t=0.808093s, 15020 KB] Evaluations: 10473
[t=0.808093s, 15020 KB] Generated 20973 state(s).
[t=0.808093s, 15020 KB] Dead ends: 0 state(s).
[t=0.808093s, 15020 KB] Number of registered states: 10473
[t=0.808093s, 15020 KB] Int hash set load factor: 10473/16384 = 0.639221
[t=0.808093s, 15020 KB] Int hash set resizes: 14
[t=0.808093s, 15020 KB] Search time: 0.787809s
[t=0.808093s, 15020 KB] Total time: 0.808093s
Solution found.
Peak memory: 15020 KB
search exit code: 0

INFO     Planner time: 1.12s
