INFO     planner time limit: 1800s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py elevators/domain.pddl elevators/p09.pddl --sas-file 'output/eager_wastar([add()], w=80, k_best=300)/elevators/p09.txt.sas'
Parsing...
Parsing: [0.000s CPU, 0.006s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.026s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 50 rules.
Computing model... [0.000s CPU, 0.005s wall-clock]
817 relevant atoms
795 auxiliary atoms
1612 final queue length
2556 total queue pushes
Completing instantiation... [0.010s CPU, 0.008s wall-clock]
Instantiating: [0.010s CPU, 0.051s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.009s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
13 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.004s wall-clock]
Reordering and filtering variables...
13 of 13 variables necessary.
0 of 13 mutex groups necessary.
550 of 550 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 13
Translator derived variables: 0
Translator facts: 109
Translator goal facts: 7
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 550
Translator axioms: 0
Translator task size: 3249
Translator peak memory: 33300 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.030s CPU, 0.085s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=80, k_best=300)/elevators/p09.txt.sas'
INFO     search time limit: 1799s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=80, k_best=300)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=80, k_best=300)/elevators/p09.txt.sas'"'"''
[t=0.002051s, 10804 KB] reading input...
[t=0.003757s, 10928 KB] done reading input!
[t=0.006066s, 11324 KB] Simplifying 1040 unary operators... done! [1040 unary operators]
[t=0.006887s, 11324 KB] time to simplify: 0.000822s
[t=0.006949s, 11324 KB] Initializing additive heuristic...
[t=0.007002s, 11324 KB] Building successor generator...done!
[t=0.007190s, 11324 KB] peak memory difference for successor generator creation: 0 KB
[t=0.007216s, 11324 KB] time for successor generation creation: 0.000000s
[t=0.007237s, 11324 KB] Variables: 13
[t=0.007256s, 11324 KB] FactPairs: 109
[t=0.007275s, 11324 KB] Bytes per state: 8
[t=0.007294s, 11324 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.007325s, 11324 KB] New best heuristic value for add: 168
[t=0.007366s, 11324 KB] g=0, 1 evaluated, 0 expanded
[t=0.007386s, 11324 KB] Initial heuristic value for add: 168
[t=0.007409s, 11324 KB] pruning method: none
[t=0.007443s, 11324 KB] New best heuristic value for add: 147
[t=0.007495s, 11324 KB] g=7, 3 evaluated, 1 expanded
[t=0.007523s, 11324 KB] New best heuristic value for add: 140
[t=0.007576s, 11324 KB] g=9, 5 evaluated, 1 expanded
[t=0.007599s, 11324 KB] New best heuristic value for add: 135
[t=0.007740s, 11324 KB] g=15, 16 evaluated, 14 expanded
[t=0.007760s, 11324 KB] New best heuristic value for add: 134
[t=0.007804s, 11324 KB] g=16, 18 evaluated, 14 expanded
[t=0.007823s, 11324 KB] New best heuristic value for add: 124
[t=0.007893s, 11324 KB] g=16, 23 evaluated, 14 expanded
[t=0.007921s, 11324 KB] New best heuristic value for add: 95
[t=0.008440s, 11324 KB] g=8, 75 evaluated, 14 expanded
[t=0.008466s, 11324 KB] New best heuristic value for add: 94
[t=0.008689s, 11324 KB] g=15, 93 evaluated, 85 expanded
[t=0.010823s, 11324 KB] New best heuristic value for add: 93
[t=0.011325s, 11324 KB] g=22, 364 evaluated, 350 expanded
[t=0.011350s, 11456 KB] New best heuristic value for add: 89
[t=0.017103s, 11456 KB] g=13, 981 evaluated, 350 expanded
[t=0.017130s, 11456 KB] New best heuristic value for add: 86
[t=0.017937s, 11456 KB] g=15, 1061 evaluated, 350 expanded
[t=0.017964s, 11456 KB] New best heuristic value for add: 85
[t=0.019034s, 11456 KB] g=15, 1172 evaluated, 350 expanded
[t=0.019061s, 11588 KB] New best heuristic value for add: 84
[t=0.020534s, 11588 KB] g=22, 1310 evaluated, 650 expanded
[t=0.020560s, 11588 KB] New best heuristic value for add: 81
[t=0.021438s, 11588 KB] g=28, 1405 evaluated, 650 expanded
[t=0.021461s, 11588 KB] New best heuristic value for add: 78
[t=0.023069s, 11588 KB] g=40, 1580 evaluated, 650 expanded, 19 reopened
[t=0.036521s, 12000 KB] New best heuristic value for add: 77
[t=0.042165s, 12000 KB] g=47, 3624 evaluated, 950 expanded, 50 reopened
[t=0.042197s, 12000 KB] New best heuristic value for add: 76
[t=0.043950s, 12000 KB] g=40, 3810 evaluated, 950 expanded, 50 reopened
[t=0.045082s, 12276 KB] New best heuristic value for add: 75
[t=0.052888s, 12276 KB] g=47, 4668 evaluated, 1250 expanded, 53 reopened
[t=0.052920s, 12276 KB] New best heuristic value for add: 67
[t=0.052975s, 12276 KB] g=49, 4670 evaluated, 1250 expanded, 53 reopened
[t=0.081366s, 12672 KB] New best heuristic value for add: 65
[t=0.084469s, 12672 KB] g=35, 8107 evaluated, 1550 expanded, 114 reopened
[t=0.108754s, 13068 KB] New best heuristic value for add: 63
[t=0.111530s, 13068 KB] g=53, 11019 evaluated, 1850 expanded, 141 reopened
[t=0.126861s, 13200 KB] New best heuristic value for add: 60
[t=0.128364s, 13200 KB] g=62, 12887 evaluated, 1850 expanded, 144 reopened
[t=0.128393s, 13200 KB] New best heuristic value for add: 59
[t=0.131950s, 13200 KB] g=56, 13279 evaluated, 2150 expanded, 145 reopened
[t=0.131979s, 13200 KB] New best heuristic value for add: 55
[t=0.132855s, 13200 KB] g=60, 13373 evaluated, 2150 expanded, 145 reopened
[t=0.162878s, 13860 KB] New best heuristic value for add: 54
[t=0.164535s, 13860 KB] g=62, 16829 evaluated, 2450 expanded, 167 reopened
[t=0.190302s, 14128 KB] New best heuristic value for add: 47
[t=0.190479s, 14128 KB] g=63, 19728 evaluated, 2750 expanded, 167 reopened
[t=0.208495s, 14396 KB] New best heuristic value for add: 46
[t=0.217542s, 14396 KB] g=69, 22483 evaluated, 3050 expanded, 168 reopened
[t=0.245138s, 14660 KB] New best heuristic value for add: 45
[t=0.250376s, 14660 KB] g=69, 25960 evaluated, 3350 expanded, 199 reopened
[t=0.300221s, 15448 KB] New best heuristic value for add: 38
[t=0.302203s, 15448 KB] g=83, 31781 evaluated, 3950 expanded, 223 reopened
[t=0.327616s, 15712 KB] New best heuristic value for add: 36
[t=0.334870s, 15712 KB] g=89, 35461 evaluated, 4250 expanded, 251 reopened
[t=0.334896s, 15712 KB] New best heuristic value for add: 29
[t=0.334933s, 15712 KB] g=95, 35462 evaluated, 4250 expanded, 251 reopened
[t=0.409748s, 16372 KB] New best heuristic value for add: 23
[t=0.416673s, 16372 KB] g=107, 44315 evaluated, 5150 expanded, 300 reopened
[t=0.464685s, 16768 KB] New best heuristic value for add: 21
[t=0.471011s, 16768 KB] g=97, 50718 evaluated, 5750 expanded, 324 reopened
[t=0.519505s, 18192 KB] New best heuristic value for add: 19
[t=0.520939s, 18192 KB] g=108, 56555 evaluated, 6350 expanded, 361 reopened
[t=0.537565s, 18192 KB] New best heuristic value for add: 18
[t=0.538365s, 18192 KB] g=98, 58607 evaluated, 6650 expanded, 395 reopened
[t=0.538395s, 18192 KB] New best heuristic value for add: 14
[t=0.545340s, 18192 KB] g=133, 59514 evaluated, 6650 expanded, 399 reopened
[t=0.582706s, 18340 KB] New best heuristic value for add: 13
[t=0.582946s, 18340 KB] g=112, 64237 evaluated, 7250 expanded, 435 reopened
[t=0.619134s, 18744 KB] New best heuristic value for add: 9
[t=0.621387s, 18744 KB] g=118, 69108 evaluated, 7850 expanded, 478 reopened
[t=0.621415s, 18744 KB] New best heuristic value for add: 8
[t=0.621868s, 18744 KB] g=119, 69164 evaluated, 7850 expanded, 479 reopened
[t=0.621894s, 18744 KB] New best heuristic value for add: 7
[t=0.624123s, 18744 KB] g=141, 69473 evaluated, 7850 expanded, 485 reopened
[t=0.627035s, 18744 KB] New best heuristic value for add: 6
[t=0.630599s, 18744 KB] g=122, 70382 evaluated, 7850 expanded, 486 reopened
[t=0.654187s, 19008 KB] New best heuristic value for add: 0
[t=0.659444s, 19008 KB] g=125, 74362 evaluated, 8450 expanded, 503 reopened
[t=0.699856s, 19536 KB] Solution found!
[t=0.704014s, 19536 KB] Actual search time: 0.696572s
board p6 slow0-0 n1 n0 n1 (0)
move-up-slow slow0-0 n1 n4 (8)
move-down-fast fast0 n4 n0 (13)
board p0 fast0 n0 n0 n1 (0)
board p4 fast0 n0 n1 n2 (0)
move-up-fast fast0 n0 n6 (19)
leave p6 slow0-0 n4 n1 n0 (0)
board p6 slow1-0 n4 n0 n1 (0)
move-up-slow slow1-0 n4 n8 (9)
move-down-slow slow0-0 n4 n3 (6)
board p1 slow0-0 n3 n0 n1 (0)
move-up-slow slow0-0 n3 n4 (6)
leave p0 fast0 n6 n2 n1 (0)
board p2 fast0 n6 n1 n2 (0)
leave p4 fast0 n6 n2 n1 (0)
move-down-fast fast0 n6 n2 (13)
leave p2 fast0 n2 n1 n0 (0)
move-down-fast fast0 n2 n0 (7)
board p5 fast0 n0 n0 n1 (0)
move-up-fast fast0 n0 n4 (13)
board p3 slow1-0 n8 n1 n2 (0)
leave p6 slow1-0 n8 n2 n1 (0)
move-down-slow slow1-0 n8 n7 (6)
leave p3 slow1-0 n7 n1 n0 (0)
move-down-slow slow1-0 n7 n6 (6)
board p4 slow1-0 n6 n0 n1 (0)
move-down-slow slow1-0 n6 n5 (6)
leave p1 slow0-0 n4 n1 n0 (0)
board p1 fast0 n4 n1 n2 (0)
leave p5 fast0 n4 n2 n1 (0)
move-up-fast fast0 n4 n8 (13)
leave p4 slow1-0 n5 n1 n0 (0)
leave p1 fast0 n8 n1 n0 (0)
[t=0.704052s, 19536 KB] Plan length: 33 step(s).
[t=0.704052s, 19536 KB] Plan cost: 125
[t=0.704052s, 19536 KB] Expanded 9350 state(s).
[t=0.704052s, 19536 KB] Reopened 567 state(s).
[t=0.704052s, 19536 KB] Evaluated 81506 state(s).
[t=0.704052s, 19536 KB] Evaluations: 81506
[t=0.704052s, 19536 KB] Generated 146226 state(s).
[t=0.704052s, 19536 KB] Dead ends: 0 state(s).
[t=0.704052s, 19536 KB] Number of registered states: 81506
[t=0.704052s, 19536 KB] Int hash set load factor: 81506/131072 = 0.621841
[t=0.704052s, 19536 KB] Int hash set resizes: 17
[t=0.704052s, 19536 KB] Search time: 0.696758s
[t=0.704052s, 19536 KB] Total time: 0.704052s
Solution found.
Peak memory: 19536 KB
search exit code: 0

INFO     Planner time: 0.83s
