INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p03.pddl --sas-file 'output/eager_wastar([add()], w=1, k_best=100)/transport/p03.txt.sas'
Parsing...
Parsing: [0.000s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.021s wall-clock]
Preparing model... [0.000s CPU, 0.003s wall-clock]
Generated 27 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
824 relevant atoms
832 auxiliary atoms
1656 final queue length
2796 total queue pushes
Completing instantiation... [0.030s CPU, 0.030s wall-clock]
Instantiating: [0.050s CPU, 0.067s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.003s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.002s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.003s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.001s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.010s CPU, 0.003s wall-clock]
Translating task: [0.030s CPU, 0.035s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
8 of 8 variables necessary.
0 of 8 mutex groups necessary.
628 of 628 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.004s wall-clock]
Translator variables: 8
Translator derived variables: 0
Translator facts: 72
Translator goal facts: 4
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 628
Translator axioms: 0
Translator task size: 3696
Translator peak memory: 33160 KB
Writing output... [0.000s CPU, 0.016s wall-clock]
Done! [0.110s CPU, 0.178s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=1, k_best=100)/transport/p03.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=1, k_best=100)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=1, k_best=100)/transport/p03.txt.sas'"'"''
[t=0.003057s, 10804 KB] reading input...
[t=0.006169s, 10928 KB] done reading input!
[t=0.009773s, 11324 KB] Simplifying 1204 unary operators... done! [1204 unary operators]
[t=0.011293s, 11324 KB] time to simplify: 0.001519s
[t=0.011477s, 11324 KB] Initializing additive heuristic...
[t=0.011571s, 11324 KB] Building successor generator...done!
[t=0.011917s, 11324 KB] peak memory difference for successor generator creation: 0 KB
[t=0.011979s, 11324 KB] time for successor generation creation: 0.000000s
[t=0.012012s, 11324 KB] Variables: 8
[t=0.012046s, 11324 KB] FactPairs: 72
[t=0.012084s, 11324 KB] Bytes per state: 4
[t=0.012123s, 11324 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.012208s, 11324 KB] New best heuristic value for add: 299
[t=0.012293s, 11324 KB] g=0, 1 evaluated, 0 expanded
[t=0.012330s, 11324 KB] Initial heuristic value for add: 299
[t=0.012370s, 11324 KB] pruning method: none
[t=0.012400s, 11324 KB] New best heuristic value for add: 260
[t=0.012524s, 11324 KB] g=34, 5 evaluated, 1 expanded
[t=0.012553s, 11324 KB] New best heuristic value for add: 232
[t=0.012746s, 11324 KB] g=62, 11 evaluated, 9 expanded
[t=0.012784s, 11324 KB] New best heuristic value for add: 225
[t=0.013061s, 11324 KB] g=35, 24 evaluated, 9 expanded
[t=0.013094s, 11324 KB] New best heuristic value for add: 197
[t=0.013496s, 11324 KB] g=63, 41 evaluated, 39 expanded
[t=0.013560s, 11324 KB] New best heuristic value for add: 191
[t=0.014150s, 11324 KB] g=36, 74 evaluated, 39 expanded
[t=0.014182s, 11324 KB] New best heuristic value for add: 163
[t=0.015452s, 11324 KB] g=64, 131 evaluated, 129 expanded
[t=0.017643s, 11324 KB] New best heuristic value for add: 161
[t=0.019060s, 11324 KB] g=64, 281 evaluated, 129 expanded
[t=0.019110s, 11324 KB] New best heuristic value for add: 140
[t=0.021152s, 11324 KB] g=80, 381 evaluated, 229 expanded
[t=0.021199s, 11324 KB] New best heuristic value for add: 138
[t=0.021309s, 11324 KB] g=86, 386 evaluated, 229 expanded
[t=0.035001s, 11324 KB] New best heuristic value for add: 137
[t=0.036309s, 11324 KB] g=81, 771 evaluated, 329 expanded
[t=0.036438s, 11324 KB] New best heuristic value for add: 132
[t=0.036983s, 11324 KB] g=93, 800 evaluated, 329 expanded
[t=0.042926s, 11456 KB] New best heuristic value for add: 109
[t=0.044399s, 11456 KB] g=109, 1212 evaluated, 429 expanded
[t=0.053127s, 11456 KB] New best heuristic value for add: 108
[t=0.058695s, 11456 KB] g=110, 1665 evaluated, 529 expanded
[t=0.070062s, 11456 KB] New best heuristic value for add: 93
[t=0.072460s, 11456 KB] g=131, 2139 evaluated, 629 expanded
[t=0.078926s, 11456 KB] New best heuristic value for add: 92
[t=0.080564s, 11456 KB] g=132, 2552 evaluated, 729 expanded
[t=0.080608s, 11456 KB] New best heuristic value for add: 79
[t=0.082692s, 11456 KB] g=168, 2680 evaluated, 729 expanded
[t=0.082736s, 11456 KB] New best heuristic value for add: 78
[t=0.083590s, 11456 KB] g=168, 2729 evaluated, 729 expanded
[t=0.087167s, 11456 KB] New best heuristic value for add: 77
[t=0.095599s, 11456 KB] g=169, 2999 evaluated, 829 expanded
[t=0.095681s, 11456 KB] New best heuristic value for add: 76
[t=0.097000s, 11456 KB] g=175, 3085 evaluated, 829 expanded
[t=0.097034s, 11456 KB] New best heuristic value for add: 70
[t=0.099610s, 11456 KB] g=191, 3246 evaluated, 829 expanded
[t=0.099689s, 11456 KB] New best heuristic value for add: 49
[t=0.101481s, 11456 KB] g=197, 3352 evaluated, 929 expanded
[t=0.101548s, 11456 KB] New best heuristic value for add: 47
[t=0.102249s, 11456 KB] g=203, 3396 evaluated, 929 expanded
[t=0.111330s, 11456 KB] New best heuristic value for add: 31
[t=0.114059s, 11456 KB] g=219, 3780 evaluated, 1029 expanded
[t=0.119722s, 11640 KB] New best heuristic value for add: 30
[t=0.120577s, 11640 KB] g=220, 4209 evaluated, 1129 expanded
[t=0.120661s, 11640 KB] New best heuristic value for add: 18
[t=0.120855s, 11640 KB] g=232, 4218 evaluated, 1129 expanded
[t=0.127532s, 11640 KB] New best heuristic value for add: 2
[t=0.134028s, 11640 KB] g=248, 4658 evaluated, 1229 expanded
[t=0.135934s, 11640 KB] New best heuristic value for add: 1
[t=0.140239s, 11640 KB] g=249, 5056 evaluated, 1329 expanded
[t=0.153062s, 11640 KB] New best heuristic value for add: 0
[t=0.153370s, 11640 KB] g=250, 5440 evaluated, 1429 expanded
[t=0.153408s, 11640 KB] Solution found!
[t=0.158579s, 11640 KB] Actual search time: 0.146178s
drive truck-2 city-loc-9 city-loc-6 (28)
pick-up truck-2 city-loc-6 package-3 capacity-3 capacity-4 (1)
pick-up truck-2 city-loc-6 package-4 capacity-2 capacity-3 (1)
drive truck-2 city-loc-6 city-loc-3 (34)
drive truck-2 city-loc-3 city-loc-1 (22)
drop truck-2 city-loc-1 package-3 capacity-2 capacity-3 (1)
drive truck-2 city-loc-1 city-loc-5 (37)
pick-up truck-2 city-loc-5 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-loc-5 city-loc-4 (12)
drive truck-2 city-loc-4 city-loc-8 (35)
drop truck-2 city-loc-8 package-4 capacity-2 capacity-3 (1)
drive truck-2 city-loc-8 city-loc-7 (30)
drive truck-2 city-loc-7 city-loc-3 (16)
drop truck-2 city-loc-3 package-2 capacity-3 capacity-4 (1)
pick-up truck-1 city-loc-6 package-1 capacity-1 capacity-2 (1)
drive truck-1 city-loc-6 city-loc-9 (28)
drop truck-1 city-loc-9 package-1 capacity-1 capacity-2 (1)
[t=0.158620s, 11640 KB] Plan length: 17 step(s).
[t=0.158620s, 11640 KB] Plan cost: 250
[t=0.158620s, 11640 KB] Expanded 1529 state(s).
[t=0.158620s, 11640 KB] Reopened 0 state(s).
[t=0.158620s, 11640 KB] Evaluated 5803 state(s).
[t=0.158620s, 11640 KB] Evaluations: 5803
[t=0.158620s, 11640 KB] Generated 11839 state(s).
[t=0.158620s, 11640 KB] Dead ends: 0 state(s).
[t=0.158620s, 11640 KB] Number of registered states: 5803
[t=0.158620s, 11640 KB] Int hash set load factor: 5803/8192 = 0.708374
[t=0.158620s, 11640 KB] Int hash set resizes: 13
[t=0.158620s, 11640 KB] Search time: 0.146497s
[t=0.158620s, 11640 KB] Total time: 0.158620s
Solution found.
Peak memory: 11640 KB
search exit code: 0

INFO     Planner time: 0.48s
