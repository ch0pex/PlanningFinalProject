INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p08.pddl --sas-file 'output/eager_wastar([add()], w=5, k_best=5)/transport/p08.txt.sas'
Parsing...
Parsing: [0.000s CPU, 0.007s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.011s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 27 rules.
Computing model... [0.040s CPU, 0.033s wall-clock]
6085 relevant atoms
5127 auxiliary atoms
11212 final queue length
21523 total queue pushes
Completing instantiation... [0.090s CPU, 0.099s wall-clock]
Instantiating: [0.130s CPU, 0.148s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.006s wall-clock]
Translating task: [0.080s CPU, 0.089s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
15 propositions removed
Detecting unreachable propositions: [0.060s CPU, 0.067s wall-clock]
Reordering and filtering variables...
15 of 15 variables necessary.
0 of 15 mutex groups necessary.
5442 of 5442 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.014s wall-clock]
Translator variables: 15
Translator derived variables: 0
Translator facts: 330
Translator goal facts: 9
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 5442
Translator axioms: 0
Translator task size: 32232
Translator peak memory: 52180 KB
Writing output... [0.030s CPU, 0.036s wall-clock]
Done! [0.330s CPU, 0.375s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=5, k_best=5)/transport/p08.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=5, k_best=5)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=5, k_best=5)/transport/p08.txt.sas'"'"''
[t=0.001642s, 10804 KB] reading input...
[t=0.017487s, 12364 KB] done reading input!
[t=0.017554s, 13196 KB] Simplifying 10626 unary operators... done! [10626 unary operators]
[t=0.024290s, 13988 KB] time to simplify: 0.006736s
[t=0.024730s, 13988 KB] Initializing additive heuristic...
[t=0.024923s, 13988 KB] Building successor generator...done!
[t=0.026430s, 14252 KB] peak memory difference for successor generator creation: 264 KB
[t=0.026473s, 14252 KB] time for successor generation creation: 0.000000s
[t=0.026501s, 14252 KB] Variables: 15
[t=0.026529s, 14252 KB] FactPairs: 330
[t=0.026550s, 14252 KB] Bytes per state: 12
[t=0.026576s, 14252 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.026626s, 14252 KB] New best heuristic value for add: 969
[t=0.026890s, 14252 KB] g=0, 1 evaluated, 0 expanded
[t=0.026924s, 14252 KB] Initial heuristic value for add: 969
[t=0.026950s, 14252 KB] pruning method: none
[t=0.026977s, 14252 KB] New best heuristic value for add: 917
[t=0.027169s, 14252 KB] g=16, 2 evaluated, 1 expanded
[t=0.027196s, 14252 KB] New best heuristic value for add: 848
[t=0.027469s, 14252 KB] g=27, 4 evaluated, 1 expanded
[t=0.027495s, 14252 KB] New best heuristic value for add: 838
[t=0.028294s, 14252 KB] g=25, 11 evaluated, 1 expanded
[t=0.028315s, 14252 KB] New best heuristic value for add: 831
[t=0.028840s, 14252 KB] g=52, 14 evaluated, 6 expanded
[t=0.028864s, 14252 KB] New best heuristic value for add: 794
[t=0.029124s, 14252 KB] g=39, 16 evaluated, 6 expanded
[t=0.029150s, 14252 KB] New best heuristic value for add: 788
[t=0.030580s, 14252 KB] g=41, 29 evaluated, 6 expanded
[t=0.030601s, 14252 KB] New best heuristic value for add: 763
[t=0.033028s, 14252 KB] g=60, 50 evaluated, 11 expanded
[t=0.038111s, 14252 KB] New best heuristic value for add: 759
[t=0.038182s, 14252 KB] g=61, 95 evaluated, 16 expanded
[t=0.038212s, 14252 KB] New best heuristic value for add: 746
[t=0.038490s, 14252 KB] g=85, 97 evaluated, 16 expanded
[t=0.038512s, 14252 KB] New best heuristic value for add: 743
[t=0.041739s, 14252 KB] g=61, 124 evaluated, 16 expanded
[t=0.041783s, 14252 KB] New best heuristic value for add: 739
[t=0.044530s, 14252 KB] g=62, 149 evaluated, 21 expanded
[t=0.044558s, 14252 KB] New best heuristic value for add: 732
[t=0.045141s, 14252 KB] g=79, 154 evaluated, 21 expanded
[t=0.046350s, 14252 KB] New best heuristic value for add: 731
[t=0.049907s, 14252 KB] g=80, 196 evaluated, 26 expanded
[t=0.049943s, 14252 KB] New best heuristic value for add: 728
[t=0.050560s, 14252 KB] g=80, 201 evaluated, 26 expanded
[t=0.050589s, 14252 KB] New best heuristic value for add: 714
[t=0.050742s, 14252 KB] g=101, 202 evaluated, 26 expanded
[t=0.055166s, 14252 KB] New best heuristic value for add: 713
[t=0.057108s, 14252 KB] g=102, 259 evaluated, 31 expanded
[t=0.057138s, 14252 KB] New best heuristic value for add: 710
[t=0.057762s, 14252 KB] g=102, 264 evaluated, 31 expanded
[t=0.057788s, 14252 KB] New best heuristic value for add: 708
[t=0.058201s, 14252 KB] g=125, 267 evaluated, 31 expanded
[t=0.063990s, 14252 KB] New best heuristic value for add: 698
[t=0.064801s, 14252 KB] g=116, 324 evaluated, 36 expanded
[t=0.064829s, 14252 KB] New best heuristic value for add: 682
[t=0.067157s, 14252 KB] g=148, 343 evaluated, 36 expanded
[t=0.067184s, 14252 KB] New best heuristic value for add: 679
[t=0.072741s, 14252 KB] g=167, 388 evaluated, 41 expanded
[t=0.072785s, 14252 KB] New best heuristic value for add: 678
[t=0.073675s, 14252 KB] g=149, 395 evaluated, 41 expanded
[t=0.073701s, 14252 KB] New best heuristic value for add: 676
[t=0.080034s, 14252 KB] g=168, 451 evaluated, 46 expanded
[t=0.080079s, 14252 KB] New best heuristic value for add: 668
[t=0.080516s, 14252 KB] g=163, 454 evaluated, 46 expanded
[t=0.080541s, 14252 KB] New best heuristic value for add: 659
[t=0.080825s, 14252 KB] g=175, 456 evaluated, 46 expanded
[t=0.081323s, 14252 KB] New best heuristic value for add: 656
[t=0.086723s, 14252 KB] g=169, 509 evaluated, 51 expanded
[t=0.086746s, 14252 KB] New best heuristic value for add: 646
[t=0.086878s, 14252 KB] g=181, 510 evaluated, 51 expanded
[t=0.090491s, 14252 KB] New best heuristic value for add: 643
[t=0.093230s, 14252 KB] g=182, 567 evaluated, 56 expanded
[t=0.093251s, 14252 KB] New best heuristic value for add: 631
[t=0.099231s, 14252 KB] g=196, 621 evaluated, 61 expanded
[t=0.099511s, 14252 KB] New best heuristic value for add: 630
[t=0.105649s, 14252 KB] g=197, 680 evaluated, 66 expanded
[t=0.108806s, 14252 KB] New best heuristic value for add: 629
[t=0.112967s, 14252 KB] g=198, 742 evaluated, 71 expanded
[t=0.118169s, 14252 KB] New best heuristic value for add: 605
[t=0.118855s, 14252 KB] g=224, 796 evaluated, 76 expanded
[t=0.118882s, 14252 KB] New best heuristic value for add: 604
[t=0.125589s, 14252 KB] g=225, 857 evaluated, 81 expanded
[t=0.125617s, 14252 KB] New best heuristic value for add: 586
[t=0.125868s, 14252 KB] g=246, 859 evaluated, 81 expanded
[t=0.125890s, 14252 KB] New best heuristic value for add: 579
[t=0.126042s, 14252 KB] g=239, 860 evaluated, 81 expanded
[t=0.126814s, 14384 KB] New best heuristic value for add: 572
[t=0.132575s, 14384 KB] g=257, 919 evaluated, 86 expanded
[t=0.136164s, 14384 KB] New best heuristic value for add: 564
[t=0.138833s, 14384 KB] g=269, 975 evaluated, 91 expanded
[t=0.138857s, 14384 KB] New best heuristic value for add: 550
[t=0.139665s, 14384 KB] g=279, 982 evaluated, 91 expanded
[t=0.145291s, 14384 KB] New best heuristic value for add: 538
[t=0.145972s, 14384 KB] g=291, 1037 evaluated, 96 expanded
[t=0.145996s, 14384 KB] New best heuristic value for add: 537
[t=0.153878s, 14384 KB] g=290, 1105 evaluated, 101 expanded
[t=0.173614s, 14508 KB] New best heuristic value for add: 525
[t=0.173751s, 14508 KB] g=316, 1280 evaluated, 111 expanded
[t=0.173777s, 14508 KB] New best heuristic value for add: 524
[t=0.175455s, 14508 KB] g=317, 1294 evaluated, 116 expanded
[t=0.221054s, 14508 KB] New best heuristic value for add: 523
[t=0.225315s, 14508 KB] g=365, 1745 evaluated, 161 expanded
[t=0.225347s, 14508 KB] New best heuristic value for add: 504
[t=0.230291s, 14508 KB] g=384, 1790 evaluated, 166 expanded
[t=0.230323s, 14640 KB] New best heuristic value for add: 481
[t=0.236019s, 14640 KB] g=407, 1843 evaluated, 171 expanded
[t=0.239398s, 14640 KB] New best heuristic value for add: 438
[t=0.242161s, 14640 KB] g=408, 1901 evaluated, 176 expanded
[t=0.248742s, 14640 KB] New best heuristic value for add: 396
[t=0.250260s, 14640 KB] g=430, 1973 evaluated, 181 expanded
[t=0.258057s, 14640 KB] New best heuristic value for add: 372
[t=0.258472s, 14640 KB] g=455, 2044 evaluated, 186 expanded
[t=0.258496s, 14764 KB] New best heuristic value for add: 362
[t=0.266392s, 14764 KB] g=478, 2115 evaluated, 191 expanded
[t=0.267153s, 14764 KB] New best heuristic value for add: 361
[t=0.274286s, 14764 KB] g=479, 2181 evaluated, 196 expanded
[t=0.276557s, 14764 KB] New best heuristic value for add: 350
[t=0.279881s, 14764 KB] g=479, 2224 evaluated, 196 expanded
[t=0.279905s, 14764 KB] New best heuristic value for add: 349
[t=0.285387s, 14764 KB] g=500, 2273 evaluated, 201 expanded
[t=0.285418s, 14764 KB] New best heuristic value for add: 348
[t=0.285589s, 14764 KB] g=502, 2274 evaluated, 201 expanded
[t=0.285615s, 14764 KB] New best heuristic value for add: 337
[t=0.291824s, 14764 KB] g=524, 2329 evaluated, 206 expanded
[t=0.294758s, 14764 KB] New best heuristic value for add: 336
[t=0.295335s, 14764 KB] g=515, 2359 evaluated, 211 expanded
[t=0.295362s, 14764 KB] New best heuristic value for add: 311
[t=0.295514s, 14764 KB] g=540, 2360 evaluated, 211 expanded
[t=0.295542s, 14764 KB] New best heuristic value for add: 298
[t=0.301778s, 14764 KB] g=553, 2415 evaluated, 216 expanded
[t=0.303575s, 14896 KB] New best heuristic value for add: 297
[t=0.307947s, 14896 KB] g=554, 2470 evaluated, 221 expanded
[t=0.312948s, 14896 KB] New best heuristic value for add: 287
[t=0.317397s, 14896 KB] g=600, 2555 evaluated, 226 expanded
[t=0.317427s, 14896 KB] New best heuristic value for add: 286
[t=0.319103s, 14896 KB] g=594, 2570 evaluated, 231 expanded
[t=0.331562s, 14896 KB] New best heuristic value for add: 285
[t=0.336557s, 14896 KB] g=613, 2732 evaluated, 246 expanded
[t=0.336589s, 14896 KB] New best heuristic value for add: 267
[t=0.337799s, 14896 KB] g=631, 2742 evaluated, 251 expanded
[t=0.340675s, 14896 KB] New best heuristic value for add: 266
[t=0.341309s, 14896 KB] g=632, 2776 evaluated, 256 expanded
[t=0.341336s, 14896 KB] New best heuristic value for add: 242
[t=0.341475s, 14896 KB] g=656, 2777 evaluated, 256 expanded
[t=0.341498s, 15028 KB] New best heuristic value for add: 220
[t=0.346218s, 15028 KB] g=680, 2818 evaluated, 261 expanded
[t=0.349322s, 15028 KB] New best heuristic value for add: 198
[t=0.352476s, 15028 KB] g=702, 2876 evaluated, 266 expanded
[t=0.352503s, 15028 KB] New best heuristic value for add: 175
[t=0.358496s, 15028 KB] g=723, 2930 evaluated, 271 expanded
[t=0.358528s, 15028 KB] New best heuristic value for add: 174
[t=0.364385s, 15028 KB] g=724, 2984 evaluated, 276 expanded
[t=0.367586s, 15152 KB] New best heuristic value for add: 173
[t=0.376891s, 15152 KB] g=764, 3107 evaluated, 291 expanded
[t=0.444006s, 15152 KB] New best heuristic value for add: 172
[t=0.448707s, 15152 KB] g=793, 3841 evaluated, 381 expanded
[t=0.448736s, 15152 KB] New best heuristic value for add: 144
[t=0.449089s, 15152 KB] g=821, 3844 evaluated, 386 expanded
[t=0.449121s, 15152 KB] New best heuristic value for add: 132
[t=0.452609s, 15152 KB] g=842, 3881 evaluated, 391 expanded
[t=0.452637s, 15152 KB] New best heuristic value for add: 122
[t=0.452778s, 15152 KB] g=844, 3882 evaluated, 391 expanded
[t=0.452810s, 15152 KB] New best heuristic value for add: 115
[t=0.455182s, 15152 KB] g=822, 3907 evaluated, 391 expanded
[t=0.455208s, 15308 KB] New best heuristic value for add: 82
[t=0.457610s, 15308 KB] g=843, 3932 evaluated, 396 expanded
[t=0.457631s, 15308 KB] New best heuristic value for add: 79
[t=0.457726s, 15308 KB] g=845, 3933 evaluated, 396 expanded
[t=0.461637s, 15308 KB] New best heuristic value for add: 56
[t=0.462523s, 15308 KB] g=867, 3991 evaluated, 401 expanded
[t=0.462560s, 15308 KB] New best heuristic value for add: 55
[t=0.467499s, 15308 KB] g=862, 4065 evaluated, 406 expanded
[t=0.470654s, 15308 KB] New best heuristic value for add: 40
[t=0.470764s, 15308 KB] g=877, 4119 evaluated, 411 expanded
[t=0.470795s, 15308 KB] New best heuristic value for add: 32
[t=0.471725s, 15308 KB] g=884, 4135 evaluated, 411 expanded
[t=0.471750s, 15308 KB] New best heuristic value for add: 19
[t=0.473985s, 15308 KB] g=897, 4181 evaluated, 416 expanded
[t=0.474010s, 15308 KB] New best heuristic value for add: 14
[t=0.474583s, 15308 KB] g=903, 4195 evaluated, 416 expanded
[t=0.474608s, 15308 KB] New best heuristic value for add: 1
[t=0.477080s, 15308 KB] g=916, 4246 evaluated, 421 expanded
[t=0.478865s, 15440 KB] New best heuristic value for add: 0
[t=0.479000s, 15440 KB] g=917, 4305 evaluated, 426 expanded
[t=0.479029s, 15440 KB] Solution found!
[t=0.480433s, 15440 KB] Actual search time: 0.453456s
drive truck-1 city-loc-18 city-loc-9 (25)
drive truck-2 city-loc-1 city-loc-24 (14)
pick-up truck-1 city-loc-9 package-9 capacity-3 capacity-4 (1)
drive truck-1 city-loc-9 city-loc-21 (12)
drive truck-3 city-loc-16 city-loc-15 (27)
drive truck-1 city-loc-21 city-loc-17 (28)
drive truck-1 city-loc-17 city-loc-8 (16)
drive truck-1 city-loc-8 city-loc-14 (25)
pick-up truck-3 city-loc-15 package-5 capacity-1 capacity-2 (1)
drive truck-3 city-loc-15 city-loc-21 (19)
drive truck-1 city-loc-14 city-loc-4 (13)
pick-up truck-2 city-loc-24 package-3 capacity-3 capacity-4 (1)
drive truck-2 city-loc-24 city-loc-1 (14)
pick-up truck-1 city-loc-4 package-8 capacity-2 capacity-3 (1)
drop truck-1 city-loc-4 package-9 capacity-2 capacity-3 (1)
drive truck-1 city-loc-4 city-loc-1 (26)
drive truck-1 city-loc-1 city-loc-7 (15)
drive truck-1 city-loc-7 city-loc-10 (18)
drive truck-1 city-loc-10 city-loc-21 (22)
drive truck-3 city-loc-21 city-loc-9 (12)
drop truck-3 city-loc-9 package-5 capacity-1 capacity-2 (1)
drive truck-3 city-loc-9 city-loc-21 (12)
drive truck-1 city-loc-21 city-loc-9 (12)
drop truck-1 city-loc-9 package-8 capacity-3 capacity-4 (1)
drive truck-1 city-loc-9 city-loc-6 (28)
drive truck-1 city-loc-6 city-loc-2 (19)
pick-up truck-1 city-loc-2 package-1 capacity-3 capacity-4 (1)
pick-up truck-1 city-loc-2 package-7 capacity-2 capacity-3 (1)
drive truck-1 city-loc-2 city-loc-6 (19)
drive truck-1 city-loc-6 city-loc-21 (23)
drive truck-1 city-loc-21 city-loc-10 (22)
drive truck-1 city-loc-10 city-loc-3 (25)
drive truck-1 city-loc-3 city-loc-12 (23)
drop truck-1 city-loc-12 package-1 capacity-2 capacity-3 (1)
drive truck-1 city-loc-12 city-loc-24 (21)
drive truck-1 city-loc-24 city-loc-1 (14)
drive truck-1 city-loc-1 city-loc-4 (26)
drive truck-1 city-loc-4 city-loc-14 (13)
drive truck-3 city-loc-21 city-loc-10 (22)
drive truck-3 city-loc-10 city-loc-7 (18)
drop truck-1 city-loc-14 package-7 capacity-3 capacity-4 (1)
drive truck-1 city-loc-14 city-loc-5 (18)
pick-up truck-1 city-loc-5 package-4 capacity-3 capacity-4 (1)
drive truck-1 city-loc-5 city-loc-14 (18)
drive truck-1 city-loc-14 city-loc-8 (25)
drive truck-1 city-loc-8 city-loc-17 (16)
drive truck-1 city-loc-17 city-loc-21 (28)
drive truck-1 city-loc-21 city-loc-6 (23)
drop truck-1 city-loc-6 package-4 capacity-3 capacity-4 (1)
drop truck-2 city-loc-1 package-3 capacity-3 capacity-4 (1)
drive truck-3 city-loc-7 city-loc-3 (16)
drive truck-3 city-loc-3 city-loc-12 (23)
drive truck-3 city-loc-12 city-loc-19 (28)
pick-up truck-3 city-loc-19 package-2 capacity-1 capacity-2 (1)
pick-up truck-3 city-loc-19 package-6 capacity-0 capacity-1 (1)
drive truck-3 city-loc-19 city-loc-12 (28)
drive truck-3 city-loc-12 city-loc-3 (23)
drive truck-3 city-loc-3 city-loc-7 (16)
drop truck-3 city-loc-7 package-2 capacity-0 capacity-1 (1)
drive truck-3 city-loc-7 city-loc-1 (15)
drive truck-3 city-loc-1 city-loc-4 (26)
drive truck-3 city-loc-4 city-loc-14 (13)
drop truck-3 city-loc-14 package-6 capacity-1 capacity-2 (1)
[t=0.480461s, 15440 KB] Plan length: 63 step(s).
[t=0.480461s, 15440 KB] Plan cost: 917
[t=0.480461s, 15440 KB] Expanded 431 state(s).
[t=0.480461s, 15440 KB] Reopened 0 state(s).
[t=0.480461s, 15440 KB] Evaluated 4358 state(s).
[t=0.480461s, 15440 KB] Evaluations: 4358
[t=0.480461s, 15440 KB] Generated 6260 state(s).
[t=0.480461s, 15440 KB] Dead ends: 0 state(s).
[t=0.480461s, 15440 KB] Number of registered states: 4358
[t=0.480461s, 15440 KB] Int hash set load factor: 4358/8192 = 0.531982
[t=0.480461s, 15440 KB] Int hash set resizes: 13
[t=0.480461s, 15440 KB] Search time: 0.453884s
[t=0.480461s, 15440 KB] Total time: 0.480461s
Solution found.
Peak memory: 15440 KB
search exit code: 0

INFO     Planner time: 0.90s
