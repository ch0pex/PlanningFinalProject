INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p04.pddl --sas-file 'output/eager_wastar([add()], w=1, k_best=500)/transport/p04.txt.sas'
Parsing...
Parsing: [0.020s CPU, 0.006s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.012s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 27 rules.
Computing model... [0.000s CPU, 0.007s wall-clock]
1293 relevant atoms
1246 auxiliary atoms
2539 final queue length
4436 total queue pushes
Completing instantiation... [0.010s CPU, 0.015s wall-clock]
Instantiating: [0.010s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.003s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.026s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
9 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.008s wall-clock]
Reordering and filtering variables...
9 of 9 variables necessary.
0 of 9 mutex groups necessary.
1032 of 1032 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.004s wall-clock]
Translator variables: 9
Translator derived variables: 0
Translator facts: 104
Translator goal facts: 5
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 1032
Translator axioms: 0
Translator task size: 6094
Translator peak memory: 35348 KB
Writing output... [0.000s CPU, 0.008s wall-clock]
Done! [0.080s CPU, 0.097s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=1, k_best=500)/transport/p04.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=1, k_best=500)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=1, k_best=500)/transport/p04.txt.sas'"'"''
[t=0.001595s, 10804 KB] reading input...
[t=0.004561s, 11060 KB] done reading input!
[t=0.004682s, 11508 KB] Simplifying 1992 unary operators... done! [1992 unary operators]
[t=0.006320s, 11508 KB] time to simplify: 0.001637s
[t=0.006426s, 11508 KB] Initializing additive heuristic...
[t=0.006500s, 11508 KB] Building successor generator...done!
[t=0.006805s, 11652 KB] peak memory difference for successor generator creation: 144 KB
[t=0.006839s, 11652 KB] time for successor generation creation: 0.000000s
[t=0.006862s, 11652 KB] Variables: 9
[t=0.006884s, 11652 KB] FactPairs: 104
[t=0.006905s, 11652 KB] Bytes per state: 8
[t=0.006925s, 11652 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.006957s, 11652 KB] New best heuristic value for add: 820
[t=0.007011s, 11652 KB] g=0, 1 evaluated, 0 expanded
[t=0.007031s, 11652 KB] Initial heuristic value for add: 820
[t=0.007058s, 11652 KB] pruning method: none
[t=0.007080s, 11652 KB] New best heuristic value for add: 531
[t=0.007149s, 11652 KB] g=34, 3 evaluated, 1 expanded
[t=0.007170s, 11652 KB] New best heuristic value for add: 344
[t=0.007268s, 11652 KB] g=56, 6 evaluated, 5 expanded
[t=0.007290s, 11652 KB] New best heuristic value for add: 336
[t=0.007335s, 11652 KB] g=59, 7 evaluated, 5 expanded
[t=0.007355s, 11652 KB] New best heuristic value for add: 330
[t=0.007602s, 11652 KB] g=60, 17 evaluated, 15 expanded
[t=0.007625s, 11652 KB] New best heuristic value for add: 319
[t=0.007915s, 11652 KB] g=69, 29 evaluated, 15 expanded
[t=0.007936s, 11652 KB] New best heuristic value for add: 308
[t=0.008200s, 11652 KB] g=97, 39 evaluated, 36 expanded
[t=0.008223s, 11652 KB] New best heuristic value for add: 305
[t=0.008324s, 11652 KB] g=93, 42 evaluated, 36 expanded
[t=0.008347s, 11652 KB] New best heuristic value for add: 300
[t=0.008420s, 11652 KB] g=78, 44 evaluated, 36 expanded
[t=0.008442s, 11652 KB] New best heuristic value for add: 297
[t=0.008575s, 11652 KB] g=90, 48 evaluated, 36 expanded
[t=0.008598s, 11652 KB] New best heuristic value for add: 276
[t=0.008809s, 11652 KB] g=103, 56 evaluated, 36 expanded
[t=0.008830s, 11652 KB] New best heuristic value for add: 272
[t=0.009701s, 11652 KB] g=104, 93 evaluated, 85 expanded
[t=0.009726s, 11652 KB] New best heuristic value for add: 265
[t=0.009775s, 11652 KB] g=135, 94 evaluated, 85 expanded
[t=0.010365s, 11652 KB] New best heuristic value for add: 262
[t=0.012192s, 11652 KB] g=136, 199 evaluated, 193 expanded
[t=0.012221s, 11652 KB] New best heuristic value for add: 249
[t=0.012529s, 11652 KB] g=142, 207 evaluated, 193 expanded
[t=0.012557s, 11652 KB] New best heuristic value for add: 244
[t=0.012626s, 11652 KB] g=127, 209 evaluated, 193 expanded
[t=0.012659s, 11652 KB] New best heuristic value for add: 239
[t=0.014516s, 11652 KB] g=140, 289 evaluated, 193 expanded
[t=0.018764s, 11652 KB] New best heuristic value for add: 238
[t=0.018983s, 11652 KB] g=141, 473 evaluated, 467 expanded
[t=0.019015s, 11652 KB] New best heuristic value for add: 215
[t=0.019117s, 11652 KB] g=143, 477 evaluated, 467 expanded
[t=0.027676s, 11752 KB] New best heuristic value for add: 214
[t=0.034281s, 11752 KB] g=144, 1161 evaluated, 967 expanded
[t=0.034308s, 11752 KB] New best heuristic value for add: 181
[t=0.034805s, 11752 KB] g=144, 1187 evaluated, 967 expanded
[t=0.055585s, 11912 KB] New best heuristic value for add: 180
[t=0.064807s, 11912 KB] g=145, 2572 evaluated, 1467 expanded
[t=0.121790s, 12080 KB] New best heuristic value for add: 169
[t=0.125257s, 12080 KB] g=192, 5208 evaluated, 1967 expanded
[t=0.159465s, 12080 KB] New best heuristic value for add: 168
[t=0.160386s, 12080 KB] g=193, 6893 evaluated, 2467 expanded
[t=0.160424s, 12080 KB] New best heuristic value for add: 166
[t=0.161328s, 12080 KB] g=204, 6942 evaluated, 2467 expanded
[t=0.168476s, 12212 KB] New best heuristic value for add: 154
[t=0.170870s, 12212 KB] g=187, 7421 evaluated, 2467 expanded
[t=0.177713s, 12212 KB] New best heuristic value for add: 135
[t=0.179097s, 12212 KB] g=193, 7773 evaluated, 2467 expanded
[t=0.205899s, 12212 KB] New best heuristic value for add: 134
[t=0.212785s, 12212 KB] g=194, 9423 evaluated, 2967 expanded
[t=0.272130s, 12344 KB] New best heuristic value for add: 133
[t=0.274159s, 12344 KB] g=195, 12151 evaluated, 3467 expanded
[t=0.328819s, 12604 KB] New best heuristic value for add: 123
[t=0.328896s, 12604 KB] g=221, 14931 evaluated, 3967 expanded
[t=0.328920s, 12604 KB] New best heuristic value for add: 108
[t=0.337305s, 12604 KB] g=236, 15382 evaluated, 3967 expanded
[t=0.375728s, 12604 KB] New best heuristic value for add: 107
[t=0.383534s, 12604 KB] g=237, 17690 evaluated, 4467 expanded
[t=0.432473s, 12736 KB] New best heuristic value for add: 106
[t=0.434323s, 12736 KB] g=248, 20368 evaluated, 4967 expanded, 3 reopened
[t=0.460676s, 12736 KB] New best heuristic value for add: 101
[t=0.464392s, 12736 KB] g=302, 21971 evaluated, 4967 expanded, 8 reopened
[t=0.488924s, 12736 KB] New best heuristic value for add: 97
[t=0.493605s, 12736 KB] g=271, 23500 evaluated, 5467 expanded, 12 reopened
[t=0.493638s, 12736 KB] New best heuristic value for add: 96
[t=0.494434s, 12736 KB] g=281, 23538 evaluated, 5467 expanded, 12 reopened
[t=0.507408s, 12868 KB] New best heuristic value for add: 69
[t=0.513274s, 12868 KB] g=334, 24540 evaluated, 5467 expanded, 13 reopened
[t=0.535666s, 12868 KB] New best heuristic value for add: 68
[t=0.541743s, 12868 KB] g=272, 26045 evaluated, 5967 expanded, 16 reopened
[t=0.582930s, 13000 KB] New best heuristic value for add: 67
[t=0.591988s, 13000 KB] g=273, 28423 evaluated, 6467 expanded, 18 reopened
[t=0.592193s, 13000 KB] New best heuristic value for add: 59
[t=0.594531s, 13000 KB] g=313, 28566 evaluated, 6467 expanded, 22 reopened
[t=0.610958s, 13516 KB] New best heuristic value for add: 42
[t=0.617649s, 13516 KB] g=361, 29760 evaluated, 6467 expanded, 25 reopened
[t=0.667691s, 13516 KB] New best heuristic value for add: 41
[t=0.669178s, 13516 KB] g=362, 32262 evaluated, 6967 expanded, 38 reopened
[t=0.686429s, 13516 KB] New best heuristic value for add: 33
[t=0.692722s, 13516 KB] g=307, 33526 evaluated, 7467 expanded, 38 reopened
[t=0.733609s, 13516 KB] New best heuristic value for add: 1
[t=0.739312s, 13516 KB] g=339, 36067 evaluated, 7967 expanded, 48 reopened
[t=0.780787s, 13520 KB] New best heuristic value for add: 0
[t=0.783310s, 13520 KB] g=340, 38534 evaluated, 8467 expanded, 52 reopened
[t=0.827932s, 13656 KB] Solution found!
[t=0.828235s, 13656 KB] Actual search time: 0.821155s
drive truck-2 city-loc-6 city-loc-9 (28)
drive truck-2 city-loc-9 city-loc-11 (24)
pick-up truck-2 city-loc-11 package-4 capacity-3 capacity-4 (1)
drive truck-2 city-loc-11 city-loc-9 (24)
drive truck-2 city-loc-9 city-loc-10 (32)
drive truck-2 city-loc-10 city-loc-8 (24)
pick-up truck-2 city-loc-8 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-loc-8 city-loc-10 (24)
pick-up truck-2 city-loc-10 package-3 capacity-1 capacity-2 (1)
drop truck-2 city-loc-10 package-4 capacity-1 capacity-2 (1)
drive truck-2 city-loc-10 city-loc-1 (33)
drop truck-2 city-loc-1 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-loc-1 city-loc-4 (26)
drive truck-2 city-loc-4 city-loc-5 (12)
drop truck-2 city-loc-5 package-3 capacity-3 capacity-4 (1)
drive truck-2 city-loc-5 city-loc-4 (12)
pick-up truck-2 city-loc-4 package-5 capacity-3 capacity-4 (1)
drive truck-2 city-loc-4 city-loc-1 (26)
pick-up truck-2 city-loc-1 package-1 capacity-2 capacity-3 (1)
drop truck-2 city-loc-1 package-5 capacity-2 capacity-3 (1)
drive truck-2 city-loc-1 city-loc-10 (33)
drive truck-2 city-loc-10 city-loc-9 (32)
drop truck-2 city-loc-9 package-1 capacity-3 capacity-4 (1)
[t=0.828265s, 13656 KB] Plan length: 23 step(s).
[t=0.828265s, 13656 KB] Plan cost: 340
[t=0.828265s, 13656 KB] Expanded 8967 state(s).
[t=0.828265s, 13656 KB] Reopened 54 state(s).
[t=0.828265s, 13656 KB] Evaluated 40982 state(s).
[t=0.828265s, 13656 KB] Evaluations: 40982
[t=0.828265s, 13656 KB] Generated 80437 state(s).
[t=0.828265s, 13656 KB] Dead ends: 0 state(s).
[t=0.828265s, 13656 KB] Number of registered states: 40982
[t=0.828265s, 13656 KB] Int hash set load factor: 40982/65536 = 0.625336
[t=0.828265s, 13656 KB] Int hash set resizes: 16
[t=0.828265s, 13656 KB] Search time: 0.821341s
[t=0.828265s, 13656 KB] Total time: 0.828265s
Solution found.
Peak memory: 13656 KB
search exit code: 0

INFO     Planner time: 1.00s
