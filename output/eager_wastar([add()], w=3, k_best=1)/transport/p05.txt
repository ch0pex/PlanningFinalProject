INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p05.pddl --sas-file 'output/eager_wastar([add()], w=3, k_best=1)/transport/p05.txt.sas'
Parsing...
Parsing: [0.000s CPU, 0.006s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.008s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 27 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1944 relevant atoms
1792 auxiliary atoms
3736 final queue length
6616 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.042s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
10 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
10 of 10 variables necessary.
0 of 10 mutex groups necessary.
1572 of 1572 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.004s wall-clock]
Translator variables: 10
Translator derived variables: 0
Translator facts: 142
Translator goal facts: 6
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 1572
Translator axioms: 0
Translator task size: 9194
Translator peak memory: 37404 KB
Writing output... [0.010s CPU, 0.011s wall-clock]
Done! [0.080s CPU, 0.105s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=3, k_best=1)/transport/p05.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=3, k_best=1)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=3, k_best=1)/transport/p05.txt.sas'"'"''
[t=0.001453s, 10804 KB] reading input...
[t=0.006227s, 11208 KB] done reading input!
[t=0.007223s, 11748 KB] Simplifying 3012 unary operators... done! [3012 unary operators]
[t=0.008467s, 11748 KB] time to simplify: 0.001245s
[t=0.008628s, 11920 KB] Initializing additive heuristic...
[t=0.008713s, 11920 KB] Building successor generator...done!
[t=0.009095s, 11920 KB] peak memory difference for successor generator creation: 0 KB
[t=0.009139s, 11920 KB] time for successor generation creation: 0.000000s
[t=0.009164s, 11920 KB] Variables: 10
[t=0.009185s, 11920 KB] FactPairs: 142
[t=0.009204s, 11920 KB] Bytes per state: 8
[t=0.009223s, 11920 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.009264s, 11920 KB] New best heuristic value for add: 391
[t=0.009336s, 11920 KB] g=0, 1 evaluated, 0 expanded
[t=0.009362s, 11920 KB] Initial heuristic value for add: 391
[t=0.009389s, 11920 KB] pruning method: none
[t=0.009414s, 11920 KB] New best heuristic value for add: 390
[t=0.009585s, 11920 KB] g=28, 5 evaluated, 1 expanded
[t=0.009607s, 11920 KB] New best heuristic value for add: 355
[t=0.009846s, 11920 KB] g=18, 14 evaluated, 1 expanded
[t=0.009871s, 11920 KB] New best heuristic value for add: 354
[t=0.010115s, 11920 KB] g=19, 23 evaluated, 2 expanded
[t=0.010141s, 11920 KB] New best heuristic value for add: 307
[t=0.010246s, 11920 KB] g=42, 26 evaluated, 2 expanded
[t=0.010271s, 11920 KB] New best heuristic value for add: 306
[t=0.010575s, 11920 KB] g=43, 35 evaluated, 3 expanded
[t=0.010608s, 11920 KB] New best heuristic value for add: 305
[t=0.011312s, 11920 KB] g=44, 47 evaluated, 4 expanded
[t=0.011349s, 11920 KB] New best heuristic value for add: 280
[t=0.011647s, 11920 KB] g=69, 57 evaluated, 5 expanded
[t=0.011676s, 11920 KB] New best heuristic value for add: 279
[t=0.011947s, 11920 KB] g=70, 67 evaluated, 6 expanded
[t=0.013166s, 11920 KB] New best heuristic value for add: 267
[t=0.013949s, 11920 KB] g=148, 140 evaluated, 16 expanded
[t=0.013971s, 11920 KB] New best heuristic value for add: 264
[t=0.014045s, 11920 KB] g=139, 142 evaluated, 16 expanded
[t=0.014069s, 11920 KB] New best heuristic value for add: 263
[t=0.014177s, 11920 KB] g=159, 145 evaluated, 17 expanded
[t=0.014197s, 11920 KB] New best heuristic value for add: 252
[t=0.014326s, 11920 KB] g=155, 149 evaluated, 17 expanded
[t=0.014347s, 11920 KB] New best heuristic value for add: 251
[t=0.014575s, 11920 KB] g=156, 157 evaluated, 18 expanded
[t=0.014599s, 11920 KB] New best heuristic value for add: 242
[t=0.014701s, 11920 KB] g=180, 160 evaluated, 18 expanded
[t=0.014720s, 11920 KB] New best heuristic value for add: 241
[t=0.014917s, 11920 KB] g=181, 167 evaluated, 19 expanded
[t=0.014942s, 11920 KB] New best heuristic value for add: 232
[t=0.015988s, 11920 KB] g=194, 208 evaluated, 25 expanded
[t=0.016009s, 11920 KB] New best heuristic value for add: 227
[t=0.016058s, 11920 KB] g=203, 209 evaluated, 25 expanded
[t=0.016078s, 11920 KB] New best heuristic value for add: 208
[t=0.016269s, 11920 KB] g=225, 216 evaluated, 26 expanded
[t=0.016290s, 11920 KB] New best heuristic value for add: 204
[t=0.016339s, 11920 KB] g=232, 217 evaluated, 26 expanded
[t=0.016359s, 11920 KB] New best heuristic value for add: 201
[t=0.016640s, 11920 KB] g=247, 226 evaluated, 27 expanded
[t=0.016661s, 11920 KB] New best heuristic value for add: 200
[t=0.016841s, 11920 KB] g=257, 232 evaluated, 27 expanded
[t=0.016862s, 11920 KB] New best heuristic value for add: 185
[t=0.017548s, 11920 KB] g=269, 257 evaluated, 30 expanded
[t=0.017568s, 11920 KB] New best heuristic value for add: 179
[t=0.017642s, 11920 KB] g=271, 259 evaluated, 30 expanded
[t=0.017662s, 11920 KB] New best heuristic value for add: 178
[t=0.017872s, 11920 KB] g=272, 266 evaluated, 31 expanded
[t=0.017897s, 11920 KB] New best heuristic value for add: 177
[t=0.018244s, 11920 KB] g=290, 279 evaluated, 32 expanded
[t=0.019389s, 11920 KB] New best heuristic value for add: 176
[t=0.020196s, 11920 KB] g=292, 350 evaluated, 42 expanded, 2 reopened
[t=0.020220s, 11920 KB] New best heuristic value for add: 159
[t=0.020484s, 11920 KB] g=309, 360 evaluated, 43 expanded, 2 reopened
[t=0.020504s, 11920 KB] New best heuristic value for add: 148
[t=0.020599s, 11920 KB] g=321, 363 evaluated, 43 expanded, 2 reopened
[t=0.020631s, 11920 KB] New best heuristic value for add: 128
[t=0.020887s, 11920 KB] g=341, 372 evaluated, 44 expanded, 2 reopened
[t=0.020909s, 11920 KB] New best heuristic value for add: 114
[t=0.021321s, 11920 KB] g=355, 385 evaluated, 45 expanded, 2 reopened
[t=0.021344s, 11920 KB] New best heuristic value for add: 113
[t=0.021625s, 11920 KB] g=356, 396 evaluated, 46 expanded, 2 reopened
[t=0.027768s, 12052 KB] New best heuristic value for add: 112
[t=0.032381s, 12052 KB] g=424, 830 evaluated, 102 expanded, 2 reopened
[t=0.032402s, 12052 KB] New best heuristic value for add: 88
[t=0.032616s, 12052 KB] g=448, 839 evaluated, 103 expanded, 2 reopened
[t=0.032639s, 12052 KB] New best heuristic value for add: 58
[t=0.032987s, 12052 KB] g=478, 850 evaluated, 104 expanded, 2 reopened
[t=0.033013s, 12052 KB] New best heuristic value for add: 57
[t=0.033393s, 12052 KB] g=479, 865 evaluated, 105 expanded, 2 reopened
[t=0.036636s, 12052 KB] New best heuristic value for add: 56
[t=0.036753s, 12052 KB] g=510, 997 evaluated, 122 expanded, 2 reopened
[t=0.036782s, 12052 KB] New best heuristic value for add: 26
[t=0.036845s, 12052 KB] g=540, 999 evaluated, 123 expanded, 2 reopened
[t=0.036866s, 12052 KB] New best heuristic value for add: 19
[t=0.037091s, 12052 KB] g=564, 1007 evaluated, 124 expanded, 2 reopened
[t=0.037113s, 12052 KB] New best heuristic value for add: 1
[t=0.037185s, 12052 KB] g=565, 1010 evaluated, 124 expanded, 2 reopened
[t=0.037205s, 12052 KB] New best heuristic value for add: 0
[t=0.037362s, 12052 KB] g=566, 1021 evaluated, 125 expanded, 2 reopened
[t=0.037385s, 12052 KB] Solution found!
[t=0.037444s, 12052 KB] Actual search time: 0.028030s
drive truck-1 city-loc-12 city-loc-7 (18)
drive truck-1 city-loc-7 city-loc-9 (24)
pick-up truck-2 city-loc-5 package-3 capacity-1 capacity-2 (1)
pick-up truck-1 city-loc-9 package-4 capacity-2 capacity-3 (1)
drive truck-1 city-loc-9 city-loc-8 (25)
drop truck-1 city-loc-8 package-4 capacity-2 capacity-3 (1)
drive truck-1 city-loc-8 city-loc-9 (25)
drive truck-1 city-loc-9 city-loc-7 (24)
drive truck-1 city-loc-7 city-loc-3 (20)
drive truck-2 city-loc-5 city-loc-2 (16)
drop truck-2 city-loc-2 package-3 capacity-1 capacity-2 (1)
drive truck-2 city-loc-2 city-loc-4 (23)
pick-up truck-2 city-loc-4 package-6 capacity-1 capacity-2 (1)
drive truck-2 city-loc-4 city-loc-2 (23)
drive truck-2 city-loc-2 city-loc-14 (29)
drive truck-2 city-loc-14 city-loc-15 (15)
drive truck-1 city-loc-3 city-loc-14 (22)
drop truck-2 city-loc-15 package-6 capacity-1 capacity-2 (1)
drive truck-1 city-loc-14 city-loc-6 (21)
pick-up truck-1 city-loc-6 package-5 capacity-2 capacity-3 (1)
drive truck-1 city-loc-6 city-loc-5 (29)
drive truck-1 city-loc-5 city-loc-12 (20)
drive truck-1 city-loc-12 city-loc-4 (14)
drop truck-1 city-loc-4 package-5 capacity-2 capacity-3 (1)
drive truck-1 city-loc-4 city-loc-7 (29)
drive truck-1 city-loc-7 city-loc-3 (20)
drive truck-1 city-loc-3 city-loc-10 (18)
pick-up truck-1 city-loc-10 package-1 capacity-2 capacity-3 (1)
drive truck-1 city-loc-10 city-loc-15 (24)
drive truck-1 city-loc-15 city-loc-13 (30)
drop truck-1 city-loc-13 package-1 capacity-2 capacity-3 (1)
drive truck-2 city-loc-15 city-loc-11 (30)
pick-up truck-2 city-loc-11 package-2 capacity-1 capacity-2 (1)
drive truck-2 city-loc-11 city-loc-15 (30)
drive truck-2 city-loc-15 city-loc-3 (25)
drop truck-2 city-loc-3 package-2 capacity-1 capacity-2 (1)
[t=0.037470s, 12052 KB] Plan length: 36 step(s).
[t=0.037470s, 12052 KB] Plan cost: 566
[t=0.037470s, 12052 KB] Expanded 126 state(s).
[t=0.037470s, 12052 KB] Reopened 2 state(s).
[t=0.037470s, 12052 KB] Evaluated 1027 state(s).
[t=0.037470s, 12052 KB] Evaluations: 1027
[t=0.037470s, 12052 KB] Generated 1627 state(s).
[t=0.037470s, 12052 KB] Dead ends: 0 state(s).
[t=0.037470s, 12052 KB] Number of registered states: 1027
[t=0.037470s, 12052 KB] Int hash set load factor: 1027/2048 = 0.501465
[t=0.037470s, 12052 KB] Int hash set resizes: 11
[t=0.037470s, 12052 KB] Search time: 0.028246s
[t=0.037470s, 12052 KB] Total time: 0.037470s
Solution found.
Peak memory: 12052 KB
search exit code: 0

INFO     Planner time: 0.20s
