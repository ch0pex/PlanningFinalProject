INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p07.pddl --sas-file 'output/eager_wastar([add()], w=3, k_best=1)/transport/p07.txt.sas'
Parsing...
Parsing: [0.020s CPU, 0.006s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.010s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 27 rules.
Computing model... [0.030s CPU, 0.032s wall-clock]
4810 relevant atoms
4137 auxiliary atoms
8947 final queue length
16983 total queue pushes
Completing instantiation... [0.060s CPU, 0.062s wall-clock]
Instantiating: [0.090s CPU, 0.117s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.004s wall-clock]
Translating task: [0.070s CPU, 0.076s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
14 propositions removed
Detecting unreachable propositions: [0.040s CPU, 0.032s wall-clock]
Reordering and filtering variables...
14 of 14 variables necessary.
0 of 14 mutex groups necessary.
4260 of 4260 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 14
Translator derived variables: 0
Translator facts: 270
Translator goal facts: 8
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 4260
Translator axioms: 0
Translator task size: 25168
Translator peak memory: 47928 KB
Writing output... [0.020s CPU, 0.027s wall-clock]
Done! [0.260s CPU, 0.280s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=3, k_best=1)/transport/p07.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=3, k_best=1)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=3, k_best=1)/transport/p07.txt.sas'"'"''
[t=0.001532s, 10804 KB] reading input...
[t=0.013636s, 11988 KB] done reading input!
[t=0.014628s, 12772 KB] Simplifying 8292 unary operators... done! [8292 unary operators]
[t=0.018458s, 13300 KB] time to simplify: 0.003830s
[t=0.018789s, 13300 KB] Initializing additive heuristic...
[t=0.018947s, 13300 KB] Building successor generator...done!
[t=0.020123s, 13564 KB] peak memory difference for successor generator creation: 264 KB
[t=0.020159s, 13564 KB] time for successor generation creation: 0.000000s
[t=0.020186s, 13564 KB] Variables: 14
[t=0.020213s, 13564 KB] FactPairs: 270
[t=0.020236s, 13564 KB] Bytes per state: 12
[t=0.020257s, 13564 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.020290s, 13564 KB] New best heuristic value for add: 775
[t=0.020420s, 13564 KB] g=0, 1 evaluated, 0 expanded
[t=0.020443s, 13564 KB] Initial heuristic value for add: 775
[t=0.020466s, 13564 KB] pruning method: none
[t=0.020485s, 13564 KB] New best heuristic value for add: 755
[t=0.020655s, 13564 KB] g=26, 3 evaluated, 1 expanded
[t=0.020675s, 13564 KB] New best heuristic value for add: 736
[t=0.020765s, 13564 KB] g=22, 4 evaluated, 1 expanded
[t=0.020785s, 13564 KB] New best heuristic value for add: 701
[t=0.020875s, 13564 KB] g=28, 5 evaluated, 1 expanded
[t=0.021958s, 13564 KB] New best heuristic value for add: 696
[t=0.022326s, 13564 KB] g=46, 22 evaluated, 2 expanded
[t=0.022349s, 13564 KB] New best heuristic value for add: 692
[t=0.023647s, 13564 KB] g=47, 36 evaluated, 3 expanded
[t=0.023669s, 13564 KB] New best heuristic value for add: 690
[t=0.024827s, 13564 KB] g=48, 48 evaluated, 4 expanded
[t=0.024848s, 13564 KB] New best heuristic value for add: 650
[t=0.025162s, 13564 KB] g=73, 51 evaluated, 4 expanded
[t=0.025182s, 13564 KB] New best heuristic value for add: 648
[t=0.025686s, 13564 KB] g=96, 56 evaluated, 5 expanded
[t=0.025707s, 13564 KB] New best heuristic value for add: 645
[t=0.026794s, 13564 KB] g=97, 67 evaluated, 6 expanded
[t=0.026826s, 13564 KB] New best heuristic value for add: 638
[t=0.027049s, 13564 KB] g=89, 69 evaluated, 6 expanded
[t=0.027072s, 13564 KB] New best heuristic value for add: 627
[t=0.027299s, 13564 KB] g=90, 71 evaluated, 6 expanded
[t=0.027322s, 13564 KB] New best heuristic value for add: 620
[t=0.028032s, 13564 KB] g=113, 78 evaluated, 7 expanded
[t=0.028068s, 13564 KB] New best heuristic value for add: 604
[t=0.028289s, 13564 KB] g=113, 80 evaluated, 7 expanded
[t=0.028320s, 13564 KB] New best heuristic value for add: 597
[t=0.029225s, 13564 KB] g=136, 89 evaluated, 8 expanded
[t=0.029249s, 13564 KB] New best heuristic value for add: 576
[t=0.029465s, 13564 KB] g=141, 91 evaluated, 8 expanded
[t=0.029489s, 13564 KB] New best heuristic value for add: 569
[t=0.030339s, 13564 KB] g=164, 100 evaluated, 9 expanded
[t=0.030366s, 13564 KB] New best heuristic value for add: 556
[t=0.031018s, 13564 KB] g=154, 107 evaluated, 9 expanded
[t=0.031044s, 13564 KB] New best heuristic value for add: 549
[t=0.031607s, 13564 KB] g=177, 113 evaluated, 10 expanded
[t=0.031631s, 13564 KB] New best heuristic value for add: 531
[t=0.032195s, 13564 KB] g=179, 119 evaluated, 10 expanded
[t=0.032216s, 13564 KB] New best heuristic value for add: 524
[t=0.032678s, 13564 KB] g=202, 124 evaluated, 11 expanded
[t=0.032699s, 13564 KB] New best heuristic value for add: 523
[t=0.033828s, 13564 KB] g=203, 137 evaluated, 12 expanded
[t=0.033849s, 13564 KB] New best heuristic value for add: 522
[t=0.034858s, 13564 KB] g=204, 149 evaluated, 13 expanded
[t=0.034878s, 13564 KB] New best heuristic value for add: 501
[t=0.035059s, 13564 KB] g=209, 151 evaluated, 13 expanded
[t=0.035080s, 13564 KB] New best heuristic value for add: 494
[t=0.035891s, 13564 KB] g=232, 161 evaluated, 14 expanded
[t=0.035911s, 13564 KB] New best heuristic value for add: 486
[t=0.036106s, 13564 KB] g=238, 163 evaluated, 14 expanded
[t=0.036137s, 13564 KB] New best heuristic value for add: 479
[t=0.037151s, 13564 KB] g=261, 175 evaluated, 15 expanded
[t=0.037174s, 13564 KB] New best heuristic value for add: 478
[t=0.039230s, 13564 KB] g=262, 201 evaluated, 17 expanded
[t=0.039256s, 13564 KB] New best heuristic value for add: 462
[t=0.040129s, 13564 KB] g=285, 212 evaluated, 18 expanded
[t=0.236694s, 13696 KB] New best heuristic value for add: 458
[t=0.237139s, 13696 KB] g=301, 2453 evaluated, 222 expanded
[t=0.237163s, 13696 KB] New best heuristic value for add: 419
[t=0.238091s, 13696 KB] g=324, 2465 evaluated, 223 expanded
[t=0.276299s, 13696 KB] New best heuristic value for add: 418
[t=0.280512s, 13696 KB] g=355, 2852 evaluated, 257 expanded
[t=0.280539s, 13696 KB] New best heuristic value for add: 393
[t=0.281332s, 13696 KB] g=380, 2862 evaluated, 258 expanded
[t=0.281355s, 13696 KB] New best heuristic value for add: 381
[t=0.282395s, 13696 KB] g=392, 2876 evaluated, 259 expanded
[t=0.282421s, 13696 KB] New best heuristic value for add: 380
[t=0.283682s, 13696 KB] g=393, 2892 evaluated, 260 expanded
[t=0.285242s, 13696 KB] New best heuristic value for add: 379
[t=0.286090s, 13696 KB] g=422, 2922 evaluated, 262 expanded
[t=0.525031s, 13964 KB] New best heuristic value for add: 371
[t=0.529089s, 13964 KB] g=467, 5947 evaluated, 593 expanded
[t=0.529115s, 13964 KB] New best heuristic value for add: 355
[t=0.529556s, 13964 KB] g=489, 5952 evaluated, 594 expanded
[t=0.529579s, 13964 KB] New best heuristic value for add: 354
[t=0.530430s, 13964 KB] g=490, 5963 evaluated, 595 expanded
[t=0.530452s, 13964 KB] New best heuristic value for add: 348
[t=0.530557s, 13964 KB] g=502, 5964 evaluated, 595 expanded
[t=0.530579s, 13964 KB] New best heuristic value for add: 347
[t=0.531439s, 13964 KB] g=502, 5975 evaluated, 596 expanded
[t=0.531462s, 13964 KB] New best heuristic value for add: 318
[t=0.532095s, 13964 KB] g=531, 5983 evaluated, 597 expanded
[t=0.532117s, 13964 KB] New best heuristic value for add: 290
[t=0.533032s, 13964 KB] g=559, 5995 evaluated, 598 expanded
[t=0.533054s, 13964 KB] New best heuristic value for add: 289
[t=0.533853s, 13964 KB] g=560, 6006 evaluated, 599 expanded
[t=0.533874s, 13964 KB] New best heuristic value for add: 288
[t=0.534775s, 13964 KB] g=561, 6018 evaluated, 600 expanded
[t=0.534798s, 13964 KB] New best heuristic value for add: 260
[t=0.535496s, 13964 KB] g=589, 6028 evaluated, 601 expanded
[t=0.535525s, 13964 KB] New best heuristic value for add: 231
[t=0.536241s, 13964 KB] g=618, 6038 evaluated, 602 expanded
[t=0.536263s, 13964 KB] New best heuristic value for add: 205
[t=0.537145s, 13964 KB] g=644, 6050 evaluated, 603 expanded
[t=0.537167s, 13964 KB] New best heuristic value for add: 204
[t=0.538245s, 13964 KB] g=645, 6064 evaluated, 604 expanded
[t=0.538267s, 13964 KB] New best heuristic value for add: 203
[t=0.539469s, 13964 KB] g=646, 6079 evaluated, 605 expanded
[t=0.539492s, 13964 KB] New best heuristic value for add: 185
[t=0.540255s, 13964 KB] g=664, 6089 evaluated, 606 expanded
[t=0.540755s, 13964 KB] New best heuristic value for add: 160
[t=0.541190s, 13964 KB] g=689, 6101 evaluated, 607 expanded
[t=0.541215s, 13964 KB] New best heuristic value for add: 144
[t=0.542035s, 13964 KB] g=705, 6112 evaluated, 608 expanded
[t=0.542056s, 13964 KB] New best heuristic value for add: 118
[t=0.542838s, 13964 KB] g=731, 6122 evaluated, 609 expanded
[t=0.542861s, 13964 KB] New best heuristic value for add: 102
[t=0.543892s, 13964 KB] g=747, 6135 evaluated, 610 expanded
[t=0.543915s, 13964 KB] New best heuristic value for add: 101
[t=0.544771s, 13964 KB] g=748, 6146 evaluated, 611 expanded
[t=0.544794s, 13964 KB] New best heuristic value for add: 100
[t=0.546142s, 13964 KB] g=762, 6163 evaluated, 613 expanded
[t=0.548986s, 14088 KB] New best heuristic value for add: 99
[t=0.550218s, 14088 KB] g=762, 6217 evaluated, 619 expanded
[t=0.550240s, 14088 KB] New best heuristic value for add: 81
[t=0.550734s, 14088 KB] g=780, 6224 evaluated, 620 expanded
[t=0.550760s, 14088 KB] New best heuristic value for add: 56
[t=0.551535s, 14088 KB] g=805, 6235 evaluated, 621 expanded
[t=0.551562s, 14088 KB] New best heuristic value for add: 40
[t=0.552180s, 14088 KB] g=821, 6246 evaluated, 622 expanded
[t=0.552206s, 14088 KB] New best heuristic value for add: 14
[t=0.552674s, 14088 KB] g=847, 6257 evaluated, 623 expanded
[t=0.552696s, 14088 KB] New best heuristic value for add: 1
[t=0.553034s, 14088 KB] g=860, 6269 evaluated, 624 expanded
[t=0.553055s, 14088 KB] New best heuristic value for add: 0
[t=0.553316s, 14088 KB] g=861, 6282 evaluated, 625 expanded
[t=0.553337s, 14088 KB] Solution found!
[t=0.553464s, 14088 KB] Actual search time: 0.532978s
drive truck-3 city-loc-17 city-loc-21 (28)
pick-up truck-1 city-loc-1 package-7 capacity-3 capacity-4 (1)
drive truck-2 city-loc-10 city-loc-7 (18)
drive truck-1 city-loc-1 city-loc-4 (26)
pick-up truck-2 city-loc-7 package-8 capacity-3 capacity-4 (1)
drive truck-2 city-loc-7 city-loc-3 (16)
drive truck-2 city-loc-3 city-loc-12 (23)
drive truck-2 city-loc-12 city-loc-19 (28)
drive truck-1 city-loc-4 city-loc-14 (13)
drive truck-1 city-loc-14 city-loc-8 (25)
pick-up truck-2 city-loc-19 package-2 capacity-2 capacity-3 (1)
pick-up truck-2 city-loc-19 package-4 capacity-1 capacity-2 (1)
drive truck-2 city-loc-19 city-loc-12 (28)
drive truck-2 city-loc-12 city-loc-1 (29)
drive truck-3 city-loc-21 city-loc-6 (23)
pick-up truck-3 city-loc-6 package-5 capacity-1 capacity-2 (1)
drive truck-3 city-loc-6 city-loc-2 (19)
drop truck-3 city-loc-2 package-5 capacity-1 capacity-2 (1)
drive truck-3 city-loc-2 city-loc-6 (19)
drive truck-3 city-loc-6 city-loc-9 (28)
drive truck-3 city-loc-9 city-loc-18 (25)
pick-up truck-3 city-loc-18 package-1 capacity-1 capacity-2 (1)
drive truck-3 city-loc-18 city-loc-9 (25)
drive truck-3 city-loc-9 city-loc-21 (12)
drop truck-3 city-loc-21 package-1 capacity-1 capacity-2 (1)
drop truck-2 city-loc-1 package-8 capacity-1 capacity-2 (1)
drive truck-3 city-loc-21 city-loc-10 (22)
drive truck-3 city-loc-10 city-loc-3 (25)
drive truck-2 city-loc-1 city-loc-4 (26)
drive truck-3 city-loc-3 city-loc-1 (22)
drive truck-2 city-loc-4 city-loc-5 (12)
pick-up truck-3 city-loc-1 package-8 capacity-1 capacity-2 (1)
drive truck-3 city-loc-1 city-loc-12 (29)
drive truck-3 city-loc-12 city-loc-19 (28)
pick-up truck-3 city-loc-19 package-6 capacity-0 capacity-1 (1)
drop truck-3 city-loc-19 package-8 capacity-0 capacity-1 (1)
drive truck-3 city-loc-19 city-loc-12 (28)
drive truck-3 city-loc-12 city-loc-1 (29)
drive truck-3 city-loc-1 city-loc-4 (26)
drop truck-3 city-loc-4 package-6 capacity-1 capacity-2 (1)
drop truck-2 city-loc-5 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-loc-5 city-loc-14 (18)
drive truck-2 city-loc-14 city-loc-8 (25)
drive truck-2 city-loc-8 city-loc-17 (16)
drive truck-2 city-loc-17 city-loc-11 (26)
drive truck-2 city-loc-11 city-loc-16 (16)
drop truck-2 city-loc-16 package-4 capacity-3 capacity-4 (1)
drop truck-1 city-loc-8 package-7 capacity-3 capacity-4 (1)
drive truck-3 city-loc-4 city-loc-5 (12)
pick-up truck-3 city-loc-5 package-3 capacity-1 capacity-2 (1)
drive truck-3 city-loc-5 city-loc-14 (18)
drive truck-3 city-loc-14 city-loc-8 (25)
drive truck-3 city-loc-8 city-loc-17 (16)
drive truck-3 city-loc-17 city-loc-11 (26)
drive truck-3 city-loc-11 city-loc-13 (13)
drop truck-3 city-loc-13 package-3 capacity-1 capacity-2 (1)
[t=0.553491s, 14088 KB] Plan length: 56 step(s).
[t=0.553491s, 14088 KB] Plan cost: 861
[t=0.553491s, 14088 KB] Expanded 626 state(s).
[t=0.553491s, 14088 KB] Reopened 0 state(s).
[t=0.553491s, 14088 KB] Evaluated 6290 state(s).
[t=0.553491s, 14088 KB] Evaluations: 6290
[t=0.553491s, 14088 KB] Generated 9884 state(s).
[t=0.553491s, 14088 KB] Dead ends: 0 state(s).
[t=0.553491s, 14088 KB] Number of registered states: 6290
[t=0.553491s, 14088 KB] Int hash set load factor: 6290/8192 = 0.767822
[t=0.553491s, 14088 KB] Int hash set resizes: 13
[t=0.553491s, 14088 KB] Search time: 0.533234s
[t=0.553491s, 14088 KB] Total time: 0.553491s
Solution found.
Peak memory: 14088 KB
search exit code: 0

INFO     Planner time: 0.88s
