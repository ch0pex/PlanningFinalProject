INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p04.pddl --sas-file 'output/eager_wastar([add()], w=5, k_best=500)/transport/p04.txt.sas'
Parsing...
Parsing: [0.000s CPU, 0.006s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.008s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 27 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
1293 relevant atoms
1246 auxiliary atoms
2539 final queue length
4436 total queue pushes
Completing instantiation... [0.010s CPU, 0.014s wall-clock]
Instantiating: [0.020s CPU, 0.034s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.003s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.020s CPU, 0.016s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
9 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.008s wall-clock]
Reordering and filtering variables...
9 of 9 variables necessary.
0 of 9 mutex groups necessary.
1032 of 1032 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.003s wall-clock]
Translator variables: 9
Translator derived variables: 0
Translator facts: 104
Translator goal facts: 5
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 1032
Translator axioms: 0
Translator task size: 6094
Translator peak memory: 35348 KB
Writing output... [0.000s CPU, 0.008s wall-clock]
Done! [0.050s CPU, 0.082s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=5, k_best=500)/transport/p04.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=5, k_best=500)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=5, k_best=500)/transport/p04.txt.sas'"'"''
[t=0.001427s, 10804 KB] reading input...
[t=0.004428s, 11060 KB] done reading input!
[t=0.005448s, 11508 KB] Simplifying 1992 unary operators... done! [1992 unary operators]
[t=0.006205s, 11508 KB] time to simplify: 0.000757s
[t=0.006341s, 11508 KB] Initializing additive heuristic...
[t=0.006389s, 11508 KB] Building successor generator...done!
[t=0.006698s, 11652 KB] peak memory difference for successor generator creation: 144 KB
[t=0.006728s, 11652 KB] time for successor generation creation: 0.000228s
[t=0.006748s, 11652 KB] Variables: 9
[t=0.006770s, 11652 KB] FactPairs: 104
[t=0.006789s, 11652 KB] Bytes per state: 8
[t=0.006807s, 11652 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.006848s, 11652 KB] New best heuristic value for add: 820
[t=0.006898s, 11652 KB] g=0, 1 evaluated, 0 expanded
[t=0.006918s, 11652 KB] Initial heuristic value for add: 820
[t=0.006946s, 11652 KB] pruning method: none
[t=0.006991s, 11652 KB] New best heuristic value for add: 531
[t=0.007040s, 11652 KB] g=34, 3 evaluated, 1 expanded
[t=0.007060s, 11652 KB] New best heuristic value for add: 344
[t=0.007156s, 11652 KB] g=56, 6 evaluated, 5 expanded
[t=0.007196s, 11652 KB] New best heuristic value for add: 336
[t=0.007221s, 11652 KB] g=59, 7 evaluated, 5 expanded
[t=0.007252s, 11652 KB] New best heuristic value for add: 330
[t=0.007488s, 11652 KB] g=60, 17 evaluated, 15 expanded
[t=0.007733s, 11652 KB] New best heuristic value for add: 319
[t=0.007796s, 11652 KB] g=69, 29 evaluated, 15 expanded
[t=0.007818s, 11652 KB] New best heuristic value for add: 308
[t=0.008064s, 11652 KB] g=97, 39 evaluated, 36 expanded
[t=0.008082s, 11652 KB] New best heuristic value for add: 305
[t=0.008172s, 11652 KB] g=93, 42 evaluated, 36 expanded
[t=0.008190s, 11652 KB] New best heuristic value for add: 300
[t=0.008257s, 11652 KB] g=78, 44 evaluated, 36 expanded
[t=0.008276s, 11652 KB] New best heuristic value for add: 276
[t=0.008531s, 11652 KB] g=103, 55 evaluated, 36 expanded
[t=0.008549s, 11652 KB] New best heuristic value for add: 272
[t=0.009262s, 11652 KB] g=104, 87 evaluated, 85 expanded
[t=0.009282s, 11652 KB] New best heuristic value for add: 265
[t=0.009321s, 11652 KB] g=135, 88 evaluated, 85 expanded
[t=0.009339s, 11652 KB] New best heuristic value for add: 262
[t=0.011679s, 11652 KB] g=135, 195 evaluated, 193 expanded
[t=0.011699s, 11652 KB] New best heuristic value for add: 249
[t=0.011988s, 11652 KB] g=142, 208 evaluated, 193 expanded
[t=0.012012s, 11652 KB] New best heuristic value for add: 244
[t=0.012079s, 11652 KB] g=127, 210 evaluated, 193 expanded
[t=0.012099s, 11652 KB] New best heuristic value for add: 239
[t=0.012882s, 11652 KB] g=140, 246 evaluated, 193 expanded
[t=0.014566s, 11652 KB] New best heuristic value for add: 238
[t=0.017905s, 11652 KB] g=141, 470 evaluated, 467 expanded
[t=0.017928s, 11652 KB] New best heuristic value for add: 215
[t=0.019193s, 11652 KB] g=143, 531 evaluated, 467 expanded
[t=0.023601s, 11884 KB] New best heuristic value for add: 214
[t=0.032740s, 11884 KB] g=144, 1158 evaluated, 967 expanded
[t=0.032855s, 11884 KB] New best heuristic value for add: 207
[t=0.033039s, 11884 KB] g=197, 1170 evaluated, 967 expanded
[t=0.033385s, 11884 KB] New best heuristic value for add: 206
[t=0.034250s, 11884 KB] g=184, 1232 evaluated, 967 expanded
[t=0.036697s, 11884 KB] New best heuristic value for add: 181
[t=0.036742s, 11884 KB] g=144, 1346 evaluated, 967 expanded
[t=0.065230s, 12428 KB] New best heuristic value for add: 180
[t=0.065366s, 12428 KB] g=145, 2572 evaluated, 1467 expanded
[t=0.110999s, 12692 KB] New best heuristic value for add: 173
[t=0.111031s, 12692 KB] g=234, 4615 evaluated, 1967 expanded
[t=0.128714s, 12692 KB] New best heuristic value for add: 169
[t=0.128764s, 12692 KB] g=192, 5318 evaluated, 1967 expanded
[t=0.160234s, 12956 KB] New best heuristic value for add: 168
[t=0.160430s, 12956 KB] g=193, 6673 evaluated, 2467 expanded
[t=0.162811s, 12956 KB] New best heuristic value for add: 166
[t=0.162886s, 12956 KB] g=204, 6782 evaluated, 2467 expanded
[t=0.191483s, 13080 KB] New best heuristic value for add: 154
[t=0.191554s, 13080 KB] g=187, 8068 evaluated, 2467 expanded
[t=0.207530s, 13080 KB] New best heuristic value for add: 135
[t=0.208180s, 13080 KB] g=193, 8691 evaluated, 2467 expanded
[t=0.219392s, 13080 KB] New best heuristic value for add: 134
[t=0.219491s, 13080 KB] g=194, 9178 evaluated, 2967 expanded
[t=0.281254s, 13212 KB] New best heuristic value for add: 133
[t=0.281362s, 13212 KB] g=195, 11866 evaluated, 3467 expanded, 3 reopened
[t=0.341345s, 13348 KB] New best heuristic value for add: 123
[t=0.343117s, 13348 KB] g=221, 14740 evaluated, 3967 expanded, 12 reopened
[t=0.343143s, 13348 KB] New best heuristic value for add: 115
[t=0.346449s, 13348 KB] g=285, 14910 evaluated, 3967 expanded, 12 reopened
[t=0.359822s, 13608 KB] New best heuristic value for add: 108
[t=0.361935s, 13608 KB] g=236, 15718 evaluated, 3967 expanded, 12 reopened
[t=0.397557s, 13612 KB] New best heuristic value for add: 107
[t=0.401386s, 13612 KB] g=237, 17679 evaluated, 4467 expanded, 15 reopened
[t=0.454305s, 13744 KB] New best heuristic value for add: 106
[t=0.460458s, 13744 KB] g=238, 20715 evaluated, 4967 expanded, 15 reopened
[t=0.463580s, 13744 KB] New best heuristic value for add: 101
[t=0.463783s, 13744 KB] g=342, 20892 evaluated, 4967 expanded, 15 reopened
[t=0.520342s, 13876 KB] New best heuristic value for add: 100
[t=0.521933s, 13876 KB] g=303, 23845 evaluated, 5467 expanded, 21 reopened
[t=0.521959s, 13876 KB] New best heuristic value for add: 69
[t=0.522043s, 13876 KB] g=334, 23848 evaluated, 5467 expanded, 21 reopened
[t=0.576848s, 14012 KB] New best heuristic value for add: 68
[t=0.583612s, 14012 KB] g=335, 26787 evaluated, 5967 expanded, 24 reopened
[t=0.633537s, 14528 KB] New best heuristic value for add: 42
[t=0.639286s, 14528 KB] g=361, 29706 evaluated, 6467 expanded, 37 reopened
[t=0.690272s, 14528 KB] New best heuristic value for add: 41
[t=0.694440s, 14528 KB] g=362, 32626 evaluated, 6967 expanded, 59 reopened
[t=0.746920s, 14540 KB] New best heuristic value for add: 40
[t=0.748003s, 14540 KB] g=363, 35602 evaluated, 7467 expanded, 96 reopened
[t=0.748025s, 14540 KB] New best heuristic value for add: 33
[t=0.748558s, 14540 KB] g=307, 35643 evaluated, 7467 expanded, 96 reopened
[t=0.793954s, 14676 KB] New best heuristic value for add: 1
[t=0.794695s, 14676 KB] g=339, 38347 evaluated, 7967 expanded, 131 reopened
[t=0.831711s, 14808 KB] New best heuristic value for add: 0
[t=0.837731s, 14808 KB] g=340, 41089 evaluated, 8467 expanded, 173 reopened
[t=0.869433s, 14940 KB] Solution found!
[t=0.875171s, 14940 KB] Actual search time: 0.868205s
drive truck-2 city-loc-6 city-loc-9 (28)
drive truck-2 city-loc-9 city-loc-11 (24)
pick-up truck-2 city-loc-11 package-4 capacity-3 capacity-4 (1)
drive truck-2 city-loc-11 city-loc-9 (24)
drive truck-2 city-loc-9 city-loc-10 (32)
drive truck-2 city-loc-10 city-loc-8 (24)
pick-up truck-2 city-loc-8 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-loc-8 city-loc-10 (24)
pick-up truck-2 city-loc-10 package-3 capacity-1 capacity-2 (1)
drop truck-2 city-loc-10 package-4 capacity-1 capacity-2 (1)
drive truck-2 city-loc-10 city-loc-1 (33)
pick-up truck-2 city-loc-1 package-1 capacity-1 capacity-2 (1)
drop truck-2 city-loc-1 package-2 capacity-1 capacity-2 (1)
drive truck-2 city-loc-1 city-loc-4 (26)
drive truck-2 city-loc-4 city-loc-5 (12)
drop truck-2 city-loc-5 package-3 capacity-2 capacity-3 (1)
drive truck-2 city-loc-5 city-loc-4 (12)
pick-up truck-2 city-loc-4 package-5 capacity-2 capacity-3 (1)
drive truck-2 city-loc-4 city-loc-1 (26)
drop truck-2 city-loc-1 package-5 capacity-2 capacity-3 (1)
drive truck-2 city-loc-1 city-loc-10 (33)
drive truck-2 city-loc-10 city-loc-9 (32)
drop truck-2 city-loc-9 package-1 capacity-3 capacity-4 (1)
[t=0.875202s, 14940 KB] Plan length: 23 step(s).
[t=0.875202s, 14940 KB] Plan cost: 340
[t=0.875202s, 14940 KB] Expanded 8967 state(s).
[t=0.875202s, 14940 KB] Reopened 215 state(s).
[t=0.875202s, 14940 KB] Evaluated 43504 state(s).
[t=0.875202s, 14940 KB] Evaluations: 43504
[t=0.875202s, 14940 KB] Generated 87062 state(s).
[t=0.875202s, 14940 KB] Dead ends: 0 state(s).
[t=0.875202s, 14940 KB] Number of registered states: 43504
[t=0.875202s, 14940 KB] Int hash set load factor: 43504/65536 = 0.663818
[t=0.875202s, 14940 KB] Int hash set resizes: 16
[t=0.875202s, 14940 KB] Search time: 0.868395s
[t=0.875202s, 14940 KB] Total time: 0.875202s
Solution found.
Peak memory: 14940 KB
search exit code: 0

INFO     Planner time: 1.01s
