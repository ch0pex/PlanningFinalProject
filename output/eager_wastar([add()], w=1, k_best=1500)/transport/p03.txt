INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p03.pddl --sas-file 'output/eager_wastar([add()], w=1, k_best=1500)/transport/p03.txt.sas'
Parsing...
Parsing: [0.000s CPU, 0.006s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.013s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 27 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
824 relevant atoms
832 auxiliary atoms
1656 final queue length
2796 total queue pushes
Completing instantiation... [0.010s CPU, 0.012s wall-clock]
Instantiating: [0.030s CPU, 0.037s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.012s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.006s wall-clock]
Reordering and filtering variables...
8 of 8 variables necessary.
0 of 8 mutex groups necessary.
628 of 628 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 8
Translator derived variables: 0
Translator facts: 72
Translator goal facts: 4
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 628
Translator axioms: 0
Translator task size: 3696
Translator peak memory: 33160 KB
Writing output... [0.000s CPU, 0.009s wall-clock]
Done! [0.050s CPU, 0.080s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=1, k_best=1500)/transport/p03.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=1, k_best=1500)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=1, k_best=1500)/transport/p03.txt.sas'"'"''
[t=0.001902s, 10804 KB] reading input...
[t=0.003906s, 10928 KB] done reading input!
[t=0.004001s, 11324 KB] Simplifying 1204 unary operators... done! [1204 unary operators]
[t=0.005781s, 11324 KB] time to simplify: 0.001780s
[t=0.005877s, 11324 KB] Initializing additive heuristic...
[t=0.005959s, 11324 KB] Building successor generator...done!
[t=0.006247s, 11324 KB] peak memory difference for successor generator creation: 0 KB
[t=0.006299s, 11324 KB] time for successor generation creation: 0.000000s
[t=0.006325s, 11324 KB] Variables: 8
[t=0.006355s, 11324 KB] FactPairs: 72
[t=0.006377s, 11324 KB] Bytes per state: 4
[t=0.006400s, 11324 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.006437s, 11324 KB] New best heuristic value for add: 299
[t=0.006485s, 11324 KB] g=0, 1 evaluated, 0 expanded
[t=0.006507s, 11324 KB] Initial heuristic value for add: 299
[t=0.006547s, 11324 KB] pruning method: none
[t=0.006578s, 11528 KB] New best heuristic value for add: 260
[t=0.006686s, 11528 KB] g=34, 5 evaluated, 1 expanded
[t=0.006716s, 11528 KB] New best heuristic value for add: 232
[t=0.006873s, 11528 KB] g=62, 11 evaluated, 9 expanded
[t=0.006905s, 11528 KB] New best heuristic value for add: 225
[t=0.007084s, 11528 KB] g=35, 24 evaluated, 9 expanded
[t=0.007116s, 11528 KB] New best heuristic value for add: 197
[t=0.007527s, 11528 KB] g=63, 41 evaluated, 39 expanded
[t=0.007555s, 11528 KB] New best heuristic value for add: 191
[t=0.008126s, 11528 KB] g=36, 74 evaluated, 39 expanded
[t=0.008155s, 11528 KB] New best heuristic value for add: 163
[t=0.009303s, 11528 KB] g=64, 131 evaluated, 129 expanded
[t=0.009333s, 11528 KB] New best heuristic value for add: 161
[t=0.011145s, 11528 KB] g=64, 281 evaluated, 129 expanded
[t=0.011168s, 11528 KB] New best heuristic value for add: 140
[t=0.013278s, 11528 KB] g=80, 381 evaluated, 379 expanded
[t=0.013315s, 11528 KB] New best heuristic value for add: 138
[t=0.013411s, 11528 KB] g=86, 386 evaluated, 379 expanded
[t=0.014476s, 11552 KB] New best heuristic value for add: 137
[t=0.022761s, 11552 KB] g=81, 993 evaluated, 994 expanded, 9 reopened
[t=0.022788s, 11552 KB] New best heuristic value for add: 132
[t=0.023170s, 11552 KB] g=93, 1022 evaluated, 994 expanded, 9 reopened
[t=0.042422s, 11676 KB] New best heuristic value for add: 109
[t=0.046588s, 11676 KB] g=109, 2334 evaluated, 2356 expanded, 29 reopened
[t=0.089534s, 11944 KB] New best heuristic value for add: 108
[t=0.094280s, 11944 KB] g=110, 5128 evaluated, 3856 expanded, 48 reopened
[t=0.098712s, 11944 KB] New best heuristic value for add: 107
[t=0.101776s, 11944 KB] g=141, 5782 evaluated, 3856 expanded, 48 reopened
[t=0.107925s, 11944 KB] New best heuristic value for add: 100
[t=0.110026s, 11944 KB] g=161, 6237 evaluated, 3856 expanded, 48 reopened
[t=0.155295s, 12076 KB] New best heuristic value for add: 93
[t=0.157366s, 12076 KB] g=131, 9248 evaluated, 5356 expanded, 48 reopened
[t=0.157394s, 12076 KB] New best heuristic value for add: 92
[t=0.159956s, 12076 KB] g=156, 9415 evaluated, 5356 expanded, 48 reopened
[t=0.259057s, 12212 KB] New best heuristic value for add: 79
[t=0.260524s, 12212 KB] g=168, 14066 evaluated, 6856 expanded, 48 reopened
[t=0.260562s, 12212 KB] New best heuristic value for add: 78
[t=0.261011s, 12212 KB] g=170, 14096 evaluated, 6856 expanded, 48 reopened
[t=0.261044s, 12212 KB] New best heuristic value for add: 71
[t=0.264360s, 12212 KB] g=190, 14318 evaluated, 6856 expanded, 48 reopened
[t=0.334092s, 12476 KB] New best heuristic value for add: 63
[t=0.336404s, 12476 KB] g=185, 19010 evaluated, 8356 expanded, 48 reopened
[t=0.336430s, 12476 KB] New best heuristic value for add: 55
[t=0.337270s, 12476 KB] g=196, 19093 evaluated, 8356 expanded, 48 reopened
[t=0.343117s, 12476 KB] New best heuristic value for add: 54
[t=0.347970s, 12476 KB] g=196, 20006 evaluated, 8356 expanded, 48 reopened
[t=0.399819s, 12608 KB] New best heuristic value for add: 49
[t=0.400924s, 12608 KB] g=197, 23968 evaluated, 9856 expanded, 48 reopened
[t=0.400956s, 12608 KB] New best heuristic value for add: 47
[t=0.401629s, 12608 KB] g=203, 24030 evaluated, 9856 expanded, 48 reopened
[t=0.475237s, 13124 KB] New best heuristic value for add: 31
[t=0.475818s, 13124 KB] g=219, 29061 evaluated, 11356 expanded, 51 reopened
[t=0.475858s, 13124 KB] New best heuristic value for add: 25
[t=0.476205s, 13124 KB] g=225, 29091 evaluated, 11356 expanded, 51 reopened
[t=0.531604s, 13132 KB] New best heuristic value for add: 18
[t=0.532974s, 13132 KB] g=232, 34123 evaluated, 12856 expanded, 53 reopened
[t=0.588311s, 13264 KB] New best heuristic value for add: 2
[t=0.591449s, 13264 KB] g=248, 39139 evaluated, 14356 expanded, 54 reopened
[t=0.644980s, 13264 KB] New best heuristic value for add: 1
[t=0.645366s, 13264 KB] g=249, 43852 evaluated, 15856 expanded, 56 reopened
[t=0.701580s, 13400 KB] New best heuristic value for add: 0
[t=0.702527s, 13400 KB] g=250, 48400 evaluated, 17356 expanded, 58 reopened
[t=0.748767s, 13532 KB] Solution found!
[t=0.756170s, 13532 KB] Actual search time: 0.749592s
drive truck-2 city-loc-9 city-loc-6 (28)
pick-up truck-2 city-loc-6 package-3 capacity-3 capacity-4 (1)
pick-up truck-2 city-loc-6 package-4 capacity-2 capacity-3 (1)
drive truck-2 city-loc-6 city-loc-3 (34)
drive truck-2 city-loc-3 city-loc-1 (22)
drop truck-2 city-loc-1 package-3 capacity-2 capacity-3 (1)
drive truck-2 city-loc-1 city-loc-5 (37)
pick-up truck-2 city-loc-5 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-loc-5 city-loc-4 (12)
drive truck-2 city-loc-4 city-loc-8 (35)
drop truck-2 city-loc-8 package-4 capacity-2 capacity-3 (1)
drive truck-2 city-loc-8 city-loc-7 (30)
drive truck-2 city-loc-7 city-loc-3 (16)
drop truck-2 city-loc-3 package-2 capacity-3 capacity-4 (1)
pick-up truck-1 city-loc-6 package-1 capacity-1 capacity-2 (1)
drive truck-1 city-loc-6 city-loc-9 (28)
drop truck-1 city-loc-9 package-1 capacity-1 capacity-2 (1)
[t=0.756207s, 13532 KB] Plan length: 17 step(s).
[t=0.756207s, 13532 KB] Plan cost: 250
[t=0.756207s, 13532 KB] Expanded 18856 state(s).
[t=0.756207s, 13532 KB] Reopened 61 state(s).
[t=0.756207s, 13532 KB] Evaluated 52745 state(s).
[t=0.756207s, 13532 KB] Evaluations: 52745
[t=0.756207s, 13532 KB] Generated 141595 state(s).
[t=0.756207s, 13532 KB] Dead ends: 0 state(s).
[t=0.756207s, 13532 KB] Number of registered states: 52745
[t=0.756207s, 13532 KB] Int hash set load factor: 52745/65536 = 0.804825
[t=0.756207s, 13532 KB] Int hash set resizes: 16
[t=0.756207s, 13532 KB] Search time: 0.749807s
[t=0.756207s, 13532 KB] Total time: 0.756207s
Solution found.
Peak memory: 13532 KB
search exit code: 0

INFO     Planner time: 0.90s
