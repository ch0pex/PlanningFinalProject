INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p05.pddl --sas-file 'output/eager_wastar([add()], w=5, k_best=1)/transport/p05.txt.sas'
Parsing...
Parsing: [0.000s CPU, 0.006s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.013s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 27 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1944 relevant atoms
1792 auxiliary atoms
3736 final queue length
6616 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.047s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
10 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.012s wall-clock]
Reordering and filtering variables...
10 of 10 variables necessary.
0 of 10 mutex groups necessary.
1572 of 1572 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 10
Translator derived variables: 0
Translator facts: 142
Translator goal facts: 6
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 1572
Translator axioms: 0
Translator task size: 9194
Translator peak memory: 37404 KB
Writing output... [0.010s CPU, 0.012s wall-clock]
Done! [0.090s CPU, 0.114s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=5, k_best=1)/transport/p05.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=5, k_best=1)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=5, k_best=1)/transport/p05.txt.sas'"'"''
[t=0.001511s, 10804 KB] reading input...
[t=0.006294s, 11208 KB] done reading input!
[t=0.006477s, 11748 KB] Simplifying 3012 unary operators... done! [3012 unary operators]
[t=0.008566s, 11748 KB] time to simplify: 0.002089s
[t=0.008696s, 11920 KB] Initializing additive heuristic...
[t=0.008782s, 11920 KB] Building successor generator...done!
[t=0.009183s, 11920 KB] peak memory difference for successor generator creation: 0 KB
[t=0.009228s, 11920 KB] time for successor generation creation: 0.000000s
[t=0.009249s, 11920 KB] Variables: 10
[t=0.009274s, 11920 KB] FactPairs: 142
[t=0.009294s, 11920 KB] Bytes per state: 8
[t=0.009314s, 11920 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.009346s, 11920 KB] New best heuristic value for add: 391
[t=0.009420s, 11920 KB] g=0, 1 evaluated, 0 expanded
[t=0.009441s, 11920 KB] Initial heuristic value for add: 391
[t=0.009462s, 11920 KB] pruning method: none
[t=0.009482s, 11920 KB] New best heuristic value for add: 390
[t=0.009618s, 11920 KB] g=28, 5 evaluated, 1 expanded
[t=0.009639s, 11920 KB] New best heuristic value for add: 355
[t=0.009919s, 11920 KB] g=18, 14 evaluated, 1 expanded
[t=0.009950s, 11920 KB] New best heuristic value for add: 354
[t=0.010185s, 11920 KB] g=19, 23 evaluated, 2 expanded
[t=0.010207s, 11920 KB] New best heuristic value for add: 307
[t=0.010312s, 11920 KB] g=42, 26 evaluated, 2 expanded
[t=0.010332s, 11920 KB] New best heuristic value for add: 306
[t=0.010622s, 11920 KB] g=43, 35 evaluated, 3 expanded
[t=0.010648s, 11920 KB] New best heuristic value for add: 305
[t=0.011013s, 11920 KB] g=44, 47 evaluated, 4 expanded
[t=0.011037s, 11920 KB] New best heuristic value for add: 280
[t=0.011334s, 11920 KB] g=69, 57 evaluated, 5 expanded
[t=0.011356s, 11920 KB] New best heuristic value for add: 279
[t=0.011657s, 11920 KB] g=70, 67 evaluated, 6 expanded
[t=0.011678s, 11920 KB] New best heuristic value for add: 267
[t=0.013094s, 11920 KB] g=148, 122 evaluated, 12 expanded
[t=0.013118s, 11920 KB] New best heuristic value for add: 264
[t=0.013192s, 11920 KB] g=139, 124 evaluated, 12 expanded
[t=0.013217s, 11920 KB] New best heuristic value for add: 263
[t=0.013319s, 11920 KB] g=159, 127 evaluated, 13 expanded
[t=0.013349s, 11920 KB] New best heuristic value for add: 252
[t=0.013492s, 11920 KB] g=155, 131 evaluated, 13 expanded
[t=0.013514s, 11920 KB] New best heuristic value for add: 251
[t=0.013748s, 11920 KB] g=156, 139 evaluated, 14 expanded
[t=0.013770s, 11920 KB] New best heuristic value for add: 242
[t=0.013887s, 11920 KB] g=180, 142 evaluated, 14 expanded
[t=0.013908s, 11920 KB] New best heuristic value for add: 241
[t=0.014099s, 11920 KB] g=181, 149 evaluated, 15 expanded
[t=0.014119s, 11920 KB] New best heuristic value for add: 240
[t=0.015202s, 11920 KB] g=205, 190 evaluated, 20 expanded
[t=0.015223s, 11920 KB] New best heuristic value for add: 227
[t=0.015486s, 11920 KB] g=219, 199 evaluated, 21 expanded
[t=0.015507s, 11920 KB] New best heuristic value for add: 222
[t=0.015554s, 11920 KB] g=228, 200 evaluated, 21 expanded
[t=0.015575s, 11920 KB] New best heuristic value for add: 208
[t=0.015821s, 11920 KB] g=250, 209 evaluated, 22 expanded
[t=0.015841s, 11920 KB] New best heuristic value for add: 200
[t=0.015896s, 11920 KB] g=257, 210 evaluated, 22 expanded
[t=0.015918s, 11920 KB] New best heuristic value for add: 197
[t=0.016364s, 11920 KB] g=287, 227 evaluated, 23 expanded
[t=0.016385s, 11920 KB] New best heuristic value for add: 194
[t=0.016546s, 11920 KB] g=277, 232 evaluated, 24 expanded
[t=0.016567s, 11920 KB] New best heuristic value for add: 193
[t=0.017370s, 11920 KB] g=280, 262 evaluated, 27 expanded
[t=0.017389s, 11920 KB] New best heuristic value for add: 176
[t=0.017641s, 11920 KB] g=297, 271 evaluated, 28 expanded
[t=0.017662s, 11920 KB] New best heuristic value for add: 165
[t=0.017754s, 11920 KB] g=309, 274 evaluated, 28 expanded
[t=0.017776s, 11920 KB] New best heuristic value for add: 145
[t=0.017992s, 11920 KB] g=329, 282 evaluated, 29 expanded
[t=0.018029s, 11920 KB] New best heuristic value for add: 131
[t=0.018406s, 11920 KB] g=343, 294 evaluated, 30 expanded
[t=0.018427s, 11920 KB] New best heuristic value for add: 130
[t=0.018697s, 11920 KB] g=344, 304 evaluated, 31 expanded
[t=0.018720s, 11920 KB] New best heuristic value for add: 129
[t=0.020705s, 11920 KB] g=393, 386 evaluated, 40 expanded
[t=0.020726s, 11920 KB] New best heuristic value for add: 114
[t=0.020954s, 11920 KB] g=408, 395 evaluated, 41 expanded
[t=0.020982s, 11920 KB] New best heuristic value for add: 113
[t=0.021342s, 11920 KB] g=409, 410 evaluated, 42 expanded
[t=0.021366s, 12052 KB] New best heuristic value for add: 112
[t=0.023052s, 12052 KB] g=434, 492 evaluated, 51 expanded
[t=0.023072s, 12052 KB] New best heuristic value for add: 88
[t=0.023232s, 12052 KB] g=458, 498 evaluated, 52 expanded
[t=0.023251s, 12052 KB] New best heuristic value for add: 58
[t=0.023499s, 12052 KB] g=488, 509 evaluated, 53 expanded
[t=0.023519s, 12052 KB] New best heuristic value for add: 57
[t=0.023887s, 12052 KB] g=489, 524 evaluated, 54 expanded
[t=0.024688s, 12052 KB] New best heuristic value for add: 56
[t=0.027075s, 12052 KB] g=520, 665 evaluated, 70 expanded
[t=0.027096s, 12052 KB] New best heuristic value for add: 26
[t=0.027259s, 12052 KB] g=550, 672 evaluated, 71 expanded
[t=0.027282s, 12052 KB] New best heuristic value for add: 19
[t=0.027402s, 12052 KB] g=574, 680 evaluated, 72 expanded
[t=0.027422s, 12052 KB] New best heuristic value for add: 1
[t=0.027492s, 12052 KB] g=575, 683 evaluated, 72 expanded
[t=0.027513s, 12052 KB] New best heuristic value for add: 0
[t=0.027625s, 12052 KB] g=576, 694 evaluated, 73 expanded
[t=0.027647s, 12052 KB] Solution found!
[t=0.027667s, 12052 KB] Actual search time: 0.018186s
drive truck-1 city-loc-12 city-loc-7 (18)
drive truck-1 city-loc-7 city-loc-9 (24)
pick-up truck-2 city-loc-5 package-3 capacity-1 capacity-2 (1)
pick-up truck-1 city-loc-9 package-4 capacity-2 capacity-3 (1)
drive truck-1 city-loc-9 city-loc-8 (25)
drop truck-1 city-loc-8 package-4 capacity-2 capacity-3 (1)
drive truck-1 city-loc-8 city-loc-9 (25)
drive truck-1 city-loc-9 city-loc-7 (24)
drive truck-1 city-loc-7 city-loc-3 (20)
drive truck-2 city-loc-5 city-loc-2 (16)
drive truck-1 city-loc-3 city-loc-15 (25)
drop truck-2 city-loc-2 package-3 capacity-1 capacity-2 (1)
drive truck-2 city-loc-2 city-loc-4 (23)
pick-up truck-2 city-loc-4 package-6 capacity-1 capacity-2 (1)
drive truck-2 city-loc-4 city-loc-2 (23)
drive truck-2 city-loc-2 city-loc-14 (29)
drop truck-2 city-loc-14 package-6 capacity-1 capacity-2 (1)
drive truck-2 city-loc-14 city-loc-6 (21)
pick-up truck-2 city-loc-6 package-5 capacity-1 capacity-2 (1)
drive truck-2 city-loc-6 city-loc-5 (29)
drive truck-2 city-loc-5 city-loc-12 (20)
drive truck-2 city-loc-12 city-loc-4 (14)
drop truck-2 city-loc-4 package-5 capacity-1 capacity-2 (1)
drive truck-2 city-loc-4 city-loc-12 (14)
drive truck-2 city-loc-12 city-loc-5 (20)
drive truck-2 city-loc-5 city-loc-14 (14)
pick-up truck-2 city-loc-14 package-6 capacity-1 capacity-2 (1)
drive truck-2 city-loc-14 city-loc-15 (15)
drop truck-2 city-loc-15 package-6 capacity-1 capacity-2 (1)
drive truck-2 city-loc-15 city-loc-10 (24)
pick-up truck-2 city-loc-10 package-1 capacity-1 capacity-2 (1)
drive truck-2 city-loc-10 city-loc-15 (24)
drive truck-2 city-loc-15 city-loc-13 (30)
drop truck-2 city-loc-13 package-1 capacity-1 capacity-2 (1)
drive truck-1 city-loc-15 city-loc-11 (30)
pick-up truck-1 city-loc-11 package-2 capacity-2 capacity-3 (1)
drive truck-1 city-loc-11 city-loc-15 (30)
drive truck-1 city-loc-15 city-loc-3 (25)
drop truck-1 city-loc-3 package-2 capacity-2 capacity-3 (1)
[t=0.027694s, 12052 KB] Plan length: 39 step(s).
[t=0.027694s, 12052 KB] Plan cost: 576
[t=0.027694s, 12052 KB] Expanded 74 state(s).
[t=0.027694s, 12052 KB] Reopened 0 state(s).
[t=0.027694s, 12052 KB] Evaluated 694 state(s).
[t=0.027694s, 12052 KB] Evaluations: 694
[t=0.027694s, 12052 KB] Generated 974 state(s).
[t=0.027694s, 12052 KB] Dead ends: 0 state(s).
[t=0.027694s, 12052 KB] Number of registered states: 694
[t=0.027694s, 12052 KB] Int hash set load factor: 694/1024 = 0.677734
[t=0.027694s, 12052 KB] Int hash set resizes: 10
[t=0.027694s, 12052 KB] Search time: 0.018381s
[t=0.027694s, 12052 KB] Total time: 0.027694s
Solution found.
Peak memory: 12052 KB
search exit code: 0

INFO     Planner time: 0.19s
