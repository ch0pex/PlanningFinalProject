INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p04.pddl --sas-file 'output/eager_wastar([add()], w=3, k_best=100)/transport/p04.txt.sas'
Parsing...
Parsing: [0.010s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.014s wall-clock]
Preparing model... [0.000s CPU, 0.003s wall-clock]
Generated 27 rules.
Computing model... [0.020s CPU, 0.021s wall-clock]
1293 relevant atoms
1246 auxiliary atoms
2539 final queue length
4436 total queue pushes
Completing instantiation... [0.040s CPU, 0.044s wall-clock]
Instantiating: [0.060s CPU, 0.085s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.001s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.011s wall-clock]
Translating task: [0.050s CPU, 0.064s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
9 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.027s wall-clock]
Reordering and filtering variables...
9 of 9 variables necessary.
0 of 9 mutex groups necessary.
1032 of 1032 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.013s wall-clock]
Translator variables: 9
Translator derived variables: 0
Translator facts: 104
Translator goal facts: 5
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 1032
Translator axioms: 0
Translator task size: 6094
Translator peak memory: 35348 KB
Writing output... [0.010s CPU, 0.034s wall-clock]
Done! [0.180s CPU, 0.257s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=3, k_best=100)/transport/p04.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=3, k_best=100)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=3, k_best=100)/transport/p04.txt.sas'"'"''
[t=0.007096s, 10804 KB] reading input...
[t=0.013996s, 11060 KB] done reading input!
[t=0.016618s, 11508 KB] Simplifying 1992 unary operators... done! [1992 unary operators]
[t=0.018833s, 11508 KB] time to simplify: 0.002215s
[t=0.019072s, 11508 KB] Initializing additive heuristic...
[t=0.019272s, 11508 KB] Building successor generator...done!
[t=0.019925s, 11652 KB] peak memory difference for successor generator creation: 144 KB
[t=0.019981s, 11652 KB] time for successor generation creation: 0.000000s
[t=0.020015s, 11652 KB] Variables: 9
[t=0.020061s, 11652 KB] FactPairs: 104
[t=0.020129s, 11652 KB] Bytes per state: 8
[t=0.020165s, 11652 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.020236s, 11652 KB] New best heuristic value for add: 820
[t=0.020348s, 11652 KB] g=0, 1 evaluated, 0 expanded
[t=0.020502s, 11652 KB] Initial heuristic value for add: 820
[t=0.020544s, 11652 KB] pruning method: none
[t=0.020581s, 11652 KB] New best heuristic value for add: 531
[t=0.020708s, 11652 KB] g=34, 3 evaluated, 1 expanded
[t=0.020794s, 11652 KB] New best heuristic value for add: 344
[t=0.020952s, 11652 KB] g=56, 6 evaluated, 5 expanded
[t=0.021029s, 11652 KB] New best heuristic value for add: 336
[t=0.021124s, 11652 KB] g=59, 7 evaluated, 5 expanded
[t=0.021169s, 11652 KB] New best heuristic value for add: 330
[t=0.021555s, 11652 KB] g=60, 17 evaluated, 15 expanded
[t=0.021595s, 11652 KB] New best heuristic value for add: 319
[t=0.022043s, 11652 KB] g=69, 29 evaluated, 15 expanded
[t=0.022076s, 11652 KB] New best heuristic value for add: 308
[t=0.022464s, 11652 KB] g=97, 39 evaluated, 36 expanded
[t=0.022495s, 11652 KB] New best heuristic value for add: 305
[t=0.022636s, 11652 KB] g=93, 42 evaluated, 36 expanded
[t=0.022668s, 11652 KB] New best heuristic value for add: 300
[t=0.022788s, 11652 KB] g=78, 44 evaluated, 36 expanded
[t=0.022885s, 11652 KB] New best heuristic value for add: 297
[t=0.023078s, 11652 KB] g=90, 48 evaluated, 36 expanded
[t=0.023109s, 11652 KB] New best heuristic value for add: 276
[t=0.023422s, 11652 KB] g=103, 56 evaluated, 36 expanded
[t=0.023451s, 11652 KB] New best heuristic value for add: 272
[t=0.024539s, 11652 KB] g=104, 87 evaluated, 85 expanded
[t=0.024619s, 11652 KB] New best heuristic value for add: 265
[t=0.024659s, 11652 KB] g=135, 88 evaluated, 85 expanded
[t=0.024691s, 11652 KB] New best heuristic value for add: 262
[t=0.028452s, 11652 KB] g=136, 199 evaluated, 185 expanded
[t=0.028497s, 11652 KB] New best heuristic value for add: 249
[t=0.028903s, 11652 KB] g=142, 208 evaluated, 185 expanded
[t=0.028967s, 11652 KB] New best heuristic value for add: 244
[t=0.029085s, 11652 KB] g=127, 210 evaluated, 185 expanded
[t=0.029121s, 11652 KB] New best heuristic value for add: 239
[t=0.030400s, 11652 KB] g=140, 246 evaluated, 185 expanded
[t=0.039401s, 11652 KB] New best heuristic value for add: 238
[t=0.043457s, 11652 KB] g=141, 461 evaluated, 285 expanded
[t=0.043495s, 11652 KB] New best heuristic value for add: 215
[t=0.045333s, 11652 KB] g=143, 516 evaluated, 285 expanded
[t=0.061244s, 11752 KB] New best heuristic value for add: 214
[t=0.066056s, 11752 KB] g=144, 862 evaluated, 385 expanded
[t=0.066100s, 11752 KB] New best heuristic value for add: 207
[t=0.066530s, 11752 KB] g=197, 874 evaluated, 385 expanded
[t=0.066576s, 11752 KB] New best heuristic value for add: 206
[t=0.068599s, 11752 KB] g=184, 940 evaluated, 385 expanded
[t=0.068670s, 11884 KB] New best heuristic value for add: 181
[t=0.071655s, 11884 KB] g=144, 1027 evaluated, 385 expanded
[t=0.082418s, 11884 KB] New best heuristic value for add: 180
[t=0.088842s, 11884 KB] g=145, 1344 evaluated, 485 expanded
[t=0.139521s, 12140 KB] New best heuristic value for add: 166
[t=0.142342s, 12140 KB] g=204, 2482 evaluated, 685 expanded
[t=0.164074s, 12140 KB] New best heuristic value for add: 165
[t=0.166880s, 12140 KB] g=205, 3055 evaluated, 785 expanded
[t=0.166932s, 12140 KB] New best heuristic value for add: 155
[t=0.169695s, 12140 KB] g=239, 3145 evaluated, 785 expanded
[t=0.180479s, 12140 KB] New best heuristic value for add: 153
[t=0.185402s, 12140 KB] g=198, 3367 evaluated, 785 expanded
[t=0.187945s, 12140 KB] New best heuristic value for add: 152
[t=0.194571s, 12140 KB] g=199, 3669 evaluated, 885 expanded
[t=0.194621s, 12140 KB] New best heuristic value for add: 143
[t=0.195696s, 12140 KB] g=247, 3694 evaluated, 885 expanded
[t=0.196012s, 12140 KB] New best heuristic value for add: 136
[t=0.198737s, 12140 KB] g=258, 3755 evaluated, 885 expanded
[t=0.212934s, 12316 KB] New best heuristic value for add: 135
[t=0.221874s, 12316 KB] g=259, 4257 evaluated, 985 expanded, 1 reopened
[t=0.221932s, 12316 KB] New best heuristic value for add: 133
[t=0.223525s, 12316 KB] g=279, 4311 evaluated, 985 expanded, 1 reopened
[t=0.223562s, 12316 KB] New best heuristic value for add: 115
[t=0.223734s, 12316 KB] g=285, 4314 evaluated, 985 expanded, 1 reopened
[t=0.237996s, 12316 KB] New best heuristic value for add: 114
[t=0.244894s, 12316 KB] g=286, 4820 evaluated, 1085 expanded, 1 reopened
[t=0.245602s, 12316 KB] New best heuristic value for add: 109
[t=0.246431s, 12316 KB] g=285, 4870 evaluated, 1085 expanded, 1 reopened
[t=0.272881s, 12316 KB] New best heuristic value for add: 108
[t=0.275639s, 12316 KB] g=286, 5436 evaluated, 1185 expanded, 1 reopened
[t=0.299012s, 12316 KB] New best heuristic value for add: 107
[t=0.299829s, 12316 KB] g=287, 6082 evaluated, 1285 expanded, 1 reopened
[t=0.308114s, 12316 KB] New best heuristic value for add: 88
[t=0.311764s, 12316 KB] g=328, 6221 evaluated, 1285 expanded, 1 reopened
[t=0.332371s, 12448 KB] New best heuristic value for add: 87
[t=0.334738s, 12448 KB] g=329, 6749 evaluated, 1385 expanded, 1 reopened
[t=0.334795s, 12448 KB] New best heuristic value for add: 81
[t=0.336995s, 12448 KB] g=329, 6826 evaluated, 1385 expanded, 1 reopened
[t=0.358943s, 12448 KB] New best heuristic value for add: 69
[t=0.361340s, 12448 KB] g=341, 7431 evaluated, 1485 expanded, 1 reopened
[t=0.386108s, 12580 KB] New best heuristic value for add: 68
[t=0.391565s, 12580 KB] g=342, 8084 evaluated, 1585 expanded, 1 reopened
[t=0.391644s, 12580 KB] New best heuristic value for add: 59
[t=0.391892s, 12580 KB] g=323, 8091 evaluated, 1585 expanded, 1 reopened
[t=0.391922s, 12580 KB] New best heuristic value for add: 49
[t=0.392213s, 12580 KB] g=353, 8101 evaluated, 1585 expanded, 1 reopened
[t=0.392571s, 12580 KB] New best heuristic value for add: 42
[t=0.393216s, 12580 KB] g=385, 8124 evaluated, 1585 expanded, 1 reopened
[t=0.409917s, 12580 KB] New best heuristic value for add: 41
[t=0.415244s, 12580 KB] g=386, 8735 evaluated, 1685 expanded, 1 reopened
[t=0.436017s, 12580 KB] New best heuristic value for add: 40
[t=0.442050s, 12580 KB] g=387, 9416 evaluated, 1785 expanded, 1 reopened
[t=0.442213s, 12580 KB] New best heuristic value for add: 30
[t=0.443159s, 12580 KB] g=416, 9460 evaluated, 1785 expanded, 1 reopened
[t=0.452590s, 12580 KB] New best heuristic value for add: 29
[t=0.459031s, 12580 KB] g=417, 10047 evaluated, 1885 expanded, 1 reopened
[t=0.459108s, 12580 KB] New best heuristic value for add: 14
[t=0.460685s, 12580 KB] g=429, 10094 evaluated, 1885 expanded, 1 reopened
[t=0.466503s, 12712 KB] New best heuristic value for add: 2
[t=0.472981s, 12712 KB] g=441, 10556 evaluated, 1985 expanded, 1 reopened
[t=0.484001s, 12712 KB] New best heuristic value for add: 1
[t=0.491874s, 12712 KB] g=405, 11064 evaluated, 2085 expanded, 1 reopened
[t=0.494940s, 12712 KB] New best heuristic value for add: 0
[t=0.501575s, 12712 KB] g=406, 11543 evaluated, 2185 expanded, 2 reopened
[t=0.514166s, 12712 KB] Solution found!
[t=0.516936s, 12712 KB] Actual search time: 0.496354s
drive truck-2 city-loc-6 city-loc-3 (34)
drive truck-2 city-loc-3 city-loc-10 (25)
pick-up truck-2 city-loc-10 package-3 capacity-3 capacity-4 (1)
drive truck-2 city-loc-10 city-loc-8 (24)
pick-up truck-2 city-loc-8 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-loc-8 city-loc-7 (30)
drive truck-1 city-loc-2 city-loc-6 (19)
drive truck-1 city-loc-6 city-loc-9 (28)
drive truck-2 city-loc-7 city-loc-1 (15)
drop truck-2 city-loc-1 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-loc-1 city-loc-4 (26)
drive truck-2 city-loc-4 city-loc-5 (12)
drop truck-2 city-loc-5 package-3 capacity-3 capacity-4 (1)
drive truck-2 city-loc-5 city-loc-4 (12)
pick-up truck-2 city-loc-4 package-5 capacity-3 capacity-4 (1)
drive truck-2 city-loc-4 city-loc-1 (26)
pick-up truck-2 city-loc-1 package-1 capacity-2 capacity-3 (1)
drop truck-2 city-loc-1 package-5 capacity-2 capacity-3 (1)
drive truck-2 city-loc-1 city-loc-10 (33)
drive truck-2 city-loc-10 city-loc-9 (32)
drive truck-1 city-loc-9 city-loc-11 (24)
pick-up truck-1 city-loc-11 package-4 capacity-2 capacity-3 (1)
drive truck-1 city-loc-11 city-loc-9 (24)
drive truck-1 city-loc-9 city-loc-10 (32)
drop truck-2 city-loc-9 package-1 capacity-3 capacity-4 (1)
drop truck-1 city-loc-10 package-4 capacity-2 capacity-3 (1)
[t=0.516984s, 12712 KB] Plan length: 26 step(s).
[t=0.516984s, 12712 KB] Plan cost: 406
[t=0.516984s, 12712 KB] Expanded 2285 state(s).
[t=0.516984s, 12712 KB] Reopened 4 state(s).
[t=0.516984s, 12712 KB] Evaluated 12006 state(s).
[t=0.516984s, 12712 KB] Evaluations: 12006
[t=0.516984s, 12712 KB] Generated 21895 state(s).
[t=0.516984s, 12712 KB] Dead ends: 0 state(s).
[t=0.516984s, 12712 KB] Number of registered states: 12006
[t=0.516984s, 12712 KB] Int hash set load factor: 12006/16384 = 0.732788
[t=0.516984s, 12712 KB] Int hash set resizes: 14
[t=0.516984s, 12712 KB] Search time: 0.496819s
[t=0.516984s, 12712 KB] Total time: 0.516984s
Solution found.
Peak memory: 12712 KB
search exit code: 0

INFO     Planner time: 0.98s
