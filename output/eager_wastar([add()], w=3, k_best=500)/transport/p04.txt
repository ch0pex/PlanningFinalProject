INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p04.pddl --sas-file 'output/eager_wastar([add()], w=3, k_best=500)/transport/p04.txt.sas'
Parsing...
Parsing: [0.000s CPU, 0.006s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.012s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 27 rules.
Computing model... [0.010s CPU, 0.007s wall-clock]
1293 relevant atoms
1246 auxiliary atoms
2539 final queue length
4436 total queue pushes
Completing instantiation... [0.010s CPU, 0.014s wall-clock]
Instantiating: [0.020s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.003s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.016s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
9 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.008s wall-clock]
Reordering and filtering variables...
9 of 9 variables necessary.
0 of 9 mutex groups necessary.
1032 of 1032 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.003s wall-clock]
Translator variables: 9
Translator derived variables: 0
Translator facts: 104
Translator goal facts: 5
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 1032
Translator axioms: 0
Translator task size: 6094
Translator peak memory: 35348 KB
Writing output... [0.000s CPU, 0.009s wall-clock]
Done! [0.050s CPU, 0.084s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=3, k_best=500)/transport/p04.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=3, k_best=500)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=3, k_best=500)/transport/p04.txt.sas'"'"''
[t=0.001399s, 10804 KB] reading input...
[t=0.004312s, 11060 KB] done reading input!
[t=0.004438s, 11508 KB] Simplifying 1992 unary operators... done! [1992 unary operators]
[t=0.006125s, 11508 KB] time to simplify: 0.001687s
[t=0.006235s, 11508 KB] Initializing additive heuristic...
[t=0.006323s, 11508 KB] Building successor generator...done!
[t=0.006626s, 11652 KB] peak memory difference for successor generator creation: 144 KB
[t=0.006654s, 11652 KB] time for successor generation creation: 0.000000s
[t=0.006674s, 11652 KB] Variables: 9
[t=0.006694s, 11652 KB] FactPairs: 104
[t=0.006714s, 11652 KB] Bytes per state: 8
[t=0.006736s, 11652 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.006776s, 11652 KB] New best heuristic value for add: 820
[t=0.006828s, 11652 KB] g=0, 1 evaluated, 0 expanded
[t=0.006848s, 11652 KB] Initial heuristic value for add: 820
[t=0.006876s, 11652 KB] pruning method: none
[t=0.006897s, 11652 KB] New best heuristic value for add: 531
[t=0.006979s, 11652 KB] g=34, 3 evaluated, 1 expanded
[t=0.007001s, 11652 KB] New best heuristic value for add: 344
[t=0.007103s, 11652 KB] g=56, 6 evaluated, 5 expanded
[t=0.007126s, 11652 KB] New best heuristic value for add: 336
[t=0.007196s, 11652 KB] g=59, 7 evaluated, 5 expanded
[t=0.007220s, 11652 KB] New best heuristic value for add: 330
[t=0.007455s, 11652 KB] g=60, 17 evaluated, 15 expanded
[t=0.007478s, 11652 KB] New best heuristic value for add: 319
[t=0.007757s, 11652 KB] g=69, 29 evaluated, 15 expanded
[t=0.007778s, 11652 KB] New best heuristic value for add: 308
[t=0.008022s, 11652 KB] g=97, 39 evaluated, 36 expanded
[t=0.008042s, 11652 KB] New best heuristic value for add: 305
[t=0.008142s, 11652 KB] g=93, 42 evaluated, 36 expanded
[t=0.008163s, 11652 KB] New best heuristic value for add: 300
[t=0.008231s, 11652 KB] g=78, 44 evaluated, 36 expanded
[t=0.008251s, 11652 KB] New best heuristic value for add: 297
[t=0.008386s, 11652 KB] g=90, 48 evaluated, 36 expanded
[t=0.008409s, 11652 KB] New best heuristic value for add: 276
[t=0.008622s, 11652 KB] g=103, 56 evaluated, 36 expanded
[t=0.008643s, 11652 KB] New best heuristic value for add: 272
[t=0.009407s, 11652 KB] g=104, 87 evaluated, 85 expanded
[t=0.009428s, 11652 KB] New best heuristic value for add: 265
[t=0.009477s, 11652 KB] g=135, 88 evaluated, 85 expanded
[t=0.011919s, 11652 KB] New best heuristic value for add: 262
[t=0.012031s, 11652 KB] g=136, 199 evaluated, 193 expanded
[t=0.012059s, 11652 KB] New best heuristic value for add: 249
[t=0.012282s, 11652 KB] g=142, 208 evaluated, 193 expanded
[t=0.012311s, 11652 KB] New best heuristic value for add: 244
[t=0.012381s, 11652 KB] g=127, 210 evaluated, 193 expanded
[t=0.012407s, 11652 KB] New best heuristic value for add: 239
[t=0.013228s, 11652 KB] g=140, 246 evaluated, 193 expanded
[t=0.013251s, 11652 KB] New best heuristic value for add: 238
[t=0.018521s, 11652 KB] g=141, 470 evaluated, 467 expanded
[t=0.018548s, 11652 KB] New best heuristic value for add: 215
[t=0.019806s, 11652 KB] g=143, 525 evaluated, 467 expanded
[t=0.029595s, 11888 KB] New best heuristic value for add: 214
[t=0.033564s, 11888 KB] g=144, 1158 evaluated, 967 expanded
[t=0.033599s, 11888 KB] New best heuristic value for add: 207
[t=0.033848s, 11888 KB] g=197, 1170 evaluated, 967 expanded
[t=0.033871s, 11888 KB] New best heuristic value for add: 206
[t=0.035124s, 11888 KB] g=184, 1236 evaluated, 967 expanded
[t=0.035154s, 11888 KB] New best heuristic value for add: 181
[t=0.037100s, 11888 KB] g=144, 1320 evaluated, 967 expanded
[t=0.057125s, 12284 KB] New best heuristic value for add: 180
[t=0.066321s, 12284 KB] g=145, 2572 evaluated, 1467 expanded
[t=0.104326s, 12456 KB] New best heuristic value for add: 173
[t=0.110511s, 12456 KB] g=234, 4708 evaluated, 1967 expanded
[t=0.113575s, 12456 KB] New best heuristic value for add: 169
[t=0.121526s, 12456 KB] g=192, 5268 evaluated, 1967 expanded
[t=0.141839s, 12588 KB] New best heuristic value for add: 168
[t=0.151365s, 12588 KB] g=193, 6704 evaluated, 2467 expanded
[t=0.151392s, 12588 KB] New best heuristic value for add: 166
[t=0.152969s, 12588 KB] g=204, 6792 evaluated, 2467 expanded
[t=0.169767s, 12720 KB] New best heuristic value for add: 154
[t=0.176993s, 12720 KB] g=187, 7953 evaluated, 2467 expanded
[t=0.188487s, 12720 KB] New best heuristic value for add: 135
[t=0.189485s, 12720 KB] g=193, 8514 evaluated, 2467 expanded
[t=0.197750s, 12720 KB] New best heuristic value for add: 134
[t=0.203503s, 12720 KB] g=194, 9201 evaluated, 2967 expanded
[t=0.254505s, 12852 KB] New best heuristic value for add: 133
[t=0.256371s, 12852 KB] g=195, 11873 evaluated, 3467 expanded, 3 reopened
[t=0.311205s, 12988 KB] New best heuristic value for add: 123
[t=0.314941s, 12988 KB] g=221, 14745 evaluated, 3967 expanded, 13 reopened
[t=0.314980s, 12988 KB] New best heuristic value for add: 115
[t=0.318906s, 12988 KB] g=285, 14944 evaluated, 3967 expanded, 13 reopened
[t=0.320204s, 13248 KB] New best heuristic value for add: 108
[t=0.328923s, 13248 KB] g=236, 15402 evaluated, 3967 expanded, 13 reopened
[t=0.376925s, 13248 KB] New best heuristic value for add: 107
[t=0.380408s, 13248 KB] g=237, 17646 evaluated, 4467 expanded, 13 reopened
[t=0.433617s, 13252 KB] New best heuristic value for add: 106
[t=0.440690s, 13252 KB] g=238, 20625 evaluated, 4967 expanded, 13 reopened
[t=0.442836s, 13252 KB] New best heuristic value for add: 101
[t=0.446274s, 13252 KB] g=342, 20921 evaluated, 4967 expanded, 13 reopened
[t=0.499560s, 13384 KB] New best heuristic value for add: 100
[t=0.501204s, 13384 KB] g=303, 23696 evaluated, 5467 expanded, 19 reopened
[t=0.501233s, 13384 KB] New best heuristic value for add: 69
[t=0.501315s, 13384 KB] g=334, 23699 evaluated, 5467 expanded, 19 reopened
[t=0.555968s, 13384 KB] New best heuristic value for add: 68
[t=0.557882s, 13384 KB] g=335, 26546 evaluated, 5967 expanded, 22 reopened
[t=0.603151s, 13520 KB] New best heuristic value for add: 42
[t=0.611045s, 13520 KB] g=361, 29349 evaluated, 6467 expanded, 35 reopened
[t=0.659872s, 14036 KB] New best heuristic value for add: 41
[t=0.664904s, 14036 KB] g=362, 32200 evaluated, 6967 expanded, 65 reopened
[t=0.716586s, 14044 KB] New best heuristic value for add: 33
[t=0.717155s, 14044 KB] g=307, 34887 evaluated, 7467 expanded, 120 reopened
[t=0.763771s, 14044 KB] New best heuristic value for add: 1
[t=0.764312s, 14044 KB] g=339, 37487 evaluated, 7967 expanded, 179 reopened
[t=0.801506s, 14180 KB] New best heuristic value for add: 0
[t=0.807080s, 14180 KB] g=340, 40065 evaluated, 8467 expanded, 230 reopened
[t=0.839286s, 14180 KB] Solution found!
[t=0.841860s, 14180 KB] Actual search time: 0.834963s
drive truck-2 city-loc-6 city-loc-9 (28)
drive truck-2 city-loc-9 city-loc-11 (24)
pick-up truck-2 city-loc-11 package-4 capacity-3 capacity-4 (1)
drive truck-2 city-loc-11 city-loc-9 (24)
drive truck-2 city-loc-9 city-loc-10 (32)
drive truck-2 city-loc-10 city-loc-8 (24)
pick-up truck-2 city-loc-8 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-loc-8 city-loc-10 (24)
pick-up truck-2 city-loc-10 package-3 capacity-1 capacity-2 (1)
drop truck-2 city-loc-10 package-4 capacity-1 capacity-2 (1)
drive truck-2 city-loc-10 city-loc-1 (33)
pick-up truck-2 city-loc-1 package-1 capacity-1 capacity-2 (1)
drop truck-2 city-loc-1 package-2 capacity-1 capacity-2 (1)
drive truck-2 city-loc-1 city-loc-4 (26)
drive truck-2 city-loc-4 city-loc-5 (12)
drop truck-2 city-loc-5 package-3 capacity-2 capacity-3 (1)
drive truck-2 city-loc-5 city-loc-4 (12)
pick-up truck-2 city-loc-4 package-5 capacity-2 capacity-3 (1)
drive truck-2 city-loc-4 city-loc-1 (26)
drop truck-2 city-loc-1 package-5 capacity-2 capacity-3 (1)
drive truck-2 city-loc-1 city-loc-10 (33)
drive truck-2 city-loc-10 city-loc-9 (32)
drop truck-2 city-loc-9 package-1 capacity-3 capacity-4 (1)
[t=0.841892s, 14180 KB] Plan length: 23 step(s).
[t=0.841892s, 14180 KB] Plan cost: 340
[t=0.841892s, 14180 KB] Expanded 8967 state(s).
[t=0.841892s, 14180 KB] Reopened 284 state(s).
[t=0.841892s, 14180 KB] Evaluated 42324 state(s).
[t=0.841892s, 14180 KB] Evaluations: 42324
[t=0.841892s, 14180 KB] Generated 86012 state(s).
[t=0.841892s, 14180 KB] Dead ends: 0 state(s).
[t=0.841892s, 14180 KB] Number of registered states: 42324
[t=0.841892s, 14180 KB] Int hash set load factor: 42324/65536 = 0.645813
[t=0.841892s, 14180 KB] Int hash set resizes: 16
[t=0.841892s, 14180 KB] Search time: 0.835155s
[t=0.841892s, 14180 KB] Total time: 0.841892s
Solution found.
Peak memory: 14180 KB
search exit code: 0

INFO     Planner time: 0.99s
