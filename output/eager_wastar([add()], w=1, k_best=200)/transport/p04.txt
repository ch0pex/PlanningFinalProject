INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p04.pddl --sas-file 'output/eager_wastar([add()], w=1, k_best=200)/transport/p04.txt.sas'
Parsing...
Parsing: [0.010s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.018s wall-clock]
Preparing model... [0.000s CPU, 0.003s wall-clock]
Generated 27 rules.
Computing model... [0.010s CPU, 0.015s wall-clock]
1293 relevant atoms
1246 auxiliary atoms
2539 final queue length
4436 total queue pushes
Completing instantiation... [0.040s CPU, 0.039s wall-clock]
Instantiating: [0.050s CPU, 0.079s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.002s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.004s wall-clock]
Translating task: [0.030s CPU, 0.042s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
9 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
9 of 9 variables necessary.
0 of 9 mutex groups necessary.
1032 of 1032 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 9
Translator derived variables: 0
Translator facts: 104
Translator goal facts: 5
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 1032
Translator axioms: 0
Translator task size: 6094
Translator peak memory: 35348 KB
Writing output... [0.010s CPU, 0.018s wall-clock]
Done! [0.140s CPU, 0.191s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=1, k_best=200)/transport/p04.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=1, k_best=200)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=1, k_best=200)/transport/p04.txt.sas'"'"''
[t=0.002804s, 10804 KB] reading input...
[t=0.008140s, 11060 KB] done reading input!
[t=0.010912s, 11508 KB] Simplifying 1992 unary operators... done! [1992 unary operators]
[t=0.012809s, 11508 KB] time to simplify: 0.001897s
[t=0.012968s, 11508 KB] Initializing additive heuristic...
[t=0.013118s, 11508 KB] Building successor generator...done!
[t=0.013660s, 11652 KB] peak memory difference for successor generator creation: 144 KB
[t=0.013715s, 11652 KB] time for successor generation creation: 0.000000s
[t=0.013751s, 11652 KB] Variables: 9
[t=0.013791s, 11652 KB] FactPairs: 104
[t=0.013824s, 11652 KB] Bytes per state: 8
[t=0.013869s, 11652 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.013929s, 11652 KB] New best heuristic value for add: 820
[t=0.014018s, 11652 KB] g=0, 1 evaluated, 0 expanded
[t=0.014051s, 11652 KB] Initial heuristic value for add: 820
[t=0.014081s, 11652 KB] pruning method: none
[t=0.014121s, 11652 KB] New best heuristic value for add: 531
[t=0.014220s, 11652 KB] g=34, 3 evaluated, 1 expanded
[t=0.014249s, 11652 KB] New best heuristic value for add: 344
[t=0.014382s, 11652 KB] g=56, 6 evaluated, 5 expanded
[t=0.014434s, 11652 KB] New best heuristic value for add: 336
[t=0.014525s, 11652 KB] g=59, 7 evaluated, 5 expanded
[t=0.014554s, 11652 KB] New best heuristic value for add: 330
[t=0.015220s, 11652 KB] g=60, 17 evaluated, 15 expanded
[t=0.015252s, 11652 KB] New best heuristic value for add: 319
[t=0.015685s, 11652 KB] g=69, 29 evaluated, 15 expanded
[t=0.015728s, 11652 KB] New best heuristic value for add: 308
[t=0.016211s, 11652 KB] g=97, 39 evaluated, 36 expanded
[t=0.016261s, 11652 KB] New best heuristic value for add: 305
[t=0.016437s, 11652 KB] g=93, 42 evaluated, 36 expanded
[t=0.016484s, 11652 KB] New best heuristic value for add: 300
[t=0.016603s, 11652 KB] g=78, 44 evaluated, 36 expanded
[t=0.016637s, 11652 KB] New best heuristic value for add: 297
[t=0.016828s, 11652 KB] g=90, 48 evaluated, 36 expanded
[t=0.016888s, 11652 KB] New best heuristic value for add: 276
[t=0.017236s, 11652 KB] g=103, 56 evaluated, 36 expanded
[t=0.017276s, 11652 KB] New best heuristic value for add: 272
[t=0.018758s, 11652 KB] g=104, 93 evaluated, 85 expanded
[t=0.018808s, 11652 KB] New best heuristic value for add: 265
[t=0.018901s, 11652 KB] g=135, 94 evaluated, 85 expanded
[t=0.018943s, 11652 KB] New best heuristic value for add: 262
[t=0.022564s, 11652 KB] g=136, 199 evaluated, 193 expanded
[t=0.022617s, 11652 KB] New best heuristic value for add: 249
[t=0.022909s, 11652 KB] g=142, 207 evaluated, 193 expanded
[t=0.022946s, 11652 KB] New best heuristic value for add: 244
[t=0.023045s, 11652 KB] g=127, 209 evaluated, 193 expanded
[t=0.023073s, 11652 KB] New best heuristic value for add: 239
[t=0.025806s, 11652 KB] g=140, 289 evaluated, 193 expanded
[t=0.030738s, 11652 KB] New best heuristic value for add: 238
[t=0.036443s, 11652 KB] g=141, 473 evaluated, 393 expanded
[t=0.036485s, 11652 KB] New best heuristic value for add: 215
[t=0.036669s, 11652 KB] g=143, 477 evaluated, 393 expanded
[t=0.057463s, 11752 KB] New best heuristic value for add: 214
[t=0.060728s, 11752 KB] g=144, 1067 evaluated, 593 expanded
[t=0.060763s, 11752 KB] New best heuristic value for add: 181
[t=0.061589s, 11752 KB] g=144, 1093 evaluated, 593 expanded
[t=0.093816s, 11752 KB] New best heuristic value for add: 180
[t=0.097402s, 11752 KB] g=145, 1897 evaluated, 793 expanded
[t=0.166815s, 11884 KB] New best heuristic value for add: 166
[t=0.171795s, 11884 KB] g=204, 4050 evaluated, 1193 expanded
[t=0.184633s, 11884 KB] New best heuristic value for add: 154
[t=0.187401s, 11884 KB] g=187, 4457 evaluated, 1193 expanded
[t=0.202413s, 12020 KB] New best heuristic value for add: 153
[t=0.209174s, 12020 KB] g=188, 5090 evaluated, 1393 expanded
[t=0.247775s, 12020 KB] New best heuristic value for add: 152
[t=0.247957s, 12020 KB] g=189, 6190 evaluated, 1593 expanded
[t=0.247995s, 12020 KB] New best heuristic value for add: 143
[t=0.254341s, 12020 KB] g=247, 6427 evaluated, 1593 expanded
[t=0.256120s, 12020 KB] New best heuristic value for add: 136
[t=0.260183s, 12020 KB] g=258, 6566 evaluated, 1593 expanded
[t=0.292937s, 12020 KB] New best heuristic value for add: 133
[t=0.296396s, 12020 KB] g=269, 7566 evaluated, 1793 expanded
[t=0.301657s, 12144 KB] New best heuristic value for add: 127
[t=0.307075s, 12144 KB] g=245, 7849 evaluated, 1793 expanded
[t=0.307117s, 12144 KB] New best heuristic value for add: 115
[t=0.308174s, 12144 KB] g=285, 7883 evaluated, 1793 expanded
[t=0.337932s, 12144 KB] New best heuristic value for add: 109
[t=0.342317s, 12144 KB] g=285, 8848 evaluated, 1993 expanded
[t=0.374622s, 12144 KB] New best heuristic value for add: 108
[t=0.383136s, 12144 KB] g=286, 9971 evaluated, 2193 expanded
[t=0.420384s, 12144 KB] New best heuristic value for add: 107
[t=0.420634s, 12144 KB] g=287, 11045 evaluated, 2393 expanded, 1 reopened
[t=0.420672s, 12144 KB] New best heuristic value for add: 102
[t=0.427122s, 12144 KB] g=294, 11202 evaluated, 2393 expanded, 1 reopened
[t=0.456776s, 12280 KB] New best heuristic value for add: 91
[t=0.457190s, 12280 KB] g=281, 12011 evaluated, 2593 expanded, 1 reopened
[t=0.464917s, 12280 KB] New best heuristic value for add: 70
[t=0.465349s, 12280 KB] g=326, 12239 evaluated, 2593 expanded, 1 reopened
[t=0.491977s, 12280 KB] New best heuristic value for add: 59
[t=0.498573s, 12280 KB] g=313, 13239 evaluated, 2793 expanded, 1 reopened
[t=0.537809s, 12280 KB] New best heuristic value for add: 58
[t=0.539891s, 12280 KB] g=314, 14480 evaluated, 2993 expanded, 1 reopened
[t=0.539929s, 12280 KB] New best heuristic value for add: 49
[t=0.545548s, 12280 KB] g=353, 14676 evaluated, 2993 expanded, 1 reopened
[t=0.583331s, 12540 KB] New best heuristic value for add: 48
[t=0.583745s, 12540 KB] g=348, 15813 evaluated, 3193 expanded, 2 reopened
[t=0.619940s, 12544 KB] New best heuristic value for add: 34
[t=0.622396s, 12544 KB] g=362, 16950 evaluated, 3393 expanded, 3 reopened
[t=0.665782s, 12544 KB] New best heuristic value for add: 33
[t=0.668482s, 12544 KB] g=363, 18183 evaluated, 3593 expanded, 3 reopened
[t=0.668545s, 12544 KB] New best heuristic value for add: 2
[t=0.668768s, 12544 KB] g=394, 18193 evaluated, 3593 expanded, 3 reopened
[t=0.708888s, 12544 KB] New best heuristic value for add: 1
[t=0.709035s, 12544 KB] g=395, 19318 evaluated, 3793 expanded, 3 reopened
[t=0.745491s, 12544 KB] New best heuristic value for add: 0
[t=0.749172s, 12544 KB] g=396, 20553 evaluated, 3993 expanded, 4 reopened
[t=0.782017s, 12680 KB] Solution found!
[t=0.785040s, 12680 KB] Actual search time: 0.770919s
drive truck-2 city-loc-6 city-loc-3 (34)
drive truck-2 city-loc-3 city-loc-10 (25)
pick-up truck-2 city-loc-10 package-3 capacity-3 capacity-4 (1)
drive truck-2 city-loc-10 city-loc-8 (24)
pick-up truck-2 city-loc-8 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-loc-8 city-loc-7 (30)
drive truck-1 city-loc-2 city-loc-6 (19)
drive truck-1 city-loc-6 city-loc-9 (28)
drive truck-2 city-loc-7 city-loc-4 (31)
pick-up truck-2 city-loc-4 package-5 capacity-1 capacity-2 (1)
drive truck-2 city-loc-4 city-loc-5 (12)
drop truck-2 city-loc-5 package-3 capacity-1 capacity-2 (1)
drive truck-2 city-loc-5 city-loc-4 (12)
drive truck-2 city-loc-4 city-loc-1 (26)
pick-up truck-2 city-loc-1 package-1 capacity-1 capacity-2 (1)
drop truck-2 city-loc-1 package-2 capacity-1 capacity-2 (1)
drop truck-2 city-loc-1 package-5 capacity-2 capacity-3 (1)
drive truck-2 city-loc-1 city-loc-10 (33)
drive truck-2 city-loc-10 city-loc-9 (32)
drop truck-2 city-loc-9 package-1 capacity-3 capacity-4 (1)
drive truck-2 city-loc-9 city-loc-11 (24)
pick-up truck-2 city-loc-11 package-4 capacity-3 capacity-4 (1)
drive truck-2 city-loc-11 city-loc-9 (24)
drive truck-2 city-loc-9 city-loc-10 (32)
drop truck-2 city-loc-10 package-4 capacity-3 capacity-4 (1)
[t=0.785084s, 12680 KB] Plan length: 25 step(s).
[t=0.785084s, 12680 KB] Plan cost: 396
[t=0.785084s, 12680 KB] Expanded 4193 state(s).
[t=0.785084s, 12680 KB] Reopened 13 state(s).
[t=0.785084s, 12680 KB] Evaluated 21569 state(s).
[t=0.785084s, 12680 KB] Evaluations: 21569
[t=0.785084s, 12680 KB] Generated 39228 state(s).
[t=0.785084s, 12680 KB] Dead ends: 0 state(s).
[t=0.785084s, 12680 KB] Number of registered states: 21569
[t=0.785084s, 12680 KB] Int hash set load factor: 21569/32768 = 0.658234
[t=0.785084s, 12680 KB] Int hash set resizes: 15
[t=0.785084s, 12680 KB] Search time: 0.771215s
[t=0.785084s, 12680 KB] Total time: 0.785084s
Solution found.
Peak memory: 12680 KB
search exit code: 0

INFO     Planner time: 1.14s
