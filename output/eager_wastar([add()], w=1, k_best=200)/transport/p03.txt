INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p03.pddl --sas-file 'output/eager_wastar([add()], w=1, k_best=200)/transport/p03.txt.sas'
Parsing...
Parsing: [0.000s CPU, 0.010s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.013s wall-clock]
Preparing model... [0.000s CPU, 0.003s wall-clock]
Generated 27 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
824 relevant atoms
832 auxiliary atoms
1656 final queue length
2796 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.049s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.030s CPU, 0.028s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.016s wall-clock]
Reordering and filtering variables...
8 of 8 variables necessary.
0 of 8 mutex groups necessary.
628 of 628 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.003s wall-clock]
Translator variables: 8
Translator derived variables: 0
Translator facts: 72
Translator goal facts: 4
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 628
Translator axioms: 0
Translator task size: 3696
Translator peak memory: 33160 KB
Writing output... [0.010s CPU, 0.016s wall-clock]
Done! [0.100s CPU, 0.134s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=1, k_best=200)/transport/p03.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=1, k_best=200)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=1, k_best=200)/transport/p03.txt.sas'"'"''
[t=0.003946s, 10804 KB] reading input...
[t=0.010152s, 10928 KB] done reading input!
[t=0.015246s, 11324 KB] Simplifying 1204 unary operators... done! [1204 unary operators]
[t=0.016812s, 11324 KB] time to simplify: 0.001567s
[t=0.016970s, 11324 KB] Initializing additive heuristic...
[t=0.017070s, 11324 KB] Building successor generator...done!
[t=0.017455s, 11324 KB] peak memory difference for successor generator creation: 0 KB
[t=0.017515s, 11324 KB] time for successor generation creation: 0.000000s
[t=0.017559s, 11324 KB] Variables: 8
[t=0.017601s, 11324 KB] FactPairs: 72
[t=0.017638s, 11324 KB] Bytes per state: 4
[t=0.017692s, 11324 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.017779s, 11324 KB] New best heuristic value for add: 299
[t=0.017869s, 11324 KB] g=0, 1 evaluated, 0 expanded
[t=0.017912s, 11324 KB] Initial heuristic value for add: 299
[t=0.017952s, 11324 KB] pruning method: none
[t=0.017985s, 11324 KB] New best heuristic value for add: 260
[t=0.018132s, 11324 KB] g=34, 5 evaluated, 1 expanded
[t=0.018171s, 11324 KB] New best heuristic value for add: 232
[t=0.018352s, 11324 KB] g=62, 11 evaluated, 9 expanded
[t=0.018390s, 11324 KB] New best heuristic value for add: 225
[t=0.018668s, 11324 KB] g=35, 24 evaluated, 9 expanded
[t=0.018705s, 11324 KB] New best heuristic value for add: 197
[t=0.019092s, 11324 KB] g=63, 41 evaluated, 39 expanded
[t=0.019132s, 11324 KB] New best heuristic value for add: 191
[t=0.019719s, 11324 KB] g=36, 74 evaluated, 39 expanded
[t=0.019766s, 11324 KB] New best heuristic value for add: 163
[t=0.020956s, 11324 KB] g=64, 131 evaluated, 129 expanded
[t=0.022366s, 11324 KB] New best heuristic value for add: 161
[t=0.023668s, 11324 KB] g=64, 281 evaluated, 129 expanded
[t=0.023742s, 11324 KB] New best heuristic value for add: 140
[t=0.025827s, 11324 KB] g=80, 381 evaluated, 329 expanded
[t=0.025865s, 11324 KB] New best heuristic value for add: 138
[t=0.025979s, 11324 KB] g=86, 386 evaluated, 329 expanded
[t=0.039327s, 11456 KB] New best heuristic value for add: 137
[t=0.039840s, 11456 KB] g=81, 968 evaluated, 529 expanded
[t=0.039877s, 11456 KB] New best heuristic value for add: 132
[t=0.040391s, 11456 KB] g=93, 997 evaluated, 529 expanded
[t=0.047940s, 11456 KB] New best heuristic value for add: 109
[t=0.057067s, 11456 KB] g=109, 1672 evaluated, 729 expanded
[t=0.066154s, 11592 KB] New best heuristic value for add: 108
[t=0.075446s, 11592 KB] g=110, 2462 evaluated, 929 expanded
[t=0.084350s, 11592 KB] New best heuristic value for add: 107
[t=0.090632s, 11592 KB] g=141, 3119 evaluated, 929 expanded
[t=0.093414s, 11592 KB] New best heuristic value for add: 93
[t=0.094317s, 11592 KB] g=131, 3295 evaluated, 1129 expanded
[t=0.094839s, 11592 KB] New best heuristic value for add: 92
[t=0.099584s, 11592 KB] g=156, 3462 evaluated, 1129 expanded
[t=0.109877s, 11592 KB] New best heuristic value for add: 79
[t=0.114614s, 11592 KB] g=168, 4176 evaluated, 1329 expanded
[t=0.114707s, 11592 KB] New best heuristic value for add: 78
[t=0.115852s, 11592 KB] g=170, 4206 evaluated, 1329 expanded
[t=0.117459s, 11592 KB] New best heuristic value for add: 77
[t=0.126708s, 11592 KB] g=169, 4823 evaluated, 1529 expanded
[t=0.126749s, 11592 KB] New best heuristic value for add: 63
[t=0.127619s, 11592 KB] g=185, 4863 evaluated, 1529 expanded
[t=0.135391s, 11592 KB] New best heuristic value for add: 49
[t=0.139239s, 11592 KB] g=197, 5480 evaluated, 1729 expanded
[t=0.139315s, 11592 KB] New best heuristic value for add: 47
[t=0.140403s, 11592 KB] g=203, 5550 evaluated, 1729 expanded
[t=0.152223s, 11716 KB] New best heuristic value for add: 31
[t=0.157128s, 11716 KB] g=219, 6239 evaluated, 1929 expanded
[t=0.170726s, 11716 KB] New best heuristic value for add: 30
[t=0.174828s, 11716 KB] g=220, 6974 evaluated, 2129 expanded
[t=0.174868s, 11716 KB] New best heuristic value for add: 18
[t=0.175026s, 11716 KB] g=232, 6983 evaluated, 2129 expanded
[t=0.188876s, 11848 KB] New best heuristic value for add: 2
[t=0.190208s, 11848 KB] g=248, 7759 evaluated, 2329 expanded, 2 reopened
[t=0.197440s, 11848 KB] New best heuristic value for add: 1
[t=0.206358s, 11848 KB] g=249, 8493 evaluated, 2529 expanded, 2 reopened
[t=0.215867s, 11848 KB] New best heuristic value for add: 0
[t=0.222640s, 11848 KB] g=250, 9215 evaluated, 2729 expanded, 5 reopened
[t=0.232763s, 11848 KB] Solution found!
[t=0.236706s, 11848 KB] Actual search time: 0.218721s
drive truck-2 city-loc-9 city-loc-6 (28)
pick-up truck-2 city-loc-6 package-3 capacity-3 capacity-4 (1)
pick-up truck-2 city-loc-6 package-4 capacity-2 capacity-3 (1)
drive truck-2 city-loc-6 city-loc-3 (34)
drive truck-2 city-loc-3 city-loc-1 (22)
drop truck-2 city-loc-1 package-3 capacity-2 capacity-3 (1)
drive truck-2 city-loc-1 city-loc-5 (37)
pick-up truck-2 city-loc-5 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-loc-5 city-loc-4 (12)
drive truck-2 city-loc-4 city-loc-8 (35)
drop truck-2 city-loc-8 package-4 capacity-2 capacity-3 (1)
drive truck-2 city-loc-8 city-loc-7 (30)
drive truck-2 city-loc-7 city-loc-3 (16)
drop truck-2 city-loc-3 package-2 capacity-3 capacity-4 (1)
pick-up truck-1 city-loc-6 package-1 capacity-1 capacity-2 (1)
drive truck-1 city-loc-6 city-loc-9 (28)
drop truck-1 city-loc-9 package-1 capacity-1 capacity-2 (1)
[t=0.236760s, 11848 KB] Plan length: 17 step(s).
[t=0.236760s, 11848 KB] Plan cost: 250
[t=0.236760s, 11848 KB] Expanded 2929 state(s).
[t=0.236760s, 11848 KB] Reopened 20 state(s).
[t=0.236760s, 11848 KB] Evaluated 9927 state(s).
[t=0.236760s, 11848 KB] Evaluations: 9927
[t=0.236760s, 11848 KB] Generated 22205 state(s).
[t=0.236760s, 11848 KB] Dead ends: 0 state(s).
[t=0.236760s, 11848 KB] Number of registered states: 9927
[t=0.236760s, 11848 KB] Int hash set load factor: 9927/16384 = 0.605896
[t=0.236760s, 11848 KB] Int hash set resizes: 14
[t=0.236760s, 11848 KB] Search time: 0.219068s
[t=0.236760s, 11848 KB] Total time: 0.236760s
Solution found.
Peak memory: 11848 KB
search exit code: 0

INFO     Planner time: 0.51s
