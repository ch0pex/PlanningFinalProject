INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p03.pddl --sas-file 'output/eager_wastar([add()], w=10, k_best=200)/transport/p03.txt.sas'
Parsing...
Parsing: [0.000s CPU, 0.010s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.020s wall-clock]
Preparing model... [0.000s CPU, 0.003s wall-clock]
Generated 27 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
824 relevant atoms
832 auxiliary atoms
1656 final queue length
2796 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.030s CPU, 0.057s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.003s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.014s wall-clock]
Reordering and filtering variables...
8 of 8 variables necessary.
0 of 8 mutex groups necessary.
628 of 628 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.004s wall-clock]
Translator variables: 8
Translator derived variables: 0
Translator facts: 72
Translator goal facts: 4
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 628
Translator axioms: 0
Translator task size: 3696
Translator peak memory: 33160 KB
Writing output... [0.000s CPU, 0.015s wall-clock]
Done! [0.080s CPU, 0.142s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=10, k_best=200)/transport/p03.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=10, k_best=200)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=10, k_best=200)/transport/p03.txt.sas'"'"''
[t=0.006467s, 10804 KB] reading input...
[t=0.017530s, 10928 KB] done reading input!
[t=0.023386s, 11324 KB] Simplifying 1204 unary operators... done! [1204 unary operators]
[t=0.025139s, 11324 KB] time to simplify: 0.001753s
[t=0.025277s, 11324 KB] Initializing additive heuristic...
[t=0.025372s, 11324 KB] Building successor generator...done!
[t=0.025728s, 11324 KB] peak memory difference for successor generator creation: 0 KB
[t=0.025793s, 11324 KB] time for successor generation creation: 0.000000s
[t=0.025823s, 11324 KB] Variables: 8
[t=0.025856s, 11324 KB] FactPairs: 72
[t=0.025882s, 11324 KB] Bytes per state: 4
[t=0.025915s, 11324 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.025968s, 11324 KB] New best heuristic value for add: 299
[t=0.026045s, 11324 KB] g=0, 1 evaluated, 0 expanded
[t=0.026080s, 11324 KB] Initial heuristic value for add: 299
[t=0.026197s, 11324 KB] pruning method: none
[t=0.026231s, 11324 KB] New best heuristic value for add: 260
[t=0.026370s, 11324 KB] g=34, 5 evaluated, 1 expanded
[t=0.026432s, 11324 KB] New best heuristic value for add: 232
[t=0.026630s, 11324 KB] g=62, 11 evaluated, 9 expanded
[t=0.026667s, 11324 KB] New best heuristic value for add: 225
[t=0.026957s, 11324 KB] g=35, 24 evaluated, 9 expanded
[t=0.026999s, 11324 KB] New best heuristic value for add: 197
[t=0.027392s, 11324 KB] g=63, 41 evaluated, 39 expanded
[t=0.027430s, 11324 KB] New best heuristic value for add: 191
[t=0.028264s, 11324 KB] g=36, 86 evaluated, 39 expanded
[t=0.028360s, 11324 KB] New best heuristic value for add: 163
[t=0.029372s, 11324 KB] g=64, 131 evaluated, 129 expanded
[t=0.029413s, 11324 KB] New best heuristic value for add: 161
[t=0.032737s, 11324 KB] g=64, 313 evaluated, 129 expanded
[t=0.032788s, 11324 KB] New best heuristic value for add: 138
[t=0.034452s, 11324 KB] g=86, 380 evaluated, 329 expanded
[t=0.041148s, 11456 KB] New best heuristic value for add: 137
[t=0.048991s, 11456 KB] g=81, 953 evaluated, 529 expanded
[t=0.049097s, 11456 KB] New best heuristic value for add: 132
[t=0.049569s, 11456 KB] g=93, 976 evaluated, 529 expanded
[t=0.059052s, 11720 KB] New best heuristic value for add: 109
[t=0.066275s, 11720 KB] g=115, 1647 evaluated, 729 expanded
[t=0.077513s, 11852 KB] New best heuristic value for add: 108
[t=0.085742s, 11852 KB] g=110, 2446 evaluated, 929 expanded
[t=0.095929s, 11984 KB] New best heuristic value for add: 107
[t=0.099761s, 11984 KB] g=141, 2995 evaluated, 929 expanded
[t=0.105114s, 12116 KB] New best heuristic value for add: 100
[t=0.105449s, 12116 KB] g=161, 3121 evaluated, 929 expanded
[t=0.105615s, 12116 KB] New best heuristic value for add: 94
[t=0.109134s, 12116 KB] g=176, 3239 evaluated, 1129 expanded
[t=0.109185s, 12116 KB] New best heuristic value for add: 93
[t=0.109473s, 12116 KB] g=131, 3256 evaluated, 1129 expanded
[t=0.109509s, 12116 KB] New best heuristic value for add: 92
[t=0.110113s, 12116 KB] g=156, 3297 evaluated, 1129 expanded
[t=0.122238s, 12308 KB] New best heuristic value for add: 91
[t=0.127464s, 12308 KB] g=157, 4064 evaluated, 1329 expanded
[t=0.127538s, 12308 KB] New best heuristic value for add: 78
[t=0.127916s, 12308 KB] g=184, 4079 evaluated, 1329 expanded
[t=0.127949s, 12308 KB] New best heuristic value for add: 71
[t=0.128229s, 12308 KB] g=190, 4092 evaluated, 1329 expanded
[t=0.140109s, 12440 KB] New best heuristic value for add: 65
[t=0.144864s, 12440 KB] g=205, 4868 evaluated, 1529 expanded
[t=0.144902s, 12440 KB] New best heuristic value for add: 63
[t=0.145168s, 12440 KB] g=185, 4879 evaluated, 1529 expanded
[t=0.157531s, 12572 KB] New best heuristic value for add: 62
[t=0.160636s, 12572 KB] g=186, 5665 evaluated, 1729 expanded
[t=0.160676s, 12572 KB] New best heuristic value for add: 54
[t=0.160782s, 12572 KB] g=217, 5668 evaluated, 1729 expanded
[t=0.160817s, 12572 KB] New best heuristic value for add: 49
[t=0.161000s, 12572 KB] g=213, 5680 evaluated, 1729 expanded
[t=0.161208s, 12572 KB] New best heuristic value for add: 48
[t=0.161683s, 12572 KB] g=203, 5710 evaluated, 1729 expanded
[t=0.161725s, 12572 KB] New best heuristic value for add: 47
[t=0.162045s, 12572 KB] g=203, 5731 evaluated, 1729 expanded
[t=0.174233s, 12704 KB] New best heuristic value for add: 31
[t=0.180583s, 12704 KB] g=219, 6483 evaluated, 1929 expanded
[t=0.192555s, 12840 KB] New best heuristic value for add: 30
[t=0.198299s, 12840 KB] g=220, 7266 evaluated, 2129 expanded, 2 reopened
[t=0.198344s, 12840 KB] New best heuristic value for add: 25
[t=0.198613s, 12840 KB] g=246, 7283 evaluated, 2129 expanded, 2 reopened
[t=0.198644s, 12840 KB] New best heuristic value for add: 18
[t=0.199297s, 12840 KB] g=232, 7292 evaluated, 2129 expanded, 2 reopened
[t=0.209944s, 12972 KB] New best heuristic value for add: 2
[t=0.216578s, 12972 KB] g=248, 8021 evaluated, 2329 expanded, 7 reopened
[t=0.228260s, 13108 KB] New best heuristic value for add: 1
[t=0.230168s, 13108 KB] g=249, 8705 evaluated, 2529 expanded, 8 reopened
[t=0.237069s, 13108 KB] New best heuristic value for add: 0
[t=0.239643s, 13108 KB] g=250, 9301 evaluated, 2729 expanded, 10 reopened
[t=0.246222s, 13108 KB] Solution found!
[t=0.251063s, 13108 KB] Actual search time: 0.224832s
drive truck-2 city-loc-9 city-loc-6 (28)
pick-up truck-2 city-loc-6 package-3 capacity-3 capacity-4 (1)
pick-up truck-2 city-loc-6 package-4 capacity-2 capacity-3 (1)
drive truck-2 city-loc-6 city-loc-3 (34)
drive truck-2 city-loc-3 city-loc-1 (22)
drop truck-2 city-loc-1 package-3 capacity-2 capacity-3 (1)
drive truck-2 city-loc-1 city-loc-5 (37)
pick-up truck-2 city-loc-5 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-loc-5 city-loc-4 (12)
drive truck-2 city-loc-4 city-loc-8 (35)
drop truck-2 city-loc-8 package-4 capacity-2 capacity-3 (1)
drive truck-2 city-loc-8 city-loc-7 (30)
pick-up truck-1 city-loc-6 package-1 capacity-1 capacity-2 (1)
drive truck-1 city-loc-6 city-loc-9 (28)
drive truck-2 city-loc-7 city-loc-3 (16)
drop truck-2 city-loc-3 package-2 capacity-3 capacity-4 (1)
drop truck-1 city-loc-9 package-1 capacity-1 capacity-2 (1)
[t=0.251107s, 13108 KB] Plan length: 17 step(s).
[t=0.251107s, 13108 KB] Plan cost: 250
[t=0.251107s, 13108 KB] Expanded 2929 state(s).
[t=0.251107s, 13108 KB] Reopened 10 state(s).
[t=0.251107s, 13108 KB] Evaluated 9894 state(s).
[t=0.251107s, 13108 KB] Evaluations: 9894
[t=0.251107s, 13108 KB] Generated 22440 state(s).
[t=0.251107s, 13108 KB] Dead ends: 0 state(s).
[t=0.251107s, 13108 KB] Number of registered states: 9894
[t=0.251107s, 13108 KB] Int hash set load factor: 9894/16384 = 0.603882
[t=0.251107s, 13108 KB] Int hash set resizes: 14
[t=0.251107s, 13108 KB] Search time: 0.225192s
[t=0.251107s, 13108 KB] Total time: 0.251107s
Solution found.
Peak memory: 13108 KB
search exit code: 0

INFO     Planner time: 0.57s
