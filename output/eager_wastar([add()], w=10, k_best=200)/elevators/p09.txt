INFO     planner time limit: 1800s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py elevators/domain.pddl elevators/p09.pddl --sas-file 'output/eager_wastar([add()], w=10, k_best=200)/elevators/p09.txt.sas'
Parsing...
Parsing: [0.000s CPU, 0.006s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.013s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 50 rules.
Computing model... [0.000s CPU, 0.005s wall-clock]
817 relevant atoms
795 auxiliary atoms
1612 final queue length
2556 total queue pushes
Completing instantiation... [0.010s CPU, 0.011s wall-clock]
Instantiating: [0.020s CPU, 0.032s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.009s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
13 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.004s wall-clock]
Reordering and filtering variables...
13 of 13 variables necessary.
0 of 13 mutex groups necessary.
550 of 550 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 13
Translator derived variables: 0
Translator facts: 109
Translator goal facts: 7
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 550
Translator axioms: 0
Translator task size: 3249
Translator peak memory: 33300 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.040s CPU, 0.066s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=10, k_best=200)/elevators/p09.txt.sas'
INFO     search time limit: 1799s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=10, k_best=200)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=10, k_best=200)/elevators/p09.txt.sas'"'"''
[t=0.001597s, 10804 KB] reading input...
[t=0.003011s, 10928 KB] done reading input!
[t=0.003213s, 11324 KB] Simplifying 1040 unary operators... done! [1040 unary operators]
[t=0.004441s, 11324 KB] time to simplify: 0.001228s
[t=0.004518s, 11324 KB] Initializing additive heuristic...
[t=0.004574s, 11324 KB] Building successor generator...done!
[t=0.004759s, 11324 KB] peak memory difference for successor generator creation: 0 KB
[t=0.004788s, 11324 KB] time for successor generation creation: 0.000000s
[t=0.004809s, 11324 KB] Variables: 13
[t=0.004829s, 11324 KB] FactPairs: 109
[t=0.004849s, 11324 KB] Bytes per state: 8
[t=0.004869s, 11324 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.004899s, 11324 KB] New best heuristic value for add: 168
[t=0.004943s, 11324 KB] g=0, 1 evaluated, 0 expanded
[t=0.004964s, 11324 KB] Initial heuristic value for add: 168
[t=0.004987s, 11324 KB] pruning method: none
[t=0.005007s, 11324 KB] New best heuristic value for add: 147
[t=0.005059s, 11324 KB] g=7, 3 evaluated, 1 expanded
[t=0.005079s, 11324 KB] New best heuristic value for add: 140
[t=0.005124s, 11324 KB] g=9, 5 evaluated, 1 expanded
[t=0.005144s, 11324 KB] New best heuristic value for add: 135
[t=0.005285s, 11324 KB] g=15, 16 evaluated, 14 expanded
[t=0.005305s, 11324 KB] New best heuristic value for add: 134
[t=0.005350s, 11324 KB] g=16, 18 evaluated, 14 expanded
[t=0.005370s, 11324 KB] New best heuristic value for add: 124
[t=0.005441s, 11324 KB] g=16, 23 evaluated, 14 expanded
[t=0.005460s, 11324 KB] New best heuristic value for add: 95
[t=0.006008s, 11324 KB] g=8, 75 evaluated, 14 expanded
[t=0.006033s, 11324 KB] New best heuristic value for add: 94
[t=0.006261s, 11324 KB] g=15, 93 evaluated, 85 expanded
[t=0.006281s, 11324 KB] New best heuristic value for add: 93
[t=0.008992s, 11324 KB] g=22, 364 evaluated, 285 expanded
[t=0.015023s, 11456 KB] New best heuristic value for add: 89
[t=0.015512s, 11456 KB] g=13, 981 evaluated, 285 expanded
[t=0.015537s, 11456 KB] New best heuristic value for add: 86
[t=0.016280s, 11456 KB] g=15, 1054 evaluated, 285 expanded
[t=0.016306s, 11456 KB] New best heuristic value for add: 85
[t=0.017309s, 11456 KB] g=15, 1153 evaluated, 285 expanded
[t=0.017331s, 11456 KB] New best heuristic value for add: 84
[t=0.018503s, 11456 KB] g=22, 1266 evaluated, 485 expanded
[t=0.019212s, 11456 KB] New best heuristic value for add: 81
[t=0.019465s, 11456 KB] g=28, 1361 evaluated, 485 expanded
[t=0.019487s, 11456 KB] New best heuristic value for add: 78
[t=0.020997s, 11456 KB] g=40, 1520 evaluated, 485 expanded, 6 reopened
[t=0.028444s, 11720 KB] New best heuristic value for add: 77
[t=0.037297s, 11720 KB] g=47, 3194 evaluated, 685 expanded, 43 reopened
[t=0.037871s, 11720 KB] New best heuristic value for add: 76
[t=0.038871s, 11720 KB] g=40, 3317 evaluated, 685 expanded, 43 reopened
[t=0.038898s, 11852 KB] New best heuristic value for add: 75
[t=0.043959s, 11852 KB] g=47, 3827 evaluated, 885 expanded, 43 reopened
[t=0.043990s, 11852 KB] New best heuristic value for add: 67
[t=0.044048s, 11852 KB] g=49, 3829 evaluated, 885 expanded, 43 reopened
[t=0.065811s, 11984 KB] New best heuristic value for add: 65
[t=0.067171s, 11984 KB] g=35, 6117 evaluated, 1085 expanded, 74 reopened
[t=0.094540s, 12248 KB] New best heuristic value for add: 64
[t=0.095334s, 12248 KB] g=35, 8369 evaluated, 1285 expanded, 101 reopened
[t=0.095366s, 12248 KB] New best heuristic value for add: 63
[t=0.100553s, 12248 KB] g=53, 8920 evaluated, 1285 expanded, 104 reopened
[t=0.113312s, 12248 KB] New best heuristic value for add: 60
[t=0.114230s, 12248 KB] g=50, 9915 evaluated, 1485 expanded, 107 reopened
[t=0.114280s, 12248 KB] New best heuristic value for add: 59
[t=0.114797s, 12248 KB] g=56, 9944 evaluated, 1485 expanded, 107 reopened
[t=0.114834s, 12248 KB] New best heuristic value for add: 55
[t=0.115772s, 12248 KB] g=60, 10041 evaluated, 1485 expanded, 107 reopened
[t=0.131654s, 12384 KB] New best heuristic value for add: 54
[t=0.138216s, 12384 KB] g=62, 12355 evaluated, 1685 expanded, 123 reopened
[t=0.169916s, 12520 KB] New best heuristic value for add: 52
[t=0.172508s, 12520 KB] g=61, 15016 evaluated, 1885 expanded, 123 reopened
[t=0.172540s, 12780 KB] New best heuristic value for add: 47
[t=0.176338s, 12780 KB] g=75, 15193 evaluated, 1885 expanded, 123 reopened
[t=0.178943s, 12780 KB] New best heuristic value for add: 46
[t=0.184811s, 12780 KB] g=69, 16021 evaluated, 2085 expanded, 126 reopened
[t=0.197991s, 12780 KB] New best heuristic value for add: 45
[t=0.205432s, 12780 KB] g=69, 18233 evaluated, 2285 expanded, 136 reopened
[t=0.236338s, 12912 KB] New best heuristic value for add: 38
[t=0.242066s, 12912 KB] g=83, 22250 evaluated, 2685 expanded, 144 reopened
[t=0.265041s, 13044 KB] New best heuristic value for add: 36
[t=0.272099s, 13044 KB] g=89, 25505 evaluated, 2885 expanded, 158 reopened
[t=0.272132s, 13044 KB] New best heuristic value for add: 29
[t=0.272172s, 13044 KB] g=95, 25506 evaluated, 2885 expanded, 158 reopened
[t=0.322317s, 13692 KB] New best heuristic value for add: 23
[t=0.322906s, 13692 KB] g=107, 30957 evaluated, 3485 expanded, 172 reopened
[t=0.370361s, 13692 KB] New best heuristic value for add: 21
[t=0.371627s, 13692 KB] g=97, 34675 evaluated, 3885 expanded, 179 reopened
[t=0.408782s, 13700 KB] New best heuristic value for add: 19
[t=0.416873s, 13700 KB] g=108, 39246 evaluated, 4285 expanded, 193 reopened
[t=0.427801s, 13836 KB] New best heuristic value for add: 18
[t=0.430589s, 13836 KB] g=98, 40795 evaluated, 4485 expanded, 195 reopened
[t=0.437164s, 13836 KB] New best heuristic value for add: 14
[t=0.442792s, 13836 KB] g=133, 42020 evaluated, 4485 expanded, 197 reopened
[t=0.465856s, 13972 KB] New best heuristic value for add: 13
[t=0.466245s, 13972 KB] g=112, 44769 evaluated, 4885 expanded, 211 reopened
[t=0.494540s, 14108 KB] New best heuristic value for add: 9
[t=0.500731s, 14108 KB] g=118, 48023 evaluated, 5285 expanded, 220 reopened
[t=0.503742s, 14108 KB] New best heuristic value for add: 6
[t=0.504452s, 14108 KB] g=121, 48481 evaluated, 5285 expanded, 228 reopened
[t=0.522754s, 14240 KB] New best heuristic value for add: 0
[t=0.527988s, 14240 KB] g=127, 51579 evaluated, 5685 expanded, 247 reopened
[t=0.551449s, 14372 KB] Solution found!
[t=0.560020s, 14372 KB] Actual search time: 0.555013s
board p6 slow0-0 n1 n0 n1 (0)
move-up-slow slow0-0 n1 n4 (8)
move-down-fast fast0 n4 n0 (13)
board p0 fast0 n0 n0 n1 (0)
board p4 fast0 n0 n1 n2 (0)
move-up-fast fast0 n0 n6 (19)
leave p6 slow0-0 n4 n1 n0 (0)
board p6 slow1-0 n4 n0 n1 (0)
move-up-slow slow1-0 n4 n8 (9)
move-down-slow slow0-0 n4 n3 (6)
board p1 slow0-0 n3 n0 n1 (0)
move-up-slow slow0-0 n3 n4 (6)
leave p0 fast0 n6 n2 n1 (0)
board p2 fast0 n6 n1 n2 (0)
leave p4 fast0 n6 n2 n1 (0)
move-down-fast fast0 n6 n2 (13)
leave p2 fast0 n2 n1 n0 (0)
move-down-fast fast0 n2 n0 (7)
board p5 fast0 n0 n0 n1 (0)
move-up-fast fast0 n0 n4 (13)
board p3 slow1-0 n8 n1 n2 (0)
leave p6 slow1-0 n8 n2 n1 (0)
move-down-slow slow1-0 n8 n7 (6)
leave p3 slow1-0 n7 n1 n0 (0)
move-down-slow slow1-0 n7 n6 (6)
board p4 slow1-0 n6 n0 n1 (0)
move-down-slow slow1-0 n6 n5 (6)
leave p1 slow0-0 n4 n1 n0 (0)
board p1 fast0 n4 n1 n2 (0)
leave p5 fast0 n4 n2 n1 (0)
move-up-fast fast0 n4 n8 (13)
leave p4 slow1-0 n5 n1 n0 (0)
leave p1 fast0 n8 n1 n0 (0)
[t=0.560055s, 14372 KB] Plan length: 33 step(s).
[t=0.560055s, 14372 KB] Plan cost: 125
[t=0.560055s, 14372 KB] Expanded 6285 state(s).
[t=0.560055s, 14372 KB] Reopened 278 state(s).
[t=0.560055s, 14372 KB] Evaluated 56602 state(s).
[t=0.560055s, 14372 KB] Evaluations: 56602
[t=0.560055s, 14372 KB] Generated 97580 state(s).
[t=0.560055s, 14372 KB] Dead ends: 0 state(s).
[t=0.560055s, 14372 KB] Number of registered states: 56602
[t=0.560055s, 14372 KB] Int hash set load factor: 56602/65536 = 0.863678
[t=0.560055s, 14372 KB] Int hash set resizes: 16
[t=0.560055s, 14372 KB] Search time: 0.555186s
[t=0.560055s, 14372 KB] Total time: 0.560055s
Solution found.
Peak memory: 14372 KB
search exit code: 0

INFO     Planner time: 0.70s
