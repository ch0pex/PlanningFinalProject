INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p03.pddl --sas-file 'output/eager_wastar([add()], w=10, k_best=100)/transport/p03.txt.sas'
Parsing...
Parsing: [0.010s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.018s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 27 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
824 relevant atoms
832 auxiliary atoms
1656 final queue length
2796 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.030s CPU, 0.054s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.014s wall-clock]
Reordering and filtering variables...
8 of 8 variables necessary.
0 of 8 mutex groups necessary.
628 of 628 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.003s wall-clock]
Translator variables: 8
Translator derived variables: 0
Translator facts: 72
Translator goal facts: 4
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 628
Translator axioms: 0
Translator task size: 3696
Translator peak memory: 33160 KB
Writing output... [0.010s CPU, 0.012s wall-clock]
Done! [0.090s CPU, 0.129s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=10, k_best=100)/transport/p03.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=10, k_best=100)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=10, k_best=100)/transport/p03.txt.sas'"'"''
[t=0.002341s, 10804 KB] reading input...
[t=0.005338s, 10928 KB] done reading input!
[t=0.005465s, 11324 KB] Simplifying 1204 unary operators... done! [1204 unary operators]
[t=0.007745s, 11324 KB] time to simplify: 0.002279s
[t=0.007942s, 11324 KB] Initializing additive heuristic...
[t=0.008056s, 11324 KB] Building successor generator...done!
[t=0.008524s, 11324 KB] peak memory difference for successor generator creation: 0 KB
[t=0.008595s, 11324 KB] time for successor generation creation: 0.000000s
[t=0.008625s, 11324 KB] Variables: 8
[t=0.008659s, 11324 KB] FactPairs: 72
[t=0.008712s, 11324 KB] Bytes per state: 4
[t=0.008750s, 11324 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.008899s, 11324 KB] New best heuristic value for add: 299
[t=0.008992s, 11324 KB] g=0, 1 evaluated, 0 expanded
[t=0.009029s, 11324 KB] Initial heuristic value for add: 299
[t=0.009068s, 11324 KB] pruning method: none
[t=0.009098s, 11324 KB] New best heuristic value for add: 260
[t=0.009222s, 11324 KB] g=34, 5 evaluated, 1 expanded
[t=0.009254s, 11324 KB] New best heuristic value for add: 232
[t=0.009431s, 11324 KB] g=62, 11 evaluated, 9 expanded
[t=0.009466s, 11324 KB] New best heuristic value for add: 225
[t=0.009727s, 11324 KB] g=35, 24 evaluated, 9 expanded
[t=0.009760s, 11324 KB] New best heuristic value for add: 197
[t=0.010155s, 11324 KB] g=63, 41 evaluated, 39 expanded
[t=0.010188s, 11324 KB] New best heuristic value for add: 191
[t=0.010985s, 11324 KB] g=36, 86 evaluated, 39 expanded
[t=0.011023s, 11324 KB] New best heuristic value for add: 163
[t=0.011986s, 11324 KB] g=64, 131 evaluated, 129 expanded
[t=0.012018s, 11324 KB] New best heuristic value for add: 161
[t=0.015983s, 11324 KB] g=64, 313 evaluated, 129 expanded
[t=0.016810s, 11324 KB] New best heuristic value for add: 138
[t=0.018467s, 11324 KB] g=86, 380 evaluated, 229 expanded
[t=0.018497s, 11456 KB] New best heuristic value for add: 137
[t=0.025201s, 11456 KB] g=81, 757 evaluated, 329 expanded
[t=0.025635s, 11456 KB] New best heuristic value for add: 132
[t=0.025747s, 11456 KB] g=93, 780 evaluated, 329 expanded
[t=0.025799s, 11588 KB] New best heuristic value for add: 109
[t=0.032069s, 11588 KB] g=115, 1131 evaluated, 429 expanded
[t=0.033932s, 11720 KB] New best heuristic value for add: 108
[t=0.042549s, 11720 KB] g=110, 1556 evaluated, 529 expanded
[t=0.051950s, 11872 KB] New best heuristic value for add: 98
[t=0.052510s, 11872 KB] g=142, 1991 evaluated, 629 expanded
[t=0.052637s, 11872 KB] New best heuristic value for add: 93
[t=0.052829s, 11872 KB] g=131, 1993 evaluated, 629 expanded
[t=0.059031s, 11872 KB] New best heuristic value for add: 92
[t=0.061301s, 11872 KB] g=132, 2351 evaluated, 729 expanded
[t=0.061345s, 11872 KB] New best heuristic value for add: 78
[t=0.061476s, 11872 KB] g=184, 2359 evaluated, 729 expanded
[t=0.061504s, 12004 KB] New best heuristic value for add: 77
[t=0.066817s, 12004 KB] g=169, 2712 evaluated, 829 expanded
[t=0.067380s, 12004 KB] New best heuristic value for add: 70
[t=0.068092s, 12004 KB] g=191, 2777 evaluated, 829 expanded
[t=0.068405s, 12136 KB] New best heuristic value for add: 49
[t=0.074639s, 12136 KB] g=213, 3091 evaluated, 929 expanded
[t=0.074670s, 12136 KB] New best heuristic value for add: 48
[t=0.074849s, 12136 KB] g=203, 3103 evaluated, 929 expanded
[t=0.074918s, 12136 KB] New best heuristic value for add: 47
[t=0.075148s, 12136 KB] g=203, 3116 evaluated, 929 expanded
[t=0.075182s, 12136 KB] New best heuristic value for add: 31
[t=0.082482s, 12136 KB] g=219, 3486 evaluated, 1029 expanded
[t=0.083570s, 12268 KB] New best heuristic value for add: 30
[t=0.090627s, 12268 KB] g=220, 3888 evaluated, 1129 expanded, 2 reopened
[t=0.090659s, 12268 KB] New best heuristic value for add: 18
[t=0.090897s, 12268 KB] g=232, 3909 evaluated, 1129 expanded, 2 reopened
[t=0.092311s, 12400 KB] New best heuristic value for add: 2
[t=0.096294s, 12400 KB] g=248, 4261 evaluated, 1229 expanded, 4 reopened
[t=0.101254s, 12400 KB] New best heuristic value for add: 1
[t=0.103898s, 12400 KB] g=249, 4587 evaluated, 1329 expanded, 5 reopened
[t=0.104075s, 12532 KB] New best heuristic value for add: 0
[t=0.109255s, 12532 KB] g=250, 4922 evaluated, 1429 expanded, 7 reopened
[t=0.109754s, 12532 KB] Solution found!
[t=0.114732s, 12532 KB] Actual search time: 0.105634s
drive truck-2 city-loc-9 city-loc-6 (28)
pick-up truck-2 city-loc-6 package-3 capacity-3 capacity-4 (1)
pick-up truck-2 city-loc-6 package-4 capacity-2 capacity-3 (1)
drive truck-2 city-loc-6 city-loc-3 (34)
drive truck-2 city-loc-3 city-loc-1 (22)
drop truck-2 city-loc-1 package-3 capacity-2 capacity-3 (1)
drive truck-2 city-loc-1 city-loc-5 (37)
pick-up truck-2 city-loc-5 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-loc-5 city-loc-4 (12)
drive truck-2 city-loc-4 city-loc-8 (35)
drop truck-2 city-loc-8 package-4 capacity-2 capacity-3 (1)
drive truck-2 city-loc-8 city-loc-7 (30)
pick-up truck-1 city-loc-6 package-1 capacity-1 capacity-2 (1)
drive truck-1 city-loc-6 city-loc-9 (28)
drive truck-2 city-loc-7 city-loc-3 (16)
drop truck-2 city-loc-3 package-2 capacity-3 capacity-4 (1)
drop truck-1 city-loc-9 package-1 capacity-1 capacity-2 (1)
[t=0.114774s, 12532 KB] Plan length: 17 step(s).
[t=0.114774s, 12532 KB] Plan cost: 250
[t=0.114774s, 12532 KB] Expanded 1529 state(s).
[t=0.114774s, 12532 KB] Reopened 7 state(s).
[t=0.114774s, 12532 KB] Evaluated 5203 state(s).
[t=0.114774s, 12532 KB] Evaluations: 5203
[t=0.114774s, 12532 KB] Generated 11580 state(s).
[t=0.114774s, 12532 KB] Dead ends: 0 state(s).
[t=0.114774s, 12532 KB] Number of registered states: 5203
[t=0.114774s, 12532 KB] Int hash set load factor: 5203/8192 = 0.635132
[t=0.114774s, 12532 KB] Int hash set resizes: 13
[t=0.114774s, 12532 KB] Search time: 0.106024s
[t=0.114774s, 12532 KB] Total time: 0.114774s
Solution found.
Peak memory: 12532 KB
search exit code: 0

INFO     Planner time: 0.40s
