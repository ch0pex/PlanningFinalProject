INFO     planner time limit: 600s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 599s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/translate/translate.py transport/domain.pddl transport/p05.pddl --sas-file 'output/eager_wastar([add()], w=5, k_best=50)/transport/p05.txt.sas'
Parsing...
Parsing: [0.000s CPU, 0.006s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.020s CPU, 0.011s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 27 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1944 relevant atoms
1792 auxiliary atoms
3736 final queue length
6616 total queue pushes
Completing instantiation... [0.020s CPU, 0.028s wall-clock]
Instantiating: [0.050s CPU, 0.052s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.003s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
10 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.011s wall-clock]
Reordering and filtering variables...
10 of 10 variables necessary.
0 of 10 mutex groups necessary.
1572 of 1572 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.004s wall-clock]
Translator variables: 10
Translator derived variables: 0
Translator facts: 142
Translator goal facts: 6
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 1572
Translator axioms: 0
Translator task size: 9194
Translator peak memory: 37404 KB
Writing output... [0.020s CPU, 0.011s wall-clock]
Done! [0.100s CPU, 0.114s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: 'output/eager_wastar([add()], w=5, k_best=50)/transport/p05.txt.sas'
INFO     search time limit: 599s
INFO     search memory limit: None
INFO     search command line string: /mnt/c/Alvaro/Universidad/PlanningFinalProject/downward/builds/release/bin/downward --search 'eager_wastar([add()], w=5, k_best=50)' --internal-plan-file sas_plan < ''"'"'output/eager_wastar([add()], w=5, k_best=50)/transport/p05.txt.sas'"'"''
[t=0.001392s, 10804 KB] reading input...
[t=0.005716s, 11208 KB] done reading input!
[t=0.005828s, 11748 KB] Simplifying 3012 unary operators... done! [3012 unary operators]
[t=0.007889s, 11748 KB] time to simplify: 0.002060s
[t=0.008023s, 11920 KB] Initializing additive heuristic...
[t=0.008106s, 11920 KB] Building successor generator...done!
[t=0.008473s, 11920 KB] peak memory difference for successor generator creation: 0 KB
[t=0.008524s, 11920 KB] time for successor generation creation: 0.000000s
[t=0.008549s, 11920 KB] Variables: 10
[t=0.008570s, 11920 KB] FactPairs: 142
[t=0.008593s, 11920 KB] Bytes per state: 8
[t=0.008612s, 11920 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.008643s, 11920 KB] New best heuristic value for add: 391
[t=0.008708s, 11920 KB] g=0, 1 evaluated, 0 expanded
[t=0.008728s, 11920 KB] Initial heuristic value for add: 391
[t=0.008748s, 11920 KB] pruning method: none
[t=0.008767s, 11920 KB] New best heuristic value for add: 390
[t=0.008897s, 11920 KB] g=28, 5 evaluated, 1 expanded
[t=0.008919s, 11920 KB] New best heuristic value for add: 355
[t=0.009155s, 11920 KB] g=18, 14 evaluated, 1 expanded
[t=0.009174s, 11920 KB] New best heuristic value for add: 354
[t=0.009398s, 11920 KB] g=19, 23 evaluated, 14 expanded
[t=0.009418s, 11920 KB] New best heuristic value for add: 307
[t=0.009510s, 11920 KB] g=42, 26 evaluated, 14 expanded
[t=0.009536s, 11920 KB] New best heuristic value for add: 306
[t=0.011363s, 11920 KB] g=43, 81 evaluated, 64 expanded
[t=0.011672s, 11920 KB] New best heuristic value for add: 305
[t=0.017001s, 11920 KB] g=44, 252 evaluated, 114 expanded
[t=0.017027s, 11920 KB] New best heuristic value for add: 281
[t=0.017356s, 11920 KB] g=68, 262 evaluated, 114 expanded
[t=0.021008s, 12052 KB] New best heuristic value for add: 280
[t=0.025927s, 12052 KB] g=69, 530 evaluated, 164 expanded
[t=0.025948s, 12052 KB] New best heuristic value for add: 277
[t=0.027800s, 12052 KB] g=101, 598 evaluated, 164 expanded
[t=0.030363s, 12052 KB] New best heuristic value for add: 276
[t=0.035384s, 12052 KB] g=102, 833 evaluated, 214 expanded, 1 reopened
[t=0.035405s, 12052 KB] New best heuristic value for add: 272
[t=0.038119s, 12052 KB] g=94, 929 evaluated, 214 expanded, 1 reopened
[t=0.039665s, 12184 KB] New best heuristic value for add: 271
[t=0.043973s, 12184 KB] g=95, 1118 evaluated, 264 expanded, 4 reopened
[t=0.043994s, 12184 KB] New best heuristic value for add: 251
[t=0.044837s, 12184 KB] g=127, 1147 evaluated, 264 expanded, 4 reopened
[t=0.049026s, 12184 KB] New best heuristic value for add: 250
[t=0.053432s, 12184 KB] g=128, 1435 evaluated, 314 expanded, 4 reopened
[t=0.053458s, 12184 KB] New best heuristic value for add: 246
[t=0.053826s, 12184 KB] g=120, 1447 evaluated, 314 expanded, 4 reopened
[t=0.058332s, 12316 KB] New best heuristic value for add: 245
[t=0.063062s, 12316 KB] g=121, 1728 evaluated, 364 expanded, 4 reopened
[t=0.067887s, 12316 KB] New best heuristic value for add: 244
[t=0.071995s, 12316 KB] g=122, 2070 evaluated, 414 expanded, 4 reopened
[t=0.072015s, 12316 KB] New best heuristic value for add: 239
[t=0.072130s, 12316 KB] g=135, 2074 evaluated, 414 expanded, 4 reopened
[t=0.077197s, 12448 KB] New best heuristic value for add: 238
[t=0.078435s, 12448 KB] g=136, 2310 evaluated, 464 expanded, 4 reopened
[t=0.078463s, 12448 KB] New best heuristic value for add: 235
[t=0.081531s, 12448 KB] g=197, 2431 evaluated, 464 expanded, 4 reopened
[t=0.086567s, 12448 KB] New best heuristic value for add: 216
[t=0.087142s, 12448 KB] g=178, 2644 evaluated, 514 expanded, 4 reopened
[t=0.087167s, 12448 KB] New best heuristic value for add: 212
[t=0.092908s, 12448 KB] g=177, 2864 evaluated, 514 expanded, 4 reopened
[t=0.092934s, 12448 KB] New best heuristic value for add: 211
[t=0.095113s, 12448 KB] g=178, 2950 evaluated, 564 expanded, 4 reopened
[t=0.095658s, 12448 KB] New best heuristic value for add: 197
[t=0.096326s, 12448 KB] g=220, 3001 evaluated, 564 expanded, 4 reopened
[t=0.096347s, 12448 KB] New best heuristic value for add: 196
[t=0.096533s, 12448 KB] g=227, 3007 evaluated, 564 expanded, 4 reopened
[t=0.096552s, 12580 KB] New best heuristic value for add: 195
[t=0.103913s, 12580 KB] g=228, 3301 evaluated, 614 expanded, 4 reopened
[t=0.103942s, 12580 KB] New best heuristic value for add: 186
[t=0.104013s, 12580 KB] g=203, 3303 evaluated, 614 expanded, 4 reopened
[t=0.104592s, 12580 KB] New best heuristic value for add: 185
[t=0.111763s, 12580 KB] g=204, 3624 evaluated, 664 expanded, 4 reopened
[t=0.111784s, 12580 KB] New best heuristic value for add: 179
[t=0.112139s, 12580 KB] g=237, 3637 evaluated, 664 expanded, 4 reopened
[t=0.113906s, 12580 KB] New best heuristic value for add: 178
[t=0.121685s, 12580 KB] g=238, 4012 evaluated, 714 expanded, 4 reopened
[t=0.123375s, 12712 KB] New best heuristic value for add: 177
[t=0.130378s, 12712 KB] g=239, 4356 evaluated, 764 expanded, 4 reopened
[t=0.132955s, 12712 KB] New best heuristic value for add: 171
[t=0.136411s, 12712 KB] g=243, 4558 evaluated, 764 expanded, 4 reopened
[t=0.136442s, 12712 KB] New best heuristic value for add: 169
[t=0.136539s, 12712 KB] g=230, 4560 evaluated, 764 expanded, 4 reopened
[t=0.136572s, 12712 KB] New best heuristic value for add: 168
[t=0.140084s, 12712 KB] g=231, 4671 evaluated, 814 expanded, 4 reopened
[t=0.140106s, 12712 KB] New best heuristic value for add: 167
[t=0.140960s, 12712 KB] g=254, 4705 evaluated, 814 expanded, 4 reopened
[t=0.140987s, 12712 KB] New best heuristic value for add: 163
[t=0.141047s, 12712 KB] g=263, 4706 evaluated, 814 expanded, 4 reopened
[t=0.141466s, 12712 KB] New best heuristic value for add: 153
[t=0.147157s, 12712 KB] g=281, 4941 evaluated, 814 expanded, 5 reopened
[t=0.147193s, 12712 KB] New best heuristic value for add: 152
[t=0.147536s, 12712 KB] g=282, 4953 evaluated, 864 expanded, 5 reopened
[t=0.147571s, 12712 KB] New best heuristic value for add: 142
[t=0.147665s, 12712 KB] g=311, 4956 evaluated, 864 expanded, 5 reopened
[t=0.147690s, 12712 KB] New best heuristic value for add: 133
[t=0.148061s, 12712 KB] g=292, 4969 evaluated, 864 expanded, 5 reopened
[t=0.150231s, 12844 KB] New best heuristic value for add: 114
[t=0.155959s, 12844 KB] g=307, 5281 evaluated, 914 expanded, 6 reopened
[t=0.159821s, 12844 KB] New best heuristic value for add: 113
[t=0.163769s, 12844 KB] g=303, 5589 evaluated, 964 expanded, 8 reopened
[t=0.169323s, 12844 KB] New best heuristic value for add: 104
[t=0.172218s, 12844 KB] g=331, 5939 evaluated, 1014 expanded, 17 reopened
[t=0.172246s, 12968 KB] New best heuristic value for add: 89
[t=0.173957s, 12968 KB] g=332, 6009 evaluated, 1014 expanded, 17 reopened
[t=0.173977s, 12968 KB] New best heuristic value for add: 88
[t=0.176044s, 12968 KB] g=333, 6093 evaluated, 1064 expanded, 17 reopened
[t=0.176075s, 12968 KB] New best heuristic value for add: 78
[t=0.176323s, 12968 KB] g=361, 6103 evaluated, 1064 expanded, 17 reopened
[t=0.178214s, 12968 KB] New best heuristic value for add: 59
[t=0.181409s, 12968 KB] g=376, 6324 evaluated, 1114 expanded, 17 reopened
[t=0.181429s, 12968 KB] New best heuristic value for add: 58
[t=0.181595s, 12968 KB] g=363, 6330 evaluated, 1114 expanded, 17 reopened
[t=0.181614s, 12968 KB] New best heuristic value for add: 57
[t=0.187447s, 12968 KB] g=364, 6593 evaluated, 1164 expanded, 18 reopened
[t=0.197155s, 13092 KB] New best heuristic value for add: 56
[t=0.206898s, 13092 KB] g=398, 7469 evaluated, 1314 expanded, 24 reopened
[t=0.206926s, 13092 KB] New best heuristic value for add: 27
[t=0.207743s, 13092 KB] g=437, 7500 evaluated, 1314 expanded, 24 reopened
[t=0.207781s, 13092 KB] New best heuristic value for add: 20
[t=0.209797s, 13092 KB] g=461, 7593 evaluated, 1364 expanded, 24 reopened
[t=0.209828s, 13092 KB] New best heuristic value for add: 2
[t=0.209888s, 13092 KB] g=462, 7596 evaluated, 1364 expanded, 24 reopened
[t=0.209907s, 13224 KB] New best heuristic value for add: 1
[t=0.214170s, 13224 KB] g=463, 7795 evaluated, 1414 expanded, 26 reopened
[t=0.215608s, 13224 KB] New best heuristic value for add: 0
[t=0.218476s, 13224 KB] g=454, 8091 evaluated, 1464 expanded, 26 reopened
[t=0.218497s, 13356 KB] Solution found!
[t=0.222805s, 13356 KB] Actual search time: 0.214038s
drive truck-2 city-loc-5 city-loc-6 (29)
pick-up truck-2 city-loc-6 package-5 capacity-1 capacity-2 (1)
drive truck-2 city-loc-6 city-loc-5 (29)
drive truck-1 city-loc-12 city-loc-7 (18)
drive truck-1 city-loc-7 city-loc-9 (24)
pick-up truck-1 city-loc-9 package-4 capacity-2 capacity-3 (1)
drive truck-1 city-loc-9 city-loc-8 (25)
drop truck-1 city-loc-8 package-4 capacity-2 capacity-3 (1)
drive truck-1 city-loc-8 city-loc-9 (25)
drive truck-1 city-loc-9 city-loc-7 (24)
drive truck-1 city-loc-7 city-loc-3 (20)
pick-up truck-2 city-loc-5 package-3 capacity-0 capacity-1 (1)
drive truck-2 city-loc-5 city-loc-2 (16)
drop truck-2 city-loc-2 package-3 capacity-0 capacity-1 (1)
drive truck-2 city-loc-2 city-loc-4 (23)
drop truck-2 city-loc-4 package-5 capacity-1 capacity-2 (1)
pick-up truck-2 city-loc-4 package-6 capacity-1 capacity-2 (1)
drive truck-2 city-loc-4 city-loc-7 (29)
drive truck-2 city-loc-7 city-loc-3 (20)
drive truck-2 city-loc-3 city-loc-10 (18)
pick-up truck-2 city-loc-10 package-1 capacity-0 capacity-1 (1)
drive truck-2 city-loc-10 city-loc-15 (24)
drop truck-2 city-loc-15 package-6 capacity-0 capacity-1 (1)
drive truck-2 city-loc-15 city-loc-13 (30)
drop truck-2 city-loc-13 package-1 capacity-1 capacity-2 (1)
drive truck-2 city-loc-13 city-loc-6 (17)
drive truck-2 city-loc-6 city-loc-11 (16)
pick-up truck-2 city-loc-11 package-2 capacity-1 capacity-2 (1)
drive truck-2 city-loc-11 city-loc-15 (30)
drive truck-2 city-loc-15 city-loc-3 (25)
drop truck-2 city-loc-3 package-2 capacity-1 capacity-2 (1)
[t=0.222833s, 13356 KB] Plan length: 31 step(s).
[t=0.222833s, 13356 KB] Plan cost: 454
[t=0.222833s, 13356 KB] Expanded 1514 state(s).
[t=0.222833s, 13356 KB] Reopened 26 state(s).
[t=0.222833s, 13356 KB] Evaluated 8409 state(s).
[t=0.222833s, 13356 KB] Evaluations: 8409
[t=0.222833s, 13356 KB] Generated 18321 state(s).
[t=0.222833s, 13356 KB] Dead ends: 0 state(s).
[t=0.222833s, 13356 KB] Number of registered states: 8409
[t=0.222833s, 13356 KB] Int hash set load factor: 8409/16384 = 0.513245
[t=0.222833s, 13356 KB] Int hash set resizes: 14
[t=0.222833s, 13356 KB] Search time: 0.214221s
[t=0.222833s, 13356 KB] Total time: 0.222833s
Solution found.
Peak memory: 13356 KB
search exit code: 0

INFO     Planner time: 0.39s
